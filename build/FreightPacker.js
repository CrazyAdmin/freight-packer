/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 46);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar trimVariableRegex = new RegExp(/(?:\\d|_|-)+$/);\nvar twopi = 2 * Math.PI;\nvar goldenRatio = (1 + Math.sqrt(5)) / 2;\nvar goldenRatioConjugate = goldenRatio - 1;\n\nvar typeofObject = 'object';\n\nvar Utils = function () {\n    function Utils() {\n        _classCallCheck(this, Utils);\n    }\n\n    _createClass(Utils, null, [{\n        key: 'Redefine',\n        value: function Redefine(object, constructor) {\n            var classProperties = object;\n            var instanceProperties = object.prototype;\n\n            var def = constructor(instanceProperties);\n\n            Object.assign(def, classProperties);\n            Object.assign(def.prototype, instanceProperties);\n            Object.defineProperties(def, Object.getOwnPropertyDescriptors(classProperties));\n            Object.defineProperties(def.prototype, Object.getOwnPropertyDescriptors(instanceProperties));\n\n            return def;\n        }\n\n        /**\r\n         * @template T\r\n         * @param {T} target \r\n         * @param {Object} source \r\n         * @returns {T}\r\n         */\n\n    }, {\n        key: 'AssignUndefined',\n        value: function AssignUndefined(target, source) {\n            if ((typeof target === 'undefined' ? 'undefined' : _typeof(target)) !== typeofObject) {\n                target = {};\n                Object.assign(target, source);\n                return target;\n            }\n\n            var keys = Object.keys(source);\n            keys.forEach(function (key) {\n                if (_typeof(source[key]) === typeofObject) Utils.AssignUndefined(target[key], source[key]);\n                if (target[key] === undefined) target[key] = source[key];\n            });\n            return target;\n        }\n    }, {\n        key: 'Snapshot',\n        value: function Snapshot(obj) {\n            return JSON.parse(JSON.stringify(obj));\n        }\n    }, {\n        key: 'GetRectOffset',\n        value: function GetRectOffset(element) {\n            var style = window.getComputedStyle(element),\n                marginLeft = parseFloat(style.marginLeft),\n                marginTop = parseFloat(style.marginTop),\n                paddingLeft = parseFloat(style.paddingLeft),\n                paddingTop = parseFloat(style.paddingTop);\n            return { x: marginLeft + paddingLeft, y: marginTop + paddingTop };\n        }\n    }, {\n        key: 'TrimVariable',\n        value: function TrimVariable(input) {\n            return input.replace(trimVariableRegex, '');\n        }\n    }, {\n        key: 'LimitString',\n        value: function LimitString(str, length) {\n            if (str.length > length) str = str.substring(str.length - length);\n            return str;\n        }\n    }, {\n        key: 'LoopIndex',\n        value: function LoopIndex(i, len) {\n            i = i % len;\n            if (i < 0) i = len + i;\n            return i;\n        }\n    }, {\n        key: 'FastCircleLoop',\n        value: function FastCircleLoop(divisions, callback) {\n            // ref: http://iquilezles.org/www/articles/sincos/sincos.htm\n            var da = twopi / divisions;\n            var a = Math.cos(da);\n            var b = Math.sin(da);\n            var cos = 1;\n            var sin = 0;\n            for (var i = 0; i < divisions; i++) {\n                var nc = a * cos - b * sin;\n                var ns = b * cos + a * sin;\n                cos = nc;\n                sin = ns;\n                callback(cos, sin);\n            }\n        }\n    }, {\n        key: 'ColorPaletteAsVec3',\n        value: function ColorPaletteAsVec3(t, a, b, c, d, color) {\n            // ref: http://iquilezles.org/www/articles/palettes/palettes.htm\n            // return a + b * cos( 6.28318 * ( c * t + d ) );\n            color = color || new THREE.Color();\n            var r = a.x + b.x * Math.cos(twopi * (c.x * t + d.x)),\n                g = a.y + b.y * Math.cos(twopi * (c.y * t + d.y)),\n                b = a.z + b.z * Math.cos(twopi * (c.z * t + d.z));\n            return color.set(r, g, b);\n        }\n\n        /**\r\n         * Returns the next value [0, 1] in the golden series\r\n         * @param {Number} base \r\n         */\n\n    }, {\n        key: 'GoldenSeries',\n        value: function GoldenSeries(base) {\n            return (base + goldenRatioConjugate) % 1;\n        }\n    }, {\n        key: 'VecToString',\n        value: function VecToString(vector, fixed) {\n            fixed = fixed || 8;\n            return vector.x.toFixed(fixed) + ', ' + vector.y.toFixed(fixed) + (vector.z !== undefined ? ', ' + vector.z.toFixed(fixed) + (vector.w !== undefined ? ', ' + vector.w.toFixed(fixed) : '') : '');\n        }\n    }]);\n\n    return Utils;\n}();\n\nexports.default = Utils;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n");

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/** SignalerCallback \r\n * @callback SignalerCallback\r\n * @param {Array<*>} args\r\n */\n\nvar Signaler = function () {\n    function Signaler() {\n        _classCallCheck(this, Signaler);\n\n        /** @type {Array<SignalerCallback>} */\n        this.signals = {};\n        /** @type {Array<string>} */\n        this.dispatches = {};\n    }\n\n    /** @param {string} event @param {SignalerCallback} callback */\n\n\n    _createClass(Signaler, [{\n        key: \"OnIncludingPrior\",\n        value: function OnIncludingPrior(event, callback) {\n            var args = this.dispatches[event];\n            if (args) {\n                callback.apply(undefined, _toConsumableArray(args));\n            } else {\n                this.On(event, callback);\n            }\n        }\n\n        /** @param {string} event @param {SignalerCallback} callback */\n\n    }, {\n        key: \"On\",\n        value: function On(event, callback) {\n            if (this.signals[event] === undefined) {\n                this.signals[event] = [];\n            }\n            this.signals[event].push(callback);\n        }\n\n        /** @param {string} event @param {SignalerCallback} callback */\n\n    }, {\n        key: \"Off\",\n        value: function Off(event, callback) {\n            var callbacks = this.signals[event];\n            if (callbacks) {\n                var index = callbacks.indexOf(callback);\n                if (index != -1) {\n                    callbacks.splice(index, 1);\n                }\n            }\n        }\n\n        /** @param {string} event @param {Array<*>} [args] */\n\n    }, {\n        key: \"Dispatch\",\n        value: function Dispatch(event) {\n            for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n                args[_key - 1] = arguments[_key];\n            }\n\n            this.dispatches[event] = args;\n            var callbacks = this.signals[event];\n            if (callbacks) {\n                for (var i = 0, len = callbacks.length; i < len; i++) {\n                    callbacks[i].apply(callbacks, args);\n                }\n            }\n        }\n    }]);\n\n    return Signaler;\n}();\n\nexports.default = Signaler;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXBpL3V0aWxzL2Npay9TaWduYWxlci5qcz8zNjA4Il0sIm5hbWVzIjpbIlNpZ25hbGVyIiwic2lnbmFscyIsImRpc3BhdGNoZXMiLCJldmVudCIsImNhbGxiYWNrIiwiYXJncyIsIk9uIiwidW5kZWZpbmVkIiwicHVzaCIsImNhbGxiYWNrcyIsImluZGV4IiwiaW5kZXhPZiIsInNwbGljZSIsImkiLCJsZW4iLCJsZW5ndGgiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUNBOzs7OztJQUtNQSxRO0FBQ0Ysd0JBQWE7QUFBQTs7QUFDVDtBQUNBLGFBQUtDLE9BQUwsR0FBZSxFQUFmO0FBQ0E7QUFDQSxhQUFLQyxVQUFMLEdBQWtCLEVBQWxCO0FBQ0g7O0FBRUQ7Ozs7O3lDQUNpQkMsSyxFQUFPQyxRLEVBQVM7QUFDN0IsZ0JBQUlDLE9BQU8sS0FBS0gsVUFBTCxDQUFnQkMsS0FBaEIsQ0FBWDtBQUNBLGdCQUFHRSxJQUFILEVBQVE7QUFDSkQsNkRBQVlDLElBQVo7QUFDSCxhQUZELE1BR0k7QUFDQSxxQkFBS0MsRUFBTCxDQUFRSCxLQUFSLEVBQWVDLFFBQWY7QUFDSDtBQUNKOztBQUVEOzs7OzJCQUNHRCxLLEVBQU9DLFEsRUFBUztBQUNmLGdCQUFHLEtBQUtILE9BQUwsQ0FBYUUsS0FBYixNQUF3QkksU0FBM0IsRUFBcUM7QUFDakMscUJBQUtOLE9BQUwsQ0FBYUUsS0FBYixJQUFzQixFQUF0QjtBQUNIO0FBQ0QsaUJBQUtGLE9BQUwsQ0FBYUUsS0FBYixFQUFvQkssSUFBcEIsQ0FBeUJKLFFBQXpCO0FBQ0g7O0FBRUQ7Ozs7NEJBQ0lELEssRUFBT0MsUSxFQUFTO0FBQ2hCLGdCQUFJSyxZQUFZLEtBQUtSLE9BQUwsQ0FBYUUsS0FBYixDQUFoQjtBQUNBLGdCQUFHTSxTQUFILEVBQWE7QUFDVCxvQkFBSUMsUUFBUUQsVUFBVUUsT0FBVixDQUFrQlAsUUFBbEIsQ0FBWjtBQUNBLG9CQUFHTSxTQUFTLENBQUMsQ0FBYixFQUFlO0FBQ1hELDhCQUFVRyxNQUFWLENBQWlCRixLQUFqQixFQUF3QixDQUF4QjtBQUNIO0FBQ0o7QUFDSjs7QUFFRDs7OztpQ0FDU1AsSyxFQUFlO0FBQUEsOENBQUxFLElBQUs7QUFBTEEsb0JBQUs7QUFBQTs7QUFDcEIsaUJBQUtILFVBQUwsQ0FBZ0JDLEtBQWhCLElBQXlCRSxJQUF6QjtBQUNBLGdCQUFJSSxZQUFZLEtBQUtSLE9BQUwsQ0FBYUUsS0FBYixDQUFoQjtBQUNBLGdCQUFHTSxTQUFILEVBQWE7QUFDVCxxQkFBSSxJQUFJSSxJQUFJLENBQVIsRUFBV0MsTUFBTUwsVUFBVU0sTUFBL0IsRUFBdUNGLElBQUlDLEdBQTNDLEVBQWdERCxHQUFoRCxFQUFvRDtBQUNoREosOEJBQVVJLENBQVYsbUJBQWdCUixJQUFoQjtBQUNIO0FBQ0o7QUFDSjs7Ozs7O2tCQUlVTCxRIiwiZmlsZSI6IjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLyoqIFNpZ25hbGVyQ2FsbGJhY2sgXHJcbiAqIEBjYWxsYmFjayBTaWduYWxlckNhbGxiYWNrXHJcbiAqIEBwYXJhbSB7QXJyYXk8Kj59IGFyZ3NcclxuICovXHJcblxyXG5jbGFzcyBTaWduYWxlciB7XHJcbiAgICBjb25zdHJ1Y3Rvcigpe1xyXG4gICAgICAgIC8qKiBAdHlwZSB7QXJyYXk8U2lnbmFsZXJDYWxsYmFjaz59ICovXHJcbiAgICAgICAgdGhpcy5zaWduYWxzID0ge307XHJcbiAgICAgICAgLyoqIEB0eXBlIHtBcnJheTxzdHJpbmc+fSAqL1xyXG4gICAgICAgIHRoaXMuZGlzcGF0Y2hlcyA9IHt9O1xyXG4gICAgfVxyXG5cclxuICAgIC8qKiBAcGFyYW0ge3N0cmluZ30gZXZlbnQgQHBhcmFtIHtTaWduYWxlckNhbGxiYWNrfSBjYWxsYmFjayAqL1xyXG4gICAgT25JbmNsdWRpbmdQcmlvcihldmVudCwgY2FsbGJhY2spe1xyXG4gICAgICAgIHZhciBhcmdzID0gdGhpcy5kaXNwYXRjaGVzW2V2ZW50XTtcclxuICAgICAgICBpZihhcmdzKXtcclxuICAgICAgICAgICAgY2FsbGJhY2soLi4uYXJncyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgIHRoaXMuT24oZXZlbnQsIGNhbGxiYWNrKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIEBwYXJhbSB7c3RyaW5nfSBldmVudCBAcGFyYW0ge1NpZ25hbGVyQ2FsbGJhY2t9IGNhbGxiYWNrICovXHJcbiAgICBPbihldmVudCwgY2FsbGJhY2spe1xyXG4gICAgICAgIGlmKHRoaXMuc2lnbmFsc1tldmVudF0gPT09IHVuZGVmaW5lZCl7XHJcbiAgICAgICAgICAgIHRoaXMuc2lnbmFsc1tldmVudF0gPSBbXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5zaWduYWxzW2V2ZW50XS5wdXNoKGNhbGxiYWNrKTtcclxuICAgIH1cclxuXHJcbiAgICAvKiogQHBhcmFtIHtzdHJpbmd9IGV2ZW50IEBwYXJhbSB7U2lnbmFsZXJDYWxsYmFja30gY2FsbGJhY2sgKi9cclxuICAgIE9mZihldmVudCwgY2FsbGJhY2spe1xyXG4gICAgICAgIHZhciBjYWxsYmFja3MgPSB0aGlzLnNpZ25hbHNbZXZlbnRdO1xyXG4gICAgICAgIGlmKGNhbGxiYWNrcyl7XHJcbiAgICAgICAgICAgIHZhciBpbmRleCA9IGNhbGxiYWNrcy5pbmRleE9mKGNhbGxiYWNrKTtcclxuICAgICAgICAgICAgaWYoaW5kZXggIT0gLTEpe1xyXG4gICAgICAgICAgICAgICAgY2FsbGJhY2tzLnNwbGljZShpbmRleCwgMSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIEBwYXJhbSB7c3RyaW5nfSBldmVudCBAcGFyYW0ge0FycmF5PCo+fSBbYXJnc10gKi9cclxuICAgIERpc3BhdGNoKGV2ZW50LCAuLi5hcmdzKXtcclxuICAgICAgICB0aGlzLmRpc3BhdGNoZXNbZXZlbnRdID0gYXJncztcclxuICAgICAgICB2YXIgY2FsbGJhY2tzID0gdGhpcy5zaWduYWxzW2V2ZW50XTtcclxuICAgICAgICBpZihjYWxsYmFja3Mpe1xyXG4gICAgICAgICAgICBmb3IodmFyIGkgPSAwLCBsZW4gPSBjYWxsYmFja3MubGVuZ3RoOyBpIDwgbGVuOyBpKyspe1xyXG4gICAgICAgICAgICAgICAgY2FsbGJhY2tzW2ldKC4uLmFyZ3MpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgU2lnbmFsZXI7XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2FwaS91dGlscy9jaWsvU2lnbmFsZXIuanMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1\n");

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Utils = __webpack_require__(0);\n\nvar _Utils2 = _interopRequireDefault(_Utils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar logType = {\n    trace: 0,\n    normal: 1,\n    warn: 2\n};\n\nvar logTypeLabel = {\n    0: 'Trace',\n    1: 'Log',\n    2: 'Warn'\n};\n\nvar defaultPrintFilter = {\n    0: true,\n    1: true,\n    2: true\n};\n\nvar programStartTime = Date.now();\nvar messages = [];\nvar warnOnce = {};\n\nvar Message = function () {\n    function Message(type) {\n        var _this = this;\n\n        _classCallCheck(this, Message);\n\n        this.type = type;\n        this.timestamp = Date.now();\n        this.content = [];\n\n        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = arguments[_key];\n        }\n\n        args.forEach(function (arg) {\n            if (typeof arg === 'string') {\n                _this.content.push(arg);\n            } else {\n                try {\n                    var json = JSON.stringify(arg).substr(0, 2000);\n                    _this.content.push(json);\n                } catch (err) {\n                    _this.content.push('  parse error: ' + err);\n                }\n            }\n        });\n    }\n\n    _createClass(Message, [{\n        key: 'ToString',\n        value: function ToString() {\n            return ((this.timestamp - programStartTime) / 1000).toFixed(2) + ' ' + logTypeLabel[this.type];\n        }\n    }]);\n\n    return Message;\n}();\n\nvar Logger = function () {\n    function Logger() {\n        _classCallCheck(this, Logger);\n    }\n\n    _createClass(Logger, null, [{\n        key: 'AddLog',\n        value: function AddLog(message) {\n            messages.push(message);\n        }\n    }, {\n        key: 'Trace',\n        value: function Trace() {\n            if (this._active) {\n                for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                    args[_key2] = arguments[_key2];\n                }\n\n                var message = new (Function.prototype.bind.apply(Message, [null].concat([logType.trace], args)))();\n                this.AddLog(message);\n                if (this._toConsole || this._traceToConsole) {\n                    var _console;\n\n                    (_console = console).groupCollapsed.apply(_console, args);\n                    console.trace('stack');\n                    console.groupEnd();\n                }\n            }\n        }\n    }, {\n        key: 'Log',\n        value: function Log() {\n            if (this._active) {\n                for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n                    args[_key3] = arguments[_key3];\n                }\n\n                var message = new (Function.prototype.bind.apply(Message, [null].concat([logType.normal], args)))();\n                this.AddLog(message);\n                if (this._toConsole) {\n                    var _console2;\n\n                    (_console2 = console).log.apply(_console2, args);\n                }\n            }\n        }\n    }, {\n        key: 'Warn',\n        value: function Warn() {\n            if (this._active) {\n                var _console3;\n\n                for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n                    args[_key4] = arguments[_key4];\n                }\n\n                var message = new (Function.prototype.bind.apply(Message, [null].concat([logType.warn], args)))();\n                this.AddLog(message);\n                if (this._toConsole) (_console3 = console).warn.apply(_console3, args);\n            }\n        }\n    }, {\n        key: 'LogOnce',\n        value: function LogOnce(id) {\n            if (this._active && !warnOnce[id]) {\n                warnOnce[id] = true;\n\n                for (var _len5 = arguments.length, args = Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n                    args[_key5 - 1] = arguments[_key5];\n                }\n\n                Logger.Log.apply(Logger, args);\n            }\n        }\n    }, {\n        key: 'WarnOnce',\n        value: function WarnOnce(id) {\n            if (this._active && !warnOnce[id]) {\n                warnOnce[id] = true;\n\n                for (var _len6 = arguments.length, args = Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {\n                    args[_key6 - 1] = arguments[_key6];\n                }\n\n                Logger.Warn.apply(Logger, args);\n            }\n        }\n    }, {\n        key: 'Print',\n        value: function Print(filter) {\n            _Utils2.default.AssignUndefined(filter, defaultPrintFilter);\n\n            var output = 'Log:\\n';\n            messages.forEach(function (message) {\n                if (filter[message.type]) {\n                    output += message.ToString() + '\\n';\n                }\n            });\n\n            return output;\n        }\n    }, {\n        key: 'active',\n        set: function set(value) {\n            this._active = value;\n        }\n    }, {\n        key: 'toConsole',\n        set: function set(value) {\n            this._toConsole = value;\n        }\n    }, {\n        key: 'traceToConsole',\n        set: function set(value) {\n            this._traceToConsole = value;\n        }\n    }]);\n\n    return Logger;\n}();\n\nLogger.active = true;\n\nexports.default = Logger;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2\n");

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _Utils = __webpack_require__(0);\n\nvar _Utils2 = _interopRequireDefault(_Utils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar defaultGUIParams = { publish: true, key: '' };\n// dat.GUI console mirroring\n// Access with >> dat.list\n\nvar dat = {\n    guis: [],\n\n    controllers: {\n        Controller: function Controller(target, key) {\n\n            this.label = key;\n\n            var onChangeCallback;\n            this.onChange = function (callback) {\n                onChangeCallback = callback;\n            };\n\n            var valueProp = {\n                get: function get() {\n                    return target[key];\n                },\n                set: function set(value) {\n                    target[key] = value;\n                    if (onChangeCallback) onChangeCallback();\n                }\n            };\n            Object.defineProperty(this, 'value', valueProp);\n\n            Object.defineProperties(this, {\n                list: {\n                    get: function () {\n                        var isFunction = typeof target[key] === 'function';\n                        if (isFunction) {\n                            return function () {\n                                return {\n                                    get: function get() {\n                                        target[key]();\n                                        return target[key];\n                                    }\n                                };\n                            };\n                        } else {\n                            return function () {\n                                return valueProp;\n                            };\n                        }\n                    }()\n                }\n            });\n\n            this.step = function () {\n                return this;\n            };\n            this.listen = function () {\n                return this;\n            };\n            this.updateDisplay = function () {\n                return this;\n            };\n        }\n    },\n\n    GUI: function GUI(params) {\n        this.i = 0;\n        this.data = {};\n        this.__controllers = [];\n        this.__folders = [];\n\n        params = _Utils2.default.AssignUndefined(params, defaultGUIParams);\n\n        this.label = params.label;\n\n        if (params.publish) dat.guis.push(this);\n\n        this.add = function (target, key) {\n            var controller = new dat.controllers.Controller(target, key);\n            this.__controllers.push(controller);\n            var isFunction = typeof target[key] === 'function';\n            this.data[(this.i++).toString() + ') ' + controller.label + (isFunction ? '()' : '')] = controller;\n            return controller;\n        };\n\n        this.addFolder = function (label) {\n            var folder = new dat.GUI({ publish: false, key: label });\n            this.__folders.push(folder);\n            this.data[(this.i++).toString() + ') >> ' + label] = folder;\n            return folder;\n        };\n\n        this.open = function () {\n            return this;\n        };\n\n        Object.defineProperties(this, {\n            domElement: {\n                get: function get() {\n                    return document.createElement('div');\n                }\n            },\n            list: {\n                get: function get() {\n                    var result = {};\n                    var keys = Object.keys(this.data);\n                    var data = this.data;\n\n                    var _loop = function _loop() {\n                        var key = keys[iKey];\n                        var listProp = data[key].list;\n                        Object.defineProperty(result, key, listProp.get ? listProp : {\n                            get: function get() {\n                                return listProp;\n                            }\n                        });\n                    };\n\n                    for (var iKey = 0; iKey < keys.length; iKey++) {\n                        _loop();\n                    }\n                    return result;\n                }\n            }\n        });\n\n        this.destroy = function () {\n            var index = dat.guis.indexOf(this);\n            if (index !== -1) dat.guis.splice(index, 1);\n        };\n    }\n};\n\nObject.defineProperties(dat, {\n    list: {\n        get: function get() {\n            var result = [];\n            for (var i = 0; i < this.guis.length; i++) {\n                result[i] = this.guis[i].list;\n            }\n            return result;\n        }\n    }\n});\n\nexports.default = dat;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3\n");

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _ColorTemplate = __webpack_require__(56);\n\nvar _ColorTemplate2 = _interopRequireDefault(_ColorTemplate);\n\nvar _Signaler = __webpack_require__(1);\n\nvar _Signaler2 = _interopRequireDefault(_Signaler);\n\nvar _Resources = __webpack_require__(25);\n\nvar _Resources2 = _interopRequireDefault(_Resources);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar SolidMaterialType = THREE.MeshStandardMaterial;\nvar TransparentMaterialType = THREE.MeshStandardMaterial;\nvar InvisibleMaterialType = THREE.MeshBasicMaterial;\n\nvar defaultGeometry = new THREE.CubeGeometry(1, 1, 1);\nvar defaultMeshMaterial = new SolidMaterialType({ color: 0xaaaaaa });\n\nvar objectLoader = new THREE.ObjectLoader();\nvar jsonLoader = new THREE.JSONLoader();\n\nvar castShadow = true;\nvar receiveShadow = true;\n\n/** @type {Map<string, ColorTemplate>} */\nvar colorTemplates = new Map();\n\nvar signaler = new _Signaler2.default();\nvar signals = {\n    resourcesSet: 'resourcesSet'\n};\n\nvar _resources = Symbol('resources');\n\nvar Asset = function () {\n    function Asset() {\n        _classCallCheck(this, Asset);\n    }\n\n    /** @param {Resources} value */\n\n\n    _createClass(Asset, null, [{\n        key: \"SetTextureMap\",\n\n\n        /**\r\n         * @param {string} url \r\n         * @param {THREE.Material} material \r\n         * @param {string} mapName \r\n         * @returns {Promise<THREE.Texture>}\r\n         */\n        value: function SetTextureMap(url, material, mapName) {\n            return new Promise(function (resolve, reject) {\n                signaler.OnIncludingPrior(signals.resourcesSet, function () {\n                    var texture = material[mapName];\n                    if (texture instanceof THREE.Texture || texture === null) {\n                        material[mapName] = new THREE.TextureLoader().load(Asset.resources.texturesPath + url, resolve, undefined, reject);\n                    }\n                });\n            });\n        }\n\n        /**\r\n         * @param {Number} color hex\r\n         */\n\n    }, {\n        key: \"CreateSolidMaterialMatte\",\n        value: function CreateSolidMaterialMatte(color) {\n            return new Asset.SolidMaterialType({ color: color, roughness: 1, metalness: .2 });\n        }\n\n        /**\r\n         * \r\n         * @param {THREE.Geometry|THREE.BufferGeometry} geometry \r\n         * @param {THREE.Material} [material]\r\n         */\n\n    }, {\n        key: \"CreateMesh\",\n        value: function CreateMesh(geometry, material) {\n            geometry = geometry || defaultGeometry;\n            material = material || defaultMeshMaterial;\n\n            var mesh = new THREE.Mesh(geometry, material);\n            return mesh;\n        }\n    }, {\n        key: \"RestoreMaterial\",\n        value: function RestoreMaterial(material, modified) {\n            if (modified === undefined) return;\n\n            var keys = Object.keys(modified);\n            for (var i = 0; i < keys.length; i++) {\n                var key = keys[i];\n                if (material[key] !== undefined) {\n                    if (material[key].setHex) {\n                        /** @type {THREE.Color} */\n                        var color = material.color;\n                        color.setHex(modified[key]);\n                    } else {\n                        material[key] = modified[key];\n                    }\n                }\n            }\n        }\n    }, {\n        key: \"SetMaterialFocus\",\n        value: function SetMaterialFocus(material, value, modified) {\n\n            /** @type {THREE.Color} */\n            var color = material.color;\n            if (color !== undefined) {\n                if (modified) modified.color = color.getHex();\n\n                var reduce = (value - 1) / 4;\n                color.r = THREE.Math.clamp(color.r - reduce, 0, 1);\n                color.g = THREE.Math.clamp(color.g - reduce, 0, 1);\n                color.b = THREE.Math.clamp(color.b - reduce, 0, 1);\n            }\n\n            /** @type {Number} */\n            var opacity = material.opacity;\n            if (opacity !== undefined) {\n                if (modified) {\n                    modified.opacity = opacity;\n                    modified.transparent = material.transparent;\n                }\n\n                material.opacity = THREE.Math.clamp(material.opacity * value, 0, 1);;\n                material.transparent = material.opacity < 1;\n            }\n        }\n\n        /**\r\n         * @typedef GeometryJSONReturn\r\n         * @property {THREE.Geometry|THREE.BufferGeometry} geometry\r\n         * @property {Array<THREE.Material>} [materials]\r\n         * \r\n         * @param {Object} json - Representing Geometry or BufferGeometry json data\r\n         * @param {string} [texturePath] - optional texture url \r\n         * @returns {GeometryJSONReturn}\r\n         */\n\n    }, {\n        key: \"FromGeometryJSON\",\n        value: function FromGeometryJSON(json, texturePath) {\n            return jsonLoader.parse(json, texturePath);\n        }\n\n        /**\r\n         * @param {Object} json \r\n         * @returns {THREE.Object3D}\r\n         */\n\n    }, {\n        key: \"FromJSON\",\n        value: function FromJSON(json) {\n            return objectLoader.parse(json);\n        }\n\n        /** @param {THREE.Object3D} object */\n\n    }, {\n        key: \"StandardSceneObject\",\n        value: function StandardSceneObject(object) {\n            Asset.CastReceiveShadow(object);\n        }\n\n        /** @param {THREE.Object3D} object @param {Boolean} [value] */\n\n    }, {\n        key: \"CastReceiveShadow\",\n        value: function CastReceiveShadow(object, value) {\n            object.traverse(function (child) {\n                if (child instanceof THREE.Mesh) {\n                    child.castShadow = value === undefined ? castShadow : value;\n                    child.receiveShadow = value === undefined ? receiveShadow : value;\n                }\n            });\n        }\n\n        /** @param {THREE.Object3D} object @param {Boolean} [value] */\n\n    }, {\n        key: \"ReceiveShadow\",\n        value: function ReceiveShadow(object, value) {\n            if (value === undefined) value = receiveShadow;\n            object.traverse(function (child) {\n                if (child instanceof THREE.Mesh) {\n                    child.receiveShadow = value;\n                }\n            });\n        }\n\n        /** @param {THREE.Object3D} object @param {Boolean} [value] */\n\n    }, {\n        key: \"CastShadow\",\n        value: function CastShadow(object, value) {\n            if (value === undefined) value = castShadow;\n            object.traverse(function (child) {\n                if (child instanceof THREE.Mesh) {\n                    child.castShadow = value;\n                }\n            });\n        }\n\n        /**\r\n         * @param {string} key \r\n         * @param {Array<string|THREE.Color>} colors \r\n         */\n\n    }, {\n        key: \"CreateColorTemplate\",\n        value: function CreateColorTemplate(key) {\n            for (var _len = arguments.length, colors = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n                colors[_key - 1] = arguments[_key];\n            }\n\n            var template = new (Function.prototype.bind.apply(_ColorTemplate2.default, [null].concat(colors)))();\n            colorTemplates.set(key, template);\n        }\n\n        /**\r\n         * @param {string} key \r\n         */\n\n    }, {\n        key: \"ColorTemplates\",\n        value: function ColorTemplates(key) {\n            return colorTemplates.get(key);\n        }\n    }, {\n        key: \"resources\",\n        set: function set(value) {\n            Asset[_resources] = value;\n            signaler.Dispatch(signals.resourcesSet);\n        },\n        get: function get() {\n            return Asset[_resources];\n        }\n    }]);\n\n    return Asset;\n}();\n\nAsset.SolidMaterialType = SolidMaterialType;\nAsset.TransparentMaterialType = TransparentMaterialType;\nAsset.InvisibleMaterialType = InvisibleMaterialType;\n\nAsset.CreateColorTemplate('Containers', 0x020202, 0x7f7f7f, 0xffffff);\n\nexports.default = Asset;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///4\n");

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _set = function set(object, property, value, receiver) { var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent !== null) { set(parent, property, value, receiver); } } else if (\"value\" in desc && desc.writable) { desc.value = value; } else { var setter = desc.set; if (setter !== undefined) { setter.call(receiver, value); } } return value; };\n\nvar _PackingProperty = __webpack_require__(55);\n\nvar _Dimensions = __webpack_require__(24);\n\nvar _Dimensions2 = _interopRequireDefault(_Dimensions);\n\nvar _TextField = __webpack_require__(35);\n\nvar _TextField2 = _interopRequireDefault(_TextField);\n\nvar _CargoEntry2 = __webpack_require__(6);\n\nvar _CargoEntry3 = _interopRequireDefault(_CargoEntry2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\r\n * @typedef {Object} BoxEntryProperties\r\n * @property {StackingProperty} stacking\r\n * @property {RotationConstraint} rotation\r\n * @property {TranslationConstraint} translation\r\n */\n\nvar numEntries = 0;\nfunction getDefaultLabel() {\n    return 'Box ' + numEntries.toString();\n}\n\nvar epsilon = Math.pow(2, -52);\nvar numberType = 'number';\n\nvar BoxEntry = function (_CargoEntry) {\n    _inherits(BoxEntry, _CargoEntry);\n\n    function BoxEntry() {\n        _classCallCheck(this, BoxEntry);\n\n        numEntries++;\n\n        var _this = _possibleConstructorReturn(this, (BoxEntry.__proto__ || Object.getPrototypeOf(BoxEntry)).call(this));\n\n        _this.type = 'BoxEntry';\n\n        _this.dimensions = new _Dimensions2.default(0, 0, 0);\n\n        _this.weight = 0;\n        _this.quantity = 1;\n\n        /**\r\n         * @type {BoxEntryProperties}\r\n         */\n        _this.properties;\n\n        _this.properties.stacking = new _PackingProperty.StackingProperty();\n        _this.properties.rotation = new _PackingProperty.RotationConstraint();\n        _this.properties.translation = new _PackingProperty.TranslationConstraint();\n\n        _this.descriptions.set('label', new _TextField2.default('label', getDefaultLabel()));\n        return _this;\n    }\n\n    _createClass(BoxEntry, [{\n        key: \"Reset\",\n        value: function Reset() {\n            this.weight = 0;\n            this.quantity = 1;\n\n            this.properties.stacking.Reset();\n            this.properties.rotation.Reset();\n            this.properties.translation.Reset();\n\n            var label = this.descriptions.get('label');\n            label.content = _TextField2.default.defaultContent;\n            this.descriptions.clear();\n            this.descriptions.set('label', label);\n        }\n\n        /**\r\n         * @param {BoxEntry} entry \r\n         */\n\n    }, {\n        key: \"Copy\",\n        value: function Copy(entry) {\n            this.dimensions.Copy(entry.dimensions);\n            this.weight = entry.weight;\n            this.quantity = entry.quantity;\n\n            this.properties.stacking.Copy(entry.properties.stacking);\n            this.properties.rotation.Copy(entry.properties.rotation);\n            this.properties.translation.Copy(entry.properties.translation);\n\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = entry.descriptions[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var _step$value = _slicedToArray(_step.value, 2),\n                        key = _step$value[0],\n                        field = _step$value[1];\n\n                    var own = this.descriptions.get(key);\n                    if (own) own.Copy(field);else this.descriptions.set(key, field.Clone());\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n        }\n    }, {\n        key: \"Clone\",\n        value: function Clone() {\n            var entry = new BoxEntry();\n\n            entry.dimensions = this.dimensions.Clone();\n\n            entry.weight = this.weight;\n            entry.quantity = this.quantity;\n\n            entry.properties.stacking = this.properties.stacking.Clone();\n            entry.properties.rotation = this.properties.rotation.Clone();\n            entry.properties.translation = this.properties.translation.Clone();\n\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n                for (var _iterator2 = this.descriptions[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    var _step2$value = _slicedToArray(_step2.value, 2),\n                        key = _step2$value[0],\n                        field = _step2$value[1];\n\n                    entry.descriptions.set(key, field.Clone());\n                }\n            } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                        _iterator2.return();\n                    }\n                } finally {\n                    if (_didIteratorError2) {\n                        throw _iteratorError2;\n                    }\n                }\n            }\n\n            return entry;\n        }\n    }, {\n        key: \"ToString\",\n        value: function ToString() {\n            return '\\'' + this.descriptions.get('label').content + '\\': ' + this.dimensions.ToString();\n        }\n\n        /**\r\n         * @param {BoxEntry} entry \r\n         */\n\n    }, {\n        key: \"weight\",\n        set: function set(value) {\n            _set(BoxEntry.prototype.__proto__ || Object.getPrototypeOf(BoxEntry.prototype), \"weight\", value, this);\n        },\n        get: function get() {\n            return _get(BoxEntry.prototype.__proto__ || Object.getPrototypeOf(BoxEntry.prototype), \"weight\", this);\n        }\n\n        /**\r\n         * @returns {string}\r\n         */\n\n    }, {\n        key: \"label\",\n        get: function get() {\n            var field = this.descriptions.get('label');\n            return field ? field.content : undefined;\n        },\n        set: function set(value) {\n            var field = this.descriptions.get('label');\n            if (field) field.content = value;else this.descriptions.set('label', new _TextField2.default('label', value));\n        }\n    }], [{\n        key: \"Assert\",\n        value: function Assert(entry) {\n            return entry instanceof BoxEntry && _Dimensions2.default.Assert(entry.dimensions) && entry.properties && entry.descriptions && entry.weight !== undefined && entry.quantity !== undefined && _typeof(entry.weight) === numberType && _typeof(entry.quantity) === numberType && _PackingProperty.StackingProperty.Assert(entry.properties.stacking) && _PackingProperty.RotationConstraint.Assert(entry.properties.rotation) && _PackingProperty.TranslationConstraint.Assert(entry.properties.translation);\n        }\n    }]);\n\n    return BoxEntry;\n}(_CargoEntry3.default);\n\nBoxEntry.StackingProperty = _PackingProperty.StackingProperty;\nBoxEntry.RotationConstraint = _PackingProperty.RotationConstraint;\nBoxEntry.TranslationConstraint = _PackingProperty.TranslationConstraint;\n\nexports.default = BoxEntry;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5\n");

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _TextField = __webpack_require__(35);\n\nvar _TextField2 = _interopRequireDefault(_TextField);\n\nvar _Logger = __webpack_require__(2);\n\nvar _Logger2 = _interopRequireDefault(_Logger);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _weight = Symbol('weight');\n\nvar CargoEntry = function () {\n    function CargoEntry() {\n        _classCallCheck(this, CargoEntry);\n\n        this.type = 'CargoEntry';\n\n        this.quantity = 0;\n        this.properties = {};\n        this.uid = '';\n        this[_weight] = 0;\n\n        /**\r\n         * @type {Map<string, TextField>}\r\n         */\n        this.descriptions = new Map();\n    }\n\n    /** @returns {Number} */\n\n\n    _createClass(CargoEntry, [{\n        key: \"SetUID\",\n\n\n        /**\r\n         * @param {string} [uid] - You'll rarely need to provide this\r\n         */\n        value: function SetUID(uid) {\n            this.uid = uid || THREE.Math.generateUUID();\n            return this.uid;\n        }\n\n        /** @param {string} key @param {string} [value] ommit value param to get description content instead of setting it */\n\n    }, {\n        key: \"Description\",\n        value: function Description(key, value) {\n            var d = this.descriptions.get(key);\n            if (d) {\n                if (value === undefined) return d.content;\n\n                d.content = value;\n            } else {\n                if (value === undefined) return false;\n\n                d = new _TextField2.default(key, value);\n                this.descriptions.set(key, d);\n            }\n        }\n\n        /** @param {string} key */\n\n    }, {\n        key: \"DeleteDescription\",\n        value: function DeleteDescription(key) {\n            if (this.descriptions.has(key)) this.descriptions.delete(key);\n        }\n    }, {\n        key: \"Copy\",\n        value: function Copy(entry) {\n            _Logger2.default.Warn('CargoEntry.Copy is not implemented');\n        }\n    }, {\n        key: \"Clone\",\n        value: function Clone() {\n            _Logger2.default.Warn('CargoEntry.Clone is not implemented');\n        }\n    }, {\n        key: \"ToString\",\n        value: function ToString() {}\n    }, {\n        key: \"weight\",\n        get: function get() {\n            return this[_weight];\n        },\n        set: function set(value) {\n            this[_weight] = value;\n        }\n    }]);\n\n    return CargoEntry;\n}();\n\nexports.default = CargoEntry;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXBpL2NvbXBvbmVudHMvY29tbW9uL0NhcmdvRW50cnkuanM/ZmM5ZCJdLCJuYW1lcyI6WyJfd2VpZ2h0IiwiU3ltYm9sIiwiQ2FyZ29FbnRyeSIsInR5cGUiLCJxdWFudGl0eSIsInByb3BlcnRpZXMiLCJ1aWQiLCJkZXNjcmlwdGlvbnMiLCJNYXAiLCJUSFJFRSIsIk1hdGgiLCJnZW5lcmF0ZVVVSUQiLCJrZXkiLCJ2YWx1ZSIsImQiLCJnZXQiLCJ1bmRlZmluZWQiLCJjb250ZW50IiwiVGV4dEZpZWxkIiwic2V0IiwiaGFzIiwiZGVsZXRlIiwiZW50cnkiLCJMb2dnZXIiLCJXYXJuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7Ozs7O0FBRUEsSUFBTUEsVUFBVUMsT0FBTyxRQUFQLENBQWhCOztJQUVNQyxVO0FBQ0YsMEJBQWE7QUFBQTs7QUFDVCxhQUFLQyxJQUFMLEdBQVksWUFBWjs7QUFFQSxhQUFLQyxRQUFMLEdBQWdCLENBQWhCO0FBQ0EsYUFBS0MsVUFBTCxHQUFrQixFQUFsQjtBQUNBLGFBQUtDLEdBQUwsR0FBVyxFQUFYO0FBQ0EsYUFBS04sT0FBTCxJQUFnQixDQUFoQjs7QUFFQTs7O0FBR0EsYUFBS08sWUFBTCxHQUFvQixJQUFJQyxHQUFKLEVBQXBCO0FBQ0g7O0FBRUQ7Ozs7Ozs7QUFJQTs7OytCQUdPRixHLEVBQUk7QUFDUCxpQkFBS0EsR0FBTCxHQUFXQSxPQUFPRyxNQUFNQyxJQUFOLENBQVdDLFlBQVgsRUFBbEI7QUFDQSxtQkFBTyxLQUFLTCxHQUFaO0FBQ0g7O0FBRUQ7Ozs7b0NBQ1lNLEcsRUFBS0MsSyxFQUFNO0FBQ25CLGdCQUFJQyxJQUFJLEtBQUtQLFlBQUwsQ0FBa0JRLEdBQWxCLENBQXNCSCxHQUF0QixDQUFSO0FBQ0EsZ0JBQUdFLENBQUgsRUFBSztBQUNELG9CQUFHRCxVQUFVRyxTQUFiLEVBQXdCLE9BQU9GLEVBQUVHLE9BQVQ7O0FBRXhCSCxrQkFBRUcsT0FBRixHQUFZSixLQUFaO0FBQ0gsYUFKRCxNQUtJO0FBQ0Esb0JBQUdBLFVBQVVHLFNBQWIsRUFBd0IsT0FBTyxLQUFQOztBQUV4QkYsb0JBQUksSUFBSUksbUJBQUosQ0FBY04sR0FBZCxFQUFtQkMsS0FBbkIsQ0FBSjtBQUNBLHFCQUFLTixZQUFMLENBQWtCWSxHQUFsQixDQUFzQlAsR0FBdEIsRUFBMkJFLENBQTNCO0FBQ0g7QUFDSjs7QUFFRDs7OzswQ0FDa0JGLEcsRUFBSTtBQUNsQixnQkFBSSxLQUFLTCxZQUFMLENBQWtCYSxHQUFsQixDQUFzQlIsR0FBdEIsQ0FBSixFQUFpQyxLQUFLTCxZQUFMLENBQWtCYyxNQUFsQixDQUF5QlQsR0FBekI7QUFDcEM7Ozs2QkFFSVUsSyxFQUFNO0FBQ1BDLDZCQUFPQyxJQUFQLENBQVksb0NBQVo7QUFDSDs7O2dDQUVNO0FBQ0hELDZCQUFPQyxJQUFQLENBQVkscUNBQVo7QUFDSDs7O21DQUVTLENBRVQ7Ozs0QkExQ1c7QUFBRSxtQkFBTyxLQUFLeEIsT0FBTCxDQUFQO0FBQXVCLFM7MEJBQzFCYSxLLEVBQU07QUFBRSxpQkFBS2IsT0FBTCxJQUFnQmEsS0FBaEI7QUFBd0I7Ozs7OztrQkE0Q2hDWCxVIiwiZmlsZSI6IjYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVGV4dEZpZWxkIGZyb20gXCIuL1RleHRGaWVsZFwiO1xyXG5pbXBvcnQgTG9nZ2VyIGZyb20gXCIuLi8uLi91dGlscy9jaWsvTG9nZ2VyXCI7XHJcblxyXG5jb25zdCBfd2VpZ2h0ID0gU3ltYm9sKCd3ZWlnaHQnKTtcclxuXHJcbmNsYXNzIENhcmdvRW50cnkge1xyXG4gICAgY29uc3RydWN0b3IoKXtcclxuICAgICAgICB0aGlzLnR5cGUgPSAnQ2FyZ29FbnRyeSc7XHJcblxyXG4gICAgICAgIHRoaXMucXVhbnRpdHkgPSAwO1xyXG4gICAgICAgIHRoaXMucHJvcGVydGllcyA9IHt9O1xyXG4gICAgICAgIHRoaXMudWlkID0gJyc7XHJcbiAgICAgICAgdGhpc1tfd2VpZ2h0XSA9IDA7XHJcblxyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEB0eXBlIHtNYXA8c3RyaW5nLCBUZXh0RmllbGQ+fVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHRoaXMuZGVzY3JpcHRpb25zID0gbmV3IE1hcCgpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKiBAcmV0dXJucyB7TnVtYmVyfSAqL1xyXG4gICAgZ2V0IHdlaWdodCgpeyByZXR1cm4gdGhpc1tfd2VpZ2h0XTsgfVxyXG4gICAgc2V0IHdlaWdodCh2YWx1ZSl7IHRoaXNbX3dlaWdodF0gPSB2YWx1ZTsgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IFt1aWRdIC0gWW91J2xsIHJhcmVseSBuZWVkIHRvIHByb3ZpZGUgdGhpc1xyXG4gICAgICovXHJcbiAgICBTZXRVSUQodWlkKXtcclxuICAgICAgICB0aGlzLnVpZCA9IHVpZCB8fCBUSFJFRS5NYXRoLmdlbmVyYXRlVVVJRCgpO1xyXG4gICAgICAgIHJldHVybiB0aGlzLnVpZDtcclxuICAgIH1cclxuXHJcbiAgICAvKiogQHBhcmFtIHtzdHJpbmd9IGtleSBAcGFyYW0ge3N0cmluZ30gW3ZhbHVlXSBvbW1pdCB2YWx1ZSBwYXJhbSB0byBnZXQgZGVzY3JpcHRpb24gY29udGVudCBpbnN0ZWFkIG9mIHNldHRpbmcgaXQgKi9cclxuICAgIERlc2NyaXB0aW9uKGtleSwgdmFsdWUpe1xyXG4gICAgICAgIGxldCBkID0gdGhpcy5kZXNjcmlwdGlvbnMuZ2V0KGtleSk7XHJcbiAgICAgICAgaWYoZCl7XHJcbiAgICAgICAgICAgIGlmKHZhbHVlID09PSB1bmRlZmluZWQpIHJldHVybiBkLmNvbnRlbnQ7XHJcblxyXG4gICAgICAgICAgICBkLmNvbnRlbnQgPSB2YWx1ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgaWYodmFsdWUgPT09IHVuZGVmaW5lZCkgcmV0dXJuIGZhbHNlO1xyXG5cclxuICAgICAgICAgICAgZCA9IG5ldyBUZXh0RmllbGQoa2V5LCB2YWx1ZSk7XHJcbiAgICAgICAgICAgIHRoaXMuZGVzY3JpcHRpb25zLnNldChrZXksIGQpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKiogQHBhcmFtIHtzdHJpbmd9IGtleSAqL1xyXG4gICAgRGVsZXRlRGVzY3JpcHRpb24oa2V5KXtcclxuICAgICAgICBpZiggdGhpcy5kZXNjcmlwdGlvbnMuaGFzKGtleSkgKSB0aGlzLmRlc2NyaXB0aW9ucy5kZWxldGUoa2V5KTtcclxuICAgIH1cclxuXHJcbiAgICBDb3B5KGVudHJ5KXtcclxuICAgICAgICBMb2dnZXIuV2FybignQ2FyZ29FbnRyeS5Db3B5IGlzIG5vdCBpbXBsZW1lbnRlZCcpO1xyXG4gICAgfVxyXG5cclxuICAgIENsb25lKCl7XHJcbiAgICAgICAgTG9nZ2VyLldhcm4oJ0NhcmdvRW50cnkuQ2xvbmUgaXMgbm90IGltcGxlbWVudGVkJyk7XHJcbiAgICB9XHJcblxyXG4gICAgVG9TdHJpbmcoKXtcclxuICAgICAgICBcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQ2FyZ29FbnRyeTtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvYXBpL2NvbXBvbmVudHMvY29tbW9uL0NhcmdvRW50cnkuanMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///6\n");

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Utils = __webpack_require__(0);\n\nvar _Utils2 = _interopRequireDefault(_Utils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar serializeModes = {\n    none: 'none',\n    json: 'json'\n};\n\n/**\r\n * @typedef ConfigParams\r\n * @property {Boolean} debug\r\n * @property {Boolean} save\r\n * @property {serializeModes} serializeMode\r\n */\n\nvar Controller = function () {\n    function Controller(property, min, max, step, onChange) {\n        _classCallCheck(this, Controller);\n\n        this.property = property;\n        this.min = min;\n        this.max = max;\n        this.step = step;\n        this.onChange = onChange;\n    }\n\n    /**\r\n     * @returns {Array<Controller>}\r\n     */\n\n\n    _createClass(Controller, null, [{\n        key: 'Multiple',\n        value: function Multiple(properties, min, max, step, onChange) {\n            var controllers = [];\n            properties.forEach(function (property) {\n                controllers.push(new Controller(property, min, max, step, onChange));\n            });\n            return controllers;\n        }\n    }]);\n\n    return Controller;\n}();\n\nfunction createKeyInfo(obj, key) {\n    var isFolderGrouped = key[0] == \"#\";\n    if (isFolderGrouped) key = key.substr(1);\n\n    var propertyPath = key;\n\n    key = key.split('.');\n    var folder = isFolderGrouped ? key.slice(0, key.length - 1).join('.') : undefined;\n    while (key.length > 1) {\n        obj = obj[key.shift()];\n    }return {\n        id: (folder ? folder + '.' : '') + key[0],\n        folder: folder,\n        owner: obj,\n        key: key[0],\n        propertyPath: propertyPath\n    };\n}\n\nfunction getKey(obj, key) {\n    return key.split('.').reduce(function (a, b) {\n        return a && a[b];\n    }, obj);\n}\n\nfunction setKey(obj, key, val) {\n    key = key.split('.');\n    while (key.length > 1) {\n        obj = obj[key.shift()];\n    }var endKey = key.shift();\n    if (obj[endKey].setHex) {\n        obj[endKey].setHex(val);\n    } else {\n        obj[endKey] = val;\n    }\n    return obj[endKey];\n}\n\nfunction download(data, filename, type) {\n    // https://stackoverflow.com/a/30832210/1712403\n    var file = new Blob([data], { type: type || 'text/plain' });\n    if (window.navigator.msSaveOrOpenBlob) // IE10+\n        window.navigator.msSaveOrOpenBlob(file, filename);else {\n        // Others\n        var a = document.createElement(\"a\"),\n            url = URL.createObjectURL(file);\n        a.href = url;\n        a.download = filename;\n        document.body.appendChild(a);\n        a.click();\n        setTimeout(function () {\n            document.body.removeChild(a);\n            window.URL.revokeObjectURL(url);\n        }, 0);\n    }\n}\n\nvar defaultEditParams = {\n    save: true, debug: true\n};\n\n/** \r\n * @typedef GUI\r\n * @property {HTMLElement} domElement\r\n */\n\nvar Shortcut = function () {\n    /**\r\n     * @param {string} label \r\n     */\n    function Shortcut(label) {\n        _classCallCheck(this, Shortcut);\n\n        this.label = label;\n\n        ///** @type {Map<string, GUI>} */\n        //this.folders = new Map();\n\n        this.controller = {};\n    }\n\n    _createClass(Shortcut, [{\n        key: 'Add',\n        value: function Add(label, target) {\n            label = label.replace(new RegExp(' ', 'g'), '_');\n            this.controller[label] = target;\n            Config.shortcutsGUI.add(this.controller, label);\n            console.log('added ' + label + ' shortcut to ' + this.label);\n        }\n    }]);\n\n    return Shortcut;\n}();\n\n/** @type {GUI} */\n\n\nvar shortcutsGUI;\n\n/** @type {Map<string, Shortcut>} */\nvar shortcuts = new Map();\n\n/** @type {Map<Object, Config>} */\nvar instances = new Map();\n\nvar Config = function () {\n    function Config(target) {\n        _classCallCheck(this, Config);\n\n        if (!Config.debug) Config.debug = instances;\n        instances.set(target, this);\n\n        this.target = target;\n        this.keys = [];\n    }\n\n    _createClass(Config, [{\n        key: 'Track',\n        value: function Track() {\n            var keys = this.keys;\n\n            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n                args[_key] = arguments[_key];\n            }\n\n            args.forEach(function (key) {\n                keys.push(key);\n            });\n        }\n    }, {\n        key: 'Snapshot',\n        value: function Snapshot(ignoreKeys) {\n            var data = {};\n            var target = this.target;\n            this.keys.forEach(function (key) {\n                var isController = key instanceof Controller;\n                var keyInfo = createKeyInfo(target, isController ? key.property : key);\n                var keyValue = keyInfo.owner[keyInfo.key];\n                if (typeof keyValue !== 'function') {\n                    data[keyInfo.id] = keyValue;\n                } else if (ignoreKeys !== undefined) {\n                    var warn = true;\n                    ignoreKeys.forEach(function (ignoredKey) {\n                        if (ignoredKey === keyInfo.id) {\n                            warn = false;\n                        }\n                    });\n                    if (warn) console.log('Config.Snapshot warning: \"' + keyInfo.id + '\" changes will be lost');\n                }\n            });\n            return data;\n        }\n    }, {\n        key: 'Serialize',\n        value: function Serialize() {\n            var _this = this;\n\n            var data = {};\n            this.keys.forEach(function (key) {\n                var isController = key instanceof Controller;\n                var keyInfo = createKeyInfo(_this.target, isController ? key.property : key);\n                var keyValue = keyInfo.owner[keyInfo.key];\n                if (typeof keyValue !== 'function') {\n                    var saveValue = keyInfo.owner[keyInfo.key].isColor ? '0x' + Number.parseInt(keyValue.toJSON()).toString(16) : keyValue;\n                    data[keyInfo.propertyPath] = saveValue;\n                }\n            });\n            return data;\n        }\n    }, {\n        key: 'Save',\n        value: function Save() {\n            if (this.Update) {\n                this.Update();\n                this.data = this.Snapshot();\n            }\n        }\n\n        /**\r\n         * \r\n         * @param {Function} guiChanged \r\n         * @param {string} label \r\n         * @param {string} gui - or a dat.GUI object\r\n         * @param {ConfigParams} params \r\n         */\n\n    }, {\n        key: 'Edit',\n        value: function Edit(guiChanged, label, gui, params) {\n            var _this2 = this;\n\n            params = _Utils2.default.AssignUndefined(params, defaultEditParams);\n\n            var controllers = [];\n            var target = this.target;\n            if (gui === undefined) {\n\n                gui = new (window.dat || __webpack_require__(3).default).GUI({\n                    autoPlace: true\n                });\n            } else if (label) {\n                gui = gui.addFolder(label);\n            }\n\n            if (this.editing === undefined) {\n                this.editing = {};\n\n                this.Update = function () {\n                    __webpack_require__(38);\n\n                    gui.updateAll();\n                    guiChanged();\n                };\n\n                gui.add(this, 'Update');\n            }\n\n            this.keys.forEach(function (key) {\n                var isController = key instanceof Controller;\n                var keyInfo = createKeyInfo(target, isController ? key.property : key);\n                if (_this2.editing[keyInfo.id] !== true) {\n                    var folder = gui;\n                    if (keyInfo.folder) {\n                        __webpack_require__(38);\n\n                        if (gui.find) folder = gui.find(keyInfo.folder);else console.warn('gui extensions not found!');\n\n                        if (!folder) folder = gui.addFolder(keyInfo.folder);\n                    }\n                    var addFunction = keyInfo.owner[keyInfo.key].isColor ? folder.addColor : folder.add;\n                    controllers.push((isController && key.min !== undefined ? addFunction.call(folder, keyInfo.owner, keyInfo.key, key.min, key.max, key.step) : addFunction.call(folder, keyInfo.owner, keyInfo.key)).onChange(key.onChange === undefined ? guiChanged : function () {\n                        key.onChange.call(keyInfo.owner);\n                        guiChanged();\n                    }));\n                    _this2.editing[keyInfo.id] = true;\n                }\n            });\n\n            var scope = this;\n            var editor = {\n                Save: function Save() {\n                    scope.Save();\n                    var filename = label !== undefined ? label + (label.indexOf('.json') === -1 ? '.json' : '') : 'config.json';\n                    download(scope.data, filename);\n                },\n\n                Debug: function Debug() {\n                    console.log(scope.target);\n                },\n\n                Serialize: function Serialize() {\n                    if (scope.Update) {\n                        scope.Update();\n                        var data = scope.Serialize();\n                        var json = JSON.stringify(data);\n                        console.log(data, json);\n                    }\n                }\n            };\n            if (params.save) {\n                if (this.defaultsFolder === undefined) this.defaultsFolder = gui.addFolder('...');\n                if (this.editing['editor.Save'] !== true) {\n                    this.defaultsFolder.add(editor, 'Save');\n                    this.editing['editor.Save'] = true;\n                }\n            }\n            if (params.debug) {\n                if (this.defaultsFolder === undefined) this.defaultsFolder = gui.addFolder('...');\n                if (this.editing['editor.Debug'] !== true) {\n                    this.defaultsFolder.add(editor, 'Debug');\n                    this.editing['editor.Debug'] = true;\n                }\n            }\n\n            switch (params.serializeMode) {\n                default:\n                    break;\n                case serializeModes.json:\n                    if (this.defaultsFolder === undefined) this.defaultsFolder = gui.addFolder('...');\n                    if (this.editing['editor.Serialize'] !== true) {\n                        this.defaultsFolder.add(editor, 'Serialize');\n                        this.editing['editor.Serialize'] = true;\n                    }\n                    break;\n            }\n\n            this.gui = gui;\n        }\n    }, {\n        key: 'toJSON',\n        value: function toJSON() {\n            if (this.data === undefined) console.warn(this.target, 'is being saved with undefined data.');\n            return this.data;\n        }\n    }], [{\n        key: 'Unroll',\n\n\n        /**\r\n         * \r\n         * @param {string} property - #property marks a folder\r\n         * @param {Array<string>} subProperties \r\n         * @returns returns the subProperties full paths\r\n         */\n        value: function Unroll(property) {\n            var unrolled = [];\n\n            for (var _len2 = arguments.length, subProperties = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n                subProperties[_key2 - 1] = arguments[_key2];\n            }\n\n            subProperties.forEach(function (subProperty) {\n                unrolled.push(property + '.' + subProperty);\n            });\n            return unrolled;\n        }\n\n        /**\r\n         * @param {*} target \r\n         * @param {*} data \r\n         */\n\n    }, {\n        key: 'Load',\n        value: function Load(target, data) {\n            var keys = Object.keys(data);\n            keys.forEach(function (key) {\n                setKey(target, key, data[key]);\n            });\n\n            if (instances.has(target) && instances.get(target).Update) instances.get(target).Update();\n        }\n\n        /**\r\n         * @param {string} category\r\n         * @param {string} label \r\n         * @param {Function} target \r\n         */\n\n    }, {\n        key: 'MakeShortcut',\n        value: function MakeShortcut(category, label, target) {\n            if (shortcuts.has(category) === false) shortcuts.set(category, new Shortcut(category));\n            var shortcut = shortcuts.get(category);\n            shortcut.Add(label, target);\n        }\n    }, {\n        key: 'serializeModes',\n        get: function get() {\n            return serializeModes;\n        }\n    }, {\n        key: 'shortcuts',\n        get: function get() {\n            return shortcuts;\n        }\n    }, {\n        key: 'shortcutsGUI',\n        get: function get() {\n            if (shortcutsGUI === undefined) shortcutsGUI = new (window.dat || __webpack_require__(3).default).GUI({\n                autoPlace: false\n            });\n            return shortcutsGUI;\n        }\n    }]);\n\n    return Config;\n}();\n\nConfig.Controller = Controller;\n\nexports.default = Config;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7\n");

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _ContainingVolume = __webpack_require__(11);\n\nvar _ContainingVolume2 = _interopRequireDefault(_ContainingVolume);\n\nvar _Logger = __webpack_require__(2);\n\nvar _Logger2 = _interopRequireDefault(_Logger);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar type = 'Container';\n\nvar combinedVolume = new _ContainingVolume2.default();\n\nvar Container = function () {\n    function Container() {\n        _classCallCheck(this, Container);\n\n        /**\r\n         * Containing volumes array\r\n         * @type {Array<ContainingVolume>}\r\n         */\n        this.volumes = [];\n\n        _Logger2.default.WarnOnce('Container.constructor', 'label not implemented');\n    }\n\n    /** @param {ContainingVolume} volume */\n\n\n    _createClass(Container, [{\n        key: \"Add\",\n        value: function Add(volume) {\n            this.volumes.push(volume);\n        }\n\n        /**\r\n         * @param {string} [uid] - You'll rarely need to provide this\r\n         */\n\n    }, {\n        key: \"SetUID\",\n        value: function SetUID(uid) {\n            this.uid = uid || THREE.Math.generateUUID();\n            return this.uid;\n        }\n    }, {\n        key: \"toJSON\",\n        value: function toJSON() {\n            return {\n                type: type,\n                volumes: this.volumes\n            };\n        }\n    }, {\n        key: \"ToString\",\n        value: function ToString() {\n            var result = type + '[';\n            for (var i = 0, numVolumes = this.volumes.length; i < numVolumes; i++) {\n                result += this.volumes[i].ToString() + (i < numVolumes - 1 ? ', ' : ']');\n            }\n            return result;\n        }\n    }, {\n        key: \"combinedVolume\",\n        get: function get() {\n            var minX = Number.MAX_SAFE_INTEGER,\n                minY = Number.MAX_SAFE_INTEGER,\n                minZ = Number.MAX_SAFE_INTEGER;\n\n            var maxX = Number.MIN_SAFE_INTEGER,\n                maxY = Number.MIN_SAFE_INTEGER,\n                maxZ = Number.MIN_SAFE_INTEGER;\n\n            var combinedWeightCapacity = 0;\n\n            this.volumes.forEach(function (volume) {\n                var pos = volume.position;\n                var dim = volume.dimensions;\n                if (pos.x < minX) minX = pos.x;\n                if (pos.y < minY) minY = pos.y;\n                if (pos.z < minZ) minZ = pos.z;\n                if (pos.x + dim.width > maxX) maxX = pos.x + dim.width;\n                if (pos.y + dim.height > maxY) maxY = pos.y + dim.height;\n                if (pos.z + dim.length > maxZ) maxZ = pos.z + dim.length;\n\n                combinedWeightCapacity += volume.weightCapacity;\n            });\n\n            combinedVolume.container = this;\n            combinedVolume.dimensions.Set(maxX - minX, maxZ - minZ, maxY - minY);\n            combinedVolume.position.set((maxX + minX) / 2, (maxZ + minZ) / 2, (maxY + minY) / 2);\n            combinedVolume.weightCapacity = combinedWeightCapacity;\n\n            return combinedVolume;\n        }\n    }, {\n        key: \"volume\",\n        get: function get() {\n            var index = this.volumes.length - 1;\n            return this.volumes[index];\n        }\n    }], [{\n        key: \"FromJSON\",\n        value: function FromJSON(data) {\n            if (data.type !== type) throw 'Data supplied is not: ' + type;\n\n            var container = new Container();\n            for (var i = 0, numVolumes = data.volumes.length; i < numVolumes; i++) {\n                var containingVolume = _ContainingVolume2.default.FromJSON(data.volumes[i]);\n                containingVolume.container = container;\n                container.Add(containingVolume);\n            }\n\n            return container;\n        }\n    }]);\n\n    return Container;\n}();\n\nexports.default = Container;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///8\n");

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/** SignalerCallback \r\n * @callback SignalerCallback\r\n * @param {Array<*>} args\r\n */\n\nvar _signals = Symbol('signals');\nvar _dispatches = Symbol('dispatches');\n\nvar LightDispatcher = function () {\n    function LightDispatcher() {\n        _classCallCheck(this, LightDispatcher);\n\n        this[_signals] = {};\n        this[_dispatches] = {};\n    }\n\n    /** @param {string} event @param {SignalerCallback} callback */\n\n\n    _createClass(LightDispatcher, [{\n        key: 'On',\n        value: function On(event, callback) {\n            if (this[_signals][event] === undefined) {\n                this[_signals][event] = [];\n            }\n            this[_signals][event].push(callback);\n        }\n\n        /** @param {string} event @param {SignalerCallback} callback */\n\n    }, {\n        key: 'Off',\n        value: function Off(event, callback) {\n            var callbacks = this[_signals][event];\n            if (callbacks) {\n                var index = callbacks.indexOf(callback);\n                if (index != -1) {\n                    callbacks.splice(index, 1);\n                }\n            }\n        }\n\n        /** @param {string} event @param {Array<*>} [args] */\n\n    }, {\n        key: 'Dispatch',\n        value: function Dispatch(event) {\n            for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n                args[_key - 1] = arguments[_key];\n            }\n\n            this[_dispatches][event] = args;\n            var callbacks = this[_signals][event];\n            if (callbacks) {\n                for (var i = 0, len = callbacks.length; i < len; i++) {\n                    callbacks[i].apply(callbacks, args);\n                }\n            }\n        }\n    }]);\n\n    return LightDispatcher;\n}();\n\nexports.default = LightDispatcher;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXBpL2NvbXBvbmVudHMvTGlnaHREaXNwYXRjaGVyLmpzPzNhMDAiXSwibmFtZXMiOlsiX3NpZ25hbHMiLCJTeW1ib2wiLCJfZGlzcGF0Y2hlcyIsIkxpZ2h0RGlzcGF0Y2hlciIsImV2ZW50IiwiY2FsbGJhY2siLCJ1bmRlZmluZWQiLCJwdXNoIiwiY2FsbGJhY2tzIiwiaW5kZXgiLCJpbmRleE9mIiwic3BsaWNlIiwiYXJncyIsImkiLCJsZW4iLCJsZW5ndGgiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFDQTs7Ozs7QUFLQSxJQUFNQSxXQUFXQyxPQUFPLFNBQVAsQ0FBakI7QUFDQSxJQUFNQyxjQUFjRCxPQUFPLFlBQVAsQ0FBcEI7O0lBRU1FLGU7QUFDRiwrQkFBYTtBQUFBOztBQUNULGFBQUtILFFBQUwsSUFBaUIsRUFBakI7QUFDQSxhQUFLRSxXQUFMLElBQW9CLEVBQXBCO0FBQ0g7O0FBRUQ7Ozs7OzJCQUNHRSxLLEVBQU9DLFEsRUFBUztBQUNmLGdCQUFHLEtBQUtMLFFBQUwsRUFBZUksS0FBZixNQUEwQkUsU0FBN0IsRUFBdUM7QUFDbkMscUJBQUtOLFFBQUwsRUFBZUksS0FBZixJQUF3QixFQUF4QjtBQUNIO0FBQ0QsaUJBQUtKLFFBQUwsRUFBZUksS0FBZixFQUFzQkcsSUFBdEIsQ0FBMkJGLFFBQTNCO0FBQ0g7O0FBRUQ7Ozs7NEJBQ0lELEssRUFBT0MsUSxFQUFTO0FBQ2hCLGdCQUFJRyxZQUFZLEtBQUtSLFFBQUwsRUFBZUksS0FBZixDQUFoQjtBQUNBLGdCQUFHSSxTQUFILEVBQWE7QUFDVCxvQkFBSUMsUUFBUUQsVUFBVUUsT0FBVixDQUFrQkwsUUFBbEIsQ0FBWjtBQUNBLG9CQUFHSSxTQUFTLENBQUMsQ0FBYixFQUFlO0FBQ1hELDhCQUFVRyxNQUFWLENBQWlCRixLQUFqQixFQUF3QixDQUF4QjtBQUNIO0FBQ0o7QUFDSjs7QUFFRDs7OztpQ0FDU0wsSyxFQUFlO0FBQUEsOENBQUxRLElBQUs7QUFBTEEsb0JBQUs7QUFBQTs7QUFDcEIsaUJBQUtWLFdBQUwsRUFBa0JFLEtBQWxCLElBQTJCUSxJQUEzQjtBQUNBLGdCQUFJSixZQUFZLEtBQUtSLFFBQUwsRUFBZUksS0FBZixDQUFoQjtBQUNBLGdCQUFHSSxTQUFILEVBQWE7QUFDVCxxQkFBSSxJQUFJSyxJQUFJLENBQVIsRUFBV0MsTUFBTU4sVUFBVU8sTUFBL0IsRUFBdUNGLElBQUlDLEdBQTNDLEVBQWdERCxHQUFoRCxFQUFvRDtBQUNoREwsOEJBQVVLLENBQVYsbUJBQWdCRCxJQUFoQjtBQUNIO0FBQ0o7QUFDSjs7Ozs7O2tCQUlVVCxlIiwiZmlsZSI6IjkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLyoqIFNpZ25hbGVyQ2FsbGJhY2sgXHJcbiAqIEBjYWxsYmFjayBTaWduYWxlckNhbGxiYWNrXHJcbiAqIEBwYXJhbSB7QXJyYXk8Kj59IGFyZ3NcclxuICovXHJcblxyXG5jb25zdCBfc2lnbmFscyA9IFN5bWJvbCgnc2lnbmFscycpO1xyXG5jb25zdCBfZGlzcGF0Y2hlcyA9IFN5bWJvbCgnZGlzcGF0Y2hlcycpO1xyXG5cclxuY2xhc3MgTGlnaHREaXNwYXRjaGVyIHtcclxuICAgIGNvbnN0cnVjdG9yKCl7XHJcbiAgICAgICAgdGhpc1tfc2lnbmFsc10gPSB7fTtcclxuICAgICAgICB0aGlzW19kaXNwYXRjaGVzXSA9IHt9O1xyXG4gICAgfVxyXG5cclxuICAgIC8qKiBAcGFyYW0ge3N0cmluZ30gZXZlbnQgQHBhcmFtIHtTaWduYWxlckNhbGxiYWNrfSBjYWxsYmFjayAqL1xyXG4gICAgT24oZXZlbnQsIGNhbGxiYWNrKXtcclxuICAgICAgICBpZih0aGlzW19zaWduYWxzXVtldmVudF0gPT09IHVuZGVmaW5lZCl7XHJcbiAgICAgICAgICAgIHRoaXNbX3NpZ25hbHNdW2V2ZW50XSA9IFtdO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzW19zaWduYWxzXVtldmVudF0ucHVzaChjYWxsYmFjayk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIEBwYXJhbSB7c3RyaW5nfSBldmVudCBAcGFyYW0ge1NpZ25hbGVyQ2FsbGJhY2t9IGNhbGxiYWNrICovXHJcbiAgICBPZmYoZXZlbnQsIGNhbGxiYWNrKXtcclxuICAgICAgICB2YXIgY2FsbGJhY2tzID0gdGhpc1tfc2lnbmFsc11bZXZlbnRdO1xyXG4gICAgICAgIGlmKGNhbGxiYWNrcyl7XHJcbiAgICAgICAgICAgIHZhciBpbmRleCA9IGNhbGxiYWNrcy5pbmRleE9mKGNhbGxiYWNrKTtcclxuICAgICAgICAgICAgaWYoaW5kZXggIT0gLTEpe1xyXG4gICAgICAgICAgICAgICAgY2FsbGJhY2tzLnNwbGljZShpbmRleCwgMSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIEBwYXJhbSB7c3RyaW5nfSBldmVudCBAcGFyYW0ge0FycmF5PCo+fSBbYXJnc10gKi9cclxuICAgIERpc3BhdGNoKGV2ZW50LCAuLi5hcmdzKXtcclxuICAgICAgICB0aGlzW19kaXNwYXRjaGVzXVtldmVudF0gPSBhcmdzO1xyXG4gICAgICAgIHZhciBjYWxsYmFja3MgPSB0aGlzW19zaWduYWxzXVtldmVudF07XHJcbiAgICAgICAgaWYoY2FsbGJhY2tzKXtcclxuICAgICAgICAgICAgZm9yKHZhciBpID0gMCwgbGVuID0gY2FsbGJhY2tzLmxlbmd0aDsgaSA8IGxlbjsgaSsrKXtcclxuICAgICAgICAgICAgICAgIGNhbGxiYWNrc1tpXSguLi5hcmdzKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IExpZ2h0RGlzcGF0Y2hlcjtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvYXBpL2NvbXBvbmVudHMvTGlnaHREaXNwYXRjaGVyLmpzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///9\n");

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _SceneSetup = __webpack_require__(13);\n\nvar _SceneSetup2 = _interopRequireDefault(_SceneSetup);\n\nvar _Packer = __webpack_require__(22);\n\nvar _Packer2 = _interopRequireDefault(_Packer);\n\nvar _View = __webpack_require__(69);\n\nvar _View2 = _interopRequireDefault(_View);\n\nvar _CargoInput = __webpack_require__(43);\n\nvar _CargoInput2 = _interopRequireDefault(_CargoInput);\n\nvar _PackingSpaceInput = __webpack_require__(44);\n\nvar _PackingSpaceInput2 = _interopRequireDefault(_PackingSpaceInput);\n\nvar _UX = __webpack_require__(18);\n\nvar _UX2 = _interopRequireDefault(_UX);\n\nvar _Logger = __webpack_require__(2);\n\nvar _Logger2 = _interopRequireDefault(_Logger);\n\nvar _Signaler2 = __webpack_require__(1);\n\nvar _Signaler3 = _interopRequireDefault(_Signaler2);\n\nvar _PackerInterface = __webpack_require__(45);\n\nvar _PackerInterface2 = _interopRequireDefault(_PackerInterface);\n\nvar _BoxEntry = __webpack_require__(5);\n\nvar _BoxEntry2 = _interopRequireDefault(_BoxEntry);\n\nvar _Container = __webpack_require__(8);\n\nvar _Container2 = _interopRequireDefault(_Container);\n\nvar _Resources = __webpack_require__(25);\n\nvar _Resources2 = _interopRequireDefault(_Resources);\n\nvar _Asset = __webpack_require__(4);\n\nvar _Asset2 = _interopRequireDefault(_Asset);\n\nvar _DomUI = __webpack_require__(42);\n\nvar _DomUI2 = _interopRequireDefault(_DomUI);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar signals = {\n    start: 'start'\n};\n\n/**\r\n * @typedef AppParams\r\n * @property {UX} ux\r\n * @property {CargoInput} cargoInput\r\n * @property {PackingSpaceInput} packingSpaceInput\r\n * @property {PackerInterface} packerInterface\r\n * @property {Resources} resources\r\n */\n\nvar App = function (_Signaler) {\n    _inherits(App, _Signaler);\n\n    /**\r\n     * \r\n     * @param {HTMLDivElement} containerDiv\r\n     * @param {AppParams} params\r\n     */\n    function App(containerDiv, params) {\n        _classCallCheck(this, App);\n\n        var _this = _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).call(this));\n\n        var scope = _this;\n\n        _this.ux = params.ux;\n        _this.cargoInput = params.cargoInput;\n        _this.packingSpaceInput = params.packingSpaceInput;\n        _this.packerInterface = params.packerInterface;\n        _this.resources = params.resources;\n        _Asset2.default.resources = _this.resources;\n\n        /** @type {PackerParams} */\n        var packerParams = { ux: _this.ux };\n        _this.packer = new _Packer2.default(packerParams);\n        _this.packer.extendedParams = _this.packerInterface.params;\n\n        _this.cargoInput.On(_CargoInput2.default.signals.insert,\n        /** @param {BoxEntry} boxEntry */\n        function (boxEntry) {\n            scope.packer.cargoList.Add(boxEntry);\n        });\n\n        _this.cargoInput.On(_CargoInput2.default.signals.modify,\n        /** @param {BoxEntry} boxEntry */\n        function (boxEntry) {\n            scope.packer.cargoList.Modify(boxEntry);\n            scope.SolveAgain();\n        });\n\n        _this.cargoInput.On(_CargoInput2.default.signals.remove,\n        /** @param {BoxEntry} boxEntry */\n        function (boxEntry) {\n            scope.packer.cargoList.Remove(boxEntry.uid);\n            scope.SolveAgain();\n        });\n\n        _this.packingSpaceInput.On(_PackingSpaceInput2.default.signals.containerLoaded,\n        /** @param {Container} container */\n        function (container) {\n            scope.packer.packingSpace.AddContainer(container);\n        });\n\n        _this.packerInterface.On(_PackerInterface2.default.signals.solveRequest,\n        /** @param {SolverParams} solverParams */\n        function (solverParams) {\n            scope.Solve(solverParams);\n        });\n\n        _this.domUI = new _DomUI2.default(containerDiv, _this.ux);\n        _this.sceneSetup = new _SceneSetup2.default(_this.domUI.domElement ? _this.domUI.domElement : containerDiv, _this.ux);\n        _this.sceneSetup.Init().then(_this.Start.bind(_this));\n        return _this;\n    }\n\n    _createClass(App, [{\n        key: 'Start',\n        value: function Start() {\n            var scope = this;\n            var packerInterface = this.packerInterface;\n\n            /** @type {import('./view/View').ViewParams} */\n            var viewParams = { ux: this.ux };\n            this.view = new _View2.default(this.packer, this.sceneSetup, this.domUI, viewParams);\n            this.sceneSetup.Start();\n\n            this.ux._Bind(this);\n            this.cargoInput._Bind(this);\n            this.packingSpaceInput._Bind(this);\n\n            var resetColor = function resetColor() {};\n            this.cargoInput.On(_CargoInput2.default.signals.show,\n            /** @param {BoxEntry} boxEntry */\n            function (boxEntry) {\n                var existingEntry = scope.cargoInput.GetEntry(boxEntry.uid);\n                if (existingEntry) {\n                    resetColor();\n                    var previewColorBackup = boxEntry.Description('color');\n                    resetColor = function resetColor() {\n                        boxEntry.Description('color', previewColorBackup);\n                    };\n                    boxEntry.Description('color', existingEntry.Description('color'));\n                }\n                scope.view.sceneSetup.hud.Preview(boxEntry);\n            });\n\n            function hideEntryPreview() {\n                resetColor();\n                scope.view.sceneSetup.hud.Preview(false);\n            }\n            this.cargoInput.On(_CargoInput2.default.signals.hide, hideEntryPreview);\n            this.cargoInput.On(_CargoInput2.default.signals.insert, hideEntryPreview);\n            this.cargoInput.On(_CargoInput2.default.signals.modify, hideEntryPreview);\n            this.cargoInput.On(_CargoInput2.default.signals.remove, hideEntryPreview);\n\n            /** @param {Packer.PackingResult} packingResult */\n            function onPackUpdate(packingResult) {\n                packerInterface._Notify(_PackerInterface2.default.signals.solved, packingResult);\n            }\n            this.packer.On(_Packer2.default.signals.packUpdate, onPackUpdate);\n\n            /** @param {*} error */\n            function onPackFailed(error) {\n                packerInterface._Notify(_PackerInterface2.default.signals.failed, error);\n            }\n            this.packer.On(_Packer2.default.signals.packFailed, onPackFailed);\n\n            this.Dispatch(signals.start);\n        }\n    }, {\n        key: 'SolveAgain',\n        value: function SolveAgain() {\n            if (this.ux.params.autoUpdatePack && this.packer.solveAgain) this.Solve();\n        }\n\n        /** @param {SolverParams} [solverParams] */\n\n    }, {\n        key: 'Solve',\n        value: function Solve(solverParams) {\n            this.view.ClearPackingResults();\n            this.packer.Solve(solverParams);\n        }\n    }], [{\n        key: 'signals',\n        get: function get() {\n            return signals;\n        }\n    }]);\n\n    return App;\n}(_Signaler3.default);\n\nexports.default = App;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///10\n");

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _Volume2 = __webpack_require__(63);\n\nvar _Volume3 = _interopRequireDefault(_Volume2);\n\nvar _Container = __webpack_require__(8);\n\nvar _Container2 = _interopRequireDefault(_Container);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _weightCapacity = Symbol('weightCapacity');\nvar type = 'ContainingVolume';\n\nvar ContainingVolume = function (_Volume) {\n    _inherits(ContainingVolume, _Volume);\n\n    /** @param {Container} container */\n    function ContainingVolume(container) {\n        _classCallCheck(this, ContainingVolume);\n\n        var _this = _possibleConstructorReturn(this, (ContainingVolume.__proto__ || Object.getPrototypeOf(ContainingVolume)).call(this));\n\n        _this.container = container;\n        _this.weightCapacity = 0;\n\n        _this.SetUID();\n        return _this;\n    }\n\n    _createClass(ContainingVolume, [{\n        key: \"SetUID\",\n\n\n        /**\r\n         * @param {string} [uid] - You'll rarely need to provide this\r\n         */\n        value: function SetUID(uid) {\n            this.uid = uid || THREE.Math.generateUUID();\n            return this.uid;\n        }\n    }, {\n        key: \"toJSON\",\n        value: function toJSON() {\n            var json = _get(ContainingVolume.prototype.__proto__ || Object.getPrototypeOf(ContainingVolume.prototype), \"toJSON\", this).call(this);\n            json.type = type;\n            json.weightCapacity = this.weightCapacity;\n            return json;\n        }\n    }, {\n        key: \"ToString\",\n        value: function ToString() {\n            return _get(ContainingVolume.prototype.__proto__ || Object.getPrototypeOf(ContainingVolume.prototype), \"ToString\", this).call(this);\n        }\n    }, {\n        key: \"weightCapacity\",\n        set: function set(value) {\n            this[_weightCapacity] = value;\n        },\n        get: function get() {\n            return this[_weightCapacity];\n        }\n    }], [{\n        key: \"FromJSON\",\n        value: function FromJSON(data) {\n            if (data.type !== type) console.warn('Data supplied is not: ' + type);\n\n            var containingVolume = new ContainingVolume();\n            containingVolume.weightCapacity = data.weightCapacity;\n            _Volume3.default.FromJSON(data, containingVolume);\n\n            return containingVolume;\n        }\n    }]);\n\n    return ContainingVolume;\n}(_Volume3.default);\n\nexports.default = ContainingVolume;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXBpL3BhY2tlci9jb250YWluZXIvQ29udGFpbmluZ1ZvbHVtZS5qcz84NDZkIl0sIm5hbWVzIjpbIl93ZWlnaHRDYXBhY2l0eSIsIlN5bWJvbCIsInR5cGUiLCJDb250YWluaW5nVm9sdW1lIiwiY29udGFpbmVyIiwid2VpZ2h0Q2FwYWNpdHkiLCJTZXRVSUQiLCJ1aWQiLCJUSFJFRSIsIk1hdGgiLCJnZW5lcmF0ZVVVSUQiLCJqc29uIiwidmFsdWUiLCJkYXRhIiwiY29uc29sZSIsIndhcm4iLCJjb250YWluaW5nVm9sdW1lIiwiVm9sdW1lIiwiRnJvbUpTT04iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTs7OztBQUNBOzs7Ozs7Ozs7Ozs7QUFFQSxJQUFNQSxrQkFBa0JDLE9BQU8sZ0JBQVAsQ0FBeEI7QUFDQSxJQUFNQyxPQUFPLGtCQUFiOztJQUVNQyxnQjs7O0FBQ0Y7QUFDQSw4QkFBWUMsU0FBWixFQUFzQjtBQUFBOztBQUFBOztBQUdsQixjQUFLQSxTQUFMLEdBQWlCQSxTQUFqQjtBQUNBLGNBQUtDLGNBQUwsR0FBc0IsQ0FBdEI7O0FBRUEsY0FBS0MsTUFBTDtBQU5rQjtBQU9yQjs7Ozs7O0FBS0Q7OzsrQkFHT0MsRyxFQUFJO0FBQ1AsaUJBQUtBLEdBQUwsR0FBV0EsT0FBT0MsTUFBTUMsSUFBTixDQUFXQyxZQUFYLEVBQWxCO0FBQ0EsbUJBQU8sS0FBS0gsR0FBWjtBQUNIOzs7aUNBRU87QUFDSixnQkFBSUksaUlBQUo7QUFDQUEsaUJBQUtULElBQUwsR0FBWUEsSUFBWjtBQUNBUyxpQkFBS04sY0FBTCxHQUFzQixLQUFLQSxjQUEzQjtBQUNBLG1CQUFPTSxJQUFQO0FBQ0g7OzttQ0FFUztBQUNOO0FBQ0g7OzswQkFwQmtCQyxLLEVBQU07QUFBRSxpQkFBS1osZUFBTCxJQUF3QlksS0FBeEI7QUFBZ0MsUzs0QkFDdkM7QUFBRSxtQkFBTyxLQUFLWixlQUFMLENBQVA7QUFBK0I7OztpQ0FxQnJDYSxJLEVBQUs7QUFDakIsZ0JBQUdBLEtBQUtYLElBQUwsS0FBY0EsSUFBakIsRUFBdUJZLFFBQVFDLElBQVIsQ0FBYSwyQkFBMkJiLElBQXhDOztBQUV2QixnQkFBSWMsbUJBQW1CLElBQUliLGdCQUFKLEVBQXZCO0FBQ0FhLDZCQUFpQlgsY0FBakIsR0FBa0NRLEtBQUtSLGNBQXZDO0FBQ0FZLDZCQUFPQyxRQUFQLENBQWdCTCxJQUFoQixFQUFzQkcsZ0JBQXRCOztBQUVBLG1CQUFPQSxnQkFBUDtBQUNIOzs7O0VBekMwQkMsZ0I7O2tCQTRDaEJkLGdCIiwiZmlsZSI6IjExLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFZvbHVtZSBmcm9tIFwiLi9Wb2x1bWVcIjtcclxuaW1wb3J0IENvbnRhaW5lciBmcm9tIFwiLi9Db250YWluZXJcIjtcclxuXHJcbmNvbnN0IF93ZWlnaHRDYXBhY2l0eSA9IFN5bWJvbCgnd2VpZ2h0Q2FwYWNpdHknKTtcclxuY29uc3QgdHlwZSA9ICdDb250YWluaW5nVm9sdW1lJztcclxuXHJcbmNsYXNzIENvbnRhaW5pbmdWb2x1bWUgZXh0ZW5kcyBWb2x1bWUge1xyXG4gICAgLyoqIEBwYXJhbSB7Q29udGFpbmVyfSBjb250YWluZXIgKi9cclxuICAgIGNvbnN0cnVjdG9yKGNvbnRhaW5lcil7XHJcbiAgICAgICAgc3VwZXIoKTtcclxuICAgICAgICBcclxuICAgICAgICB0aGlzLmNvbnRhaW5lciA9IGNvbnRhaW5lcjtcclxuICAgICAgICB0aGlzLndlaWdodENhcGFjaXR5ID0gMDtcclxuXHJcbiAgICAgICAgdGhpcy5TZXRVSUQoKTtcclxuICAgIH1cclxuXHJcbiAgICBzZXQgd2VpZ2h0Q2FwYWNpdHkodmFsdWUpeyB0aGlzW193ZWlnaHRDYXBhY2l0eV0gPSB2YWx1ZTsgfVxyXG4gICAgZ2V0IHdlaWdodENhcGFjaXR5KCl7IHJldHVybiB0aGlzW193ZWlnaHRDYXBhY2l0eV07IH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBbdWlkXSAtIFlvdSdsbCByYXJlbHkgbmVlZCB0byBwcm92aWRlIHRoaXNcclxuICAgICAqL1xyXG4gICAgU2V0VUlEKHVpZCl7XHJcbiAgICAgICAgdGhpcy51aWQgPSB1aWQgfHwgVEhSRUUuTWF0aC5nZW5lcmF0ZVVVSUQoKTtcclxuICAgICAgICByZXR1cm4gdGhpcy51aWQ7XHJcbiAgICB9XHJcblxyXG4gICAgdG9KU09OKCl7XHJcbiAgICAgICAgdmFyIGpzb24gPSBzdXBlci50b0pTT04oKTtcclxuICAgICAgICBqc29uLnR5cGUgPSB0eXBlO1xyXG4gICAgICAgIGpzb24ud2VpZ2h0Q2FwYWNpdHkgPSB0aGlzLndlaWdodENhcGFjaXR5O1xyXG4gICAgICAgIHJldHVybiBqc29uO1xyXG4gICAgfVxyXG5cclxuICAgIFRvU3RyaW5nKCl7XHJcbiAgICAgICAgcmV0dXJuIHN1cGVyLlRvU3RyaW5nKCk7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIEZyb21KU09OKGRhdGEpe1xyXG4gICAgICAgIGlmKGRhdGEudHlwZSAhPT0gdHlwZSkgY29uc29sZS53YXJuKCdEYXRhIHN1cHBsaWVkIGlzIG5vdDogJyArIHR5cGUpO1xyXG5cclxuICAgICAgICB2YXIgY29udGFpbmluZ1ZvbHVtZSA9IG5ldyBDb250YWluaW5nVm9sdW1lKCk7XHJcbiAgICAgICAgY29udGFpbmluZ1ZvbHVtZS53ZWlnaHRDYXBhY2l0eSA9IGRhdGEud2VpZ2h0Q2FwYWNpdHk7XHJcbiAgICAgICAgVm9sdW1lLkZyb21KU09OKGRhdGEsIGNvbnRhaW5pbmdWb2x1bWUpO1xyXG5cclxuICAgICAgICByZXR1cm4gY29udGFpbmluZ1ZvbHVtZTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQ29udGFpbmluZ1ZvbHVtZTtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvYXBpL3BhY2tlci9jb250YWluZXIvQ29udGFpbmluZ1ZvbHVtZS5qcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///11\n");

/***/ }),
/* 12 */
/***/ (function(module, exports) {

eval("var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzPzM2OTgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDRDQUE0Qzs7QUFFNUMiLCJmaWxlIjoiMTIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZztcclxuXHJcbi8vIFRoaXMgd29ya3MgaW4gbm9uLXN0cmljdCBtb2RlXHJcbmcgPSAoZnVuY3Rpb24oKSB7XHJcblx0cmV0dXJuIHRoaXM7XHJcbn0pKCk7XHJcblxyXG50cnkge1xyXG5cdC8vIFRoaXMgd29ya3MgaWYgZXZhbCBpcyBhbGxvd2VkIChzZWUgQ1NQKVxyXG5cdGcgPSBnIHx8IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKSB8fCAoMSxldmFsKShcInRoaXNcIik7XHJcbn0gY2F0Y2goZSkge1xyXG5cdC8vIFRoaXMgd29ya3MgaWYgdGhlIHdpbmRvdyByZWZlcmVuY2UgaXMgYXZhaWxhYmxlXHJcblx0aWYodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIilcclxuXHRcdGcgPSB3aW5kb3c7XHJcbn1cclxuXHJcbi8vIGcgY2FuIHN0aWxsIGJlIHVuZGVmaW5lZCwgYnV0IG5vdGhpbmcgdG8gZG8gYWJvdXQgaXQuLi5cclxuLy8gV2UgcmV0dXJuIHVuZGVmaW5lZCwgaW5zdGVhZCBvZiBub3RoaW5nIGhlcmUsIHNvIGl0J3NcclxuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBnO1xyXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAod2VicGFjaykvYnVpbGRpbi9nbG9iYWwuanNcbi8vIG1vZHVsZSBpZCA9IDEyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///12\n");

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Input = __webpack_require__(50);\n\nvar _Input2 = _interopRequireDefault(_Input);\n\nvar _Quality = __webpack_require__(51);\n\nvar _Quality2 = _interopRequireDefault(_Quality);\n\nvar _Controller = __webpack_require__(33);\n\nvar _Controller2 = _interopRequireDefault(_Controller);\n\nvar _Renderer = __webpack_require__(52);\n\nvar _Renderer2 = _interopRequireDefault(_Renderer);\n\nvar _Camera = __webpack_require__(14);\n\nvar _Camera2 = _interopRequireDefault(_Camera);\n\nvar _HUDView = __webpack_require__(53);\n\nvar _HUDView2 = _interopRequireDefault(_HUDView);\n\nvar _UX = __webpack_require__(18);\n\nvar _UX2 = _interopRequireDefault(_UX);\n\nvar _Utils = __webpack_require__(0);\n\nvar _Utils2 = _interopRequireDefault(_Utils);\n\nvar _Signaler2 = __webpack_require__(1);\n\nvar _Signaler3 = _interopRequireDefault(_Signaler2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar signals = {\n    init: 'init',\n    started: 'started',\n    paused: 'paused',\n    stopped: 'stopped'\n};\n\nvar SceneSetup = function (_Signaler) {\n    _inherits(SceneSetup, _Signaler);\n\n    /**\r\n     * \r\n     * @param {HTMLDivElement} containerDiv \r\n     * @param {UX} ux \r\n     */\n    function SceneSetup(containerDiv, ux) {\n        _classCallCheck(this, SceneSetup);\n\n        var _this = _possibleConstructorReturn(this, (SceneSetup.__proto__ || Object.getPrototypeOf(SceneSetup)).call(this));\n\n        _this.domElement = containerDiv;\n        _this.ux = ux;\n        return _this;\n    }\n\n    _createClass(SceneSetup, [{\n        key: 'Init',\n        value: function Init() {\n\n            var quality = new _Quality2.default().Common(2);\n\n            var units = this.ux.params.units;\n            var controllerParams = {};\n            this.sceneController = new _Controller2.default(controllerParams);\n\n            /** @type {import('../scene/Renderer').RendererParams} */\n            var rendererParams = { clearColor: this.ux.params.backgroundColor };\n            Object.assign(rendererParams, quality);\n            this.sceneRenderer = new _Renderer2.default(rendererParams);\n            this.sceneRenderer.renderer.toneMappingExposure = 1.6;\n            this.domElement.appendChild(this.sceneRenderer.renderer.domElement);\n\n            /** @type {import('./Camera').CameraParams} */\n            var cameraParams = { fov: this.ux.params.fov, aspect: 1, near: 1 * units, far: 5000 * units };\n            this.cameraController = new _Camera2.default(cameraParams);\n            this.cameraController.OrbitControls(this.sceneRenderer.renderer.domElement);\n\n            this.input = new _Input2.default(this.domElement);\n            this.input.camera = this.cameraController.camera;\n\n            var sceneRendererRef = this.sceneRenderer;\n            var appCameraRef = this.cameraController.camera;\n            this.input.onResize.push(function (screen) {\n                sceneRendererRef.ReconfigureViewport(screen, appCameraRef);\n            });\n\n            // hud\n            if (this.ux.params.hud) {\n                /** @type {import('../view/HUDView').HUDViewParams} */\n                var hudParams = { ux: this.ux, sceneSetup: this, container: this.sceneRenderer.renderer.domElement };\n                /** @type {import('./Camera').CameraParams} */\n                var hudCameraParams = _Utils2.default.AssignUndefined({ fov: 15 }, cameraParams);\n                this.hud = new _HUDView2.default(hudParams, hudCameraParams);\n                var hudCameraRef = this.hud.cameraController.camera;\n                this.input.onResize.push(function (screen) {\n                    sceneRendererRef.AdjustCamera(screen, hudCameraRef);\n                });\n\n                this.sceneRenderer.renderer.autoClear = false;\n            }\n            // /hud\n\n            // Comeplete setup\n            var setupParams = {\n                gridHelper: false\n\n                // Initial camera move\n            };this.cameraController.position.x = 100 * units;\n            this.cameraController.position.y = 100 * units;\n            this.cameraController.position.z = 100 * units;\n            this.cameraController.SetTarget(new THREE.Vector3());\n\n            // Env\n            if (setupParams.gridHelper) {\n                var gridHelper = new THREE.GridHelper(200 * units, 20);\n                this.sceneController.AddDefault(gridHelper);\n            }\n\n            if (this.ux.params.configure) {\n                this.Configure();\n            }\n\n            var scope = this;\n            return new Promise(function (resolve, reject) {\n                scope.Dispatch(signals.init);\n                resolve();\n            });\n        }\n    }, {\n        key: 'Start',\n        value: function Start() {\n            if (this.Update === undefined) {\n                var scope = this;\n                var sceneRenderer = this.sceneRenderer;\n                var scene1 = this.sceneController.scene,\n                    camera1 = this.cameraController.camera;\n\n                if (this.ux.params.hud) {\n                    var hud = this.hud;\n                    var scene2 = hud.scene,\n                        camera2 = hud.cameraController.camera;\n\n                    this.Update = function (timestamp) {\n                        scope.animationFrameID = requestAnimationFrame(scope.Update);\n\n                        scope.input.Update();\n                        scope.cameraController.Update();\n                        hud.Update(timestamp);\n\n                        sceneRenderer.renderer.clear();\n                        sceneRenderer.Render(scene1, camera1);\n                        sceneRenderer.renderer.clearDepth();\n                        sceneRenderer.Render(scene2, camera2);\n                    };\n                } else {\n                    this.Update = function (timestamp) {\n                        scope.animationFrameID = requestAnimationFrame(scope.Update);\n\n                        scope.input.Update();\n                        scope.cameraController.Update();\n\n                        sceneRenderer.Render(scene1, camera1);\n                    };\n                }\n            }\n\n            this.Update();\n            this.input.screenNeedsUpdate = true;\n            this.input.cameraNeedsUpdate = true;\n\n            this.Dispatch(signals.started);\n        }\n    }, {\n        key: 'Pause',\n        value: function Pause() {\n            if (this.animationFrameID) {\n                cancelAnimationFrame(this.animationFrameID);\n            }\n\n            this.Dispatch(signals.paused);\n        }\n    }, {\n        key: 'Stop',\n        value: function Stop() {\n            if (this.animationFrameID) {\n                cancelAnimationFrame(this.animationFrameID);\n            }\n            this.input.Dispose();\n            this.sceneRenderer.Dispose();\n\n            this.Dispatch(signals.stopped);\n        }\n    }, {\n        key: 'DefaultLights',\n        value: function DefaultLights(controller, configure, helpers) {\n\n            var units = this.ux.params.units;\n\n            var ambientLight = new THREE.AmbientLight(0x404040);\n\n            var directionalLight = new THREE.DirectionalLight(0xfeeedd);\n            directionalLight.position.set(300 * units, 300 * units, 125 * units);\n\n            controller.ambientContainer.add(ambientLight);\n            controller.ambientContainer.add(directionalLight);\n\n            var directionalLightComplem = new THREE.DirectionalLight(0xfeeedd);\n            directionalLightComplem.position.set(-200 * units, 175 * units, 125 * units);\n\n            controller.ambientContainer.add(directionalLightComplem);\n\n            if (this.ux.params.configure && configure) {\n                var onGUIChanged = function onGUIChanged() {\n                    dl.shadow.camera.updateProjectionMatrix();\n                    sceneRenderer.UpdateShadowMaps();\n                    if (dl.shadow.map) {\n                        if (dl.shadow.mapSize.manhattanDistanceTo(mapSize) > 0.0001) {\n                            mapSize.copy(dl.shadow.mapSize);\n                            dl.shadow.map.dispose();\n                            dl.shadow.map = null;\n                        }\n                    }\n\n                    if (helpers) {\n                        dlHelper.update();\n                        dlCameraHelper.update();\n                    }\n                };\n\n                var Smart = __webpack_require__(20).default;\n                var Config = __webpack_require__(7).default;\n                var Control3D = __webpack_require__(21).default;\n\n                var dl = directionalLight;\n                var _smart = new Smart(dl, 'Directional light');\n                _smart.MakeShortcut('Configure');\n\n                var lightController = ['color', 'intensity', 'castShadow'];\n                var shadowControllers = ['shadow.bias', 'shadow.radius', 'shadow.mapSize.x', 'shadow.mapSize.y'];\n                //let sc = dl.shadow.camera as THREE.OrthographicCamera;\n                var shadowCameraControllers = Config.Unroll('#shadow.camera', 'left', 'top', 'right', 'bottom', 'near', 'far');\n\n                var dlHelper = void 0,\n                    dlCameraHelper = void 0;\n                if (helpers) {\n                    dlHelper = new THREE.DirectionalLightHelper(dl, 5);\n                    this.sceneController.AddDefault(dlHelper);\n                    dlCameraHelper = new THREE.CameraHelper(dl.shadow.camera);\n                    this.sceneController.AddDefault(dlCameraHelper);\n                }\n\n                var sceneRenderer = this.sceneRenderer;\n                global.sceneRenderer = sceneRenderer;\n                var mapSize = dl.shadow.mapSize.clone();\n\n\n                _smart.Config.apply(_smart, ['Directional light + shadow', dl, onGUIChanged, Smart.serializeModes.json].concat(lightController, shadowControllers, _toConsumableArray(shadowCameraControllers)));\n            }\n\n            return [ambientLight, directionalLight, directionalLightComplem];\n        }\n    }, {\n        key: 'Configure',\n        value: function Configure() {\n\n            var Smart = __webpack_require__(20).default;\n            var Config = __webpack_require__(7).default;\n            var Control3D = __webpack_require__(21).default;\n\n            var scope = this;\n\n            var appControl3D = Control3D.Configure('app', this.cameraController.camera, this.sceneRenderer.renderer.domElement);\n            this.sceneController.AddDefault(appControl3D.control);\n\n            if (this.ux.params.hud) {\n                var onGUIChanged = function onGUIChanged() {\n                    console.log('Camera changed');\n                };\n\n                var hudControl3D = Control3D.Configure('hud', this.hud.cameraController.camera, this.sceneRenderer.renderer.domElement);\n                this.hud.AddDefault(hudControl3D.control);\n\n                var hud = this.hud;\n\n\n                var toggle = false;\n                var control = {\n                    toggleOrbitOwner: function toggleOrbitOwner() {\n                        if (toggle) {\n                            if (!hud.cameraController.orbitControls) {\n                                hud.cameraController.OrbitControls(scope.sceneRenderer.renderer.domElement);\n                            }\n                            scope.cameraController.Hold();\n                            hud.cameraController.Release();\n                        } else {\n                            scope.cameraController.Release();\n                            hud.cameraController.Hold();\n                        }\n                        toggle = !toggle;\n                    },\n                    hudCam: hud.cameraController,\n                    print: function print() {\n                        smart.config.Update();\n                        console.group('hudCam properties');\n                        console.log('position', _Utils2.default.VecToString(hud.cameraController.position, 1));\n                        console.log('rotation', _Utils2.default.VecToString(hud.cameraController.rotation, 3));\n                        console.groupEnd();\n                    }\n                };\n\n                control.toggleOrbitOwner();\n\n                var smart = new Smart(this, 'HUDView');\n                smart.MakeShortcut('Configure');\n                var rotationProperties = Config.Unroll('#hudCam.rotation', 'x', 'y', 'z');\n                var rotationControllers = Config.Controller.Multiple(rotationProperties, 0, 2 * Math.PI, 2 * Math.PI / 360);\n                smart.Config.apply(smart, [null, control, onGUIChanged, Smart.serializeModes.none, 'toggleOrbitOwner', 'print', 'hudCam.camera.fov'].concat(_toConsumableArray(Config.Unroll('#hudCam.position', 'x', 'y', 'z')), _toConsumableArray(rotationControllers)));\n\n                console.log('HUDView config', smart.config.gui.list || smart);\n            }\n        }\n    }], [{\n        key: 'signals',\n        get: function get() {\n            return signals;\n        }\n    }]);\n\n    return SceneSetup;\n}(_Signaler3.default);\n\nexports.default = SceneSetup;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(12)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///13\n");

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Tween = __webpack_require__(15);\n\nvar _Tween2 = _interopRequireDefault(_Tween);\n\nvar _Signaler2 = __webpack_require__(1);\n\nvar _Signaler3 = _interopRequireDefault(_Signaler2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar epsilon = Math.pow(2, -52);\n\n/**\r\n * @typedef {Object} CameraParams\r\n * @property {Number} fov\r\n * @property {Number} aspect\r\n * @property {Number} near\r\n * @property {Number} far\r\n */\n\n/** @typedef FrameCoords @property {THREE.Vector3} position @property {THREE.Vector3} center */\n\n/** @type {FrameCoords} */\nvar tempCoords = {};\n/** @type {FrameCoords} */\nvar ownCoords = { position: new THREE.Vector3(), center: new THREE.Vector3() };\n\nvar tempVec3 = new THREE.Vector3(),\n    tempVec3_b = new THREE.Vector3();\n\nvar signals = {\n    change: 'change',\n    userChange: 'userChange'\n};\n\nvar Camera = function (_Signaler) {\n    _inherits(Camera, _Signaler);\n\n    /**\r\n     * @param {CameraParams} params \r\n     */\n    function Camera(params) {\n        _classCallCheck(this, Camera);\n\n        var _this = _possibleConstructorReturn(this, (Camera.__proto__ || Object.getPrototypeOf(Camera)).call(this));\n\n        _this.params = params;\n\n        _this.camera = new THREE.PerspectiveCamera(_this.params.fov, _this.params.aspect, _this.params.near, _this.params.far);\n        _this.camera.name = 'UserCamera';\n\n        _this.changed = false;\n\n        _this.dollyAnimation = {\n            enabled: false,\n            position: _Tween2.default.Combo.RequestN(_Tween2.default.functions.ease.easeInOutQuad, .5, 0, 0, 0, 0, 0, 0),\n            lookAt: _Tween2.default.Combo.RequestN(_Tween2.default.functions.ease.easeInOutQuad, .5, 0, 0, 0, 0, 0, 0)\n        };\n\n        var scope = _this;\n        function onDollyAnimationComplete() {\n            scope.dollyAnimation.enabled = false;\n        }\n        _this.dollyAnimation.position.onComplete = onDollyAnimationComplete;\n        _this.dollyAnimation.lookAt.onComplete = onDollyAnimationComplete;\n\n        _this.dollyAnimation.position.Hook(_this.position, 'x', 'y', 'z');\n\n        _this.fovAnimation = {\n            enabled: false,\n            fov: new _Tween2.default(_Tween2.default.functions.ease.easeInOutQuad, 0, 0, 0)\n        };\n\n        function onFOVAnimationComplete() {\n            scope.fovAnimation.enabled = false;\n        }\n        _this.fovAnimation.fov.onComplete = onFOVAnimationComplete;\n        _this.fovAnimation.fov.Hook(_this.camera, 'fov');\n        return _this;\n    }\n\n    _createClass(Camera, [{\n        key: \"FirstPersonControls\",\n        value: function FirstPersonControls(container, params) {\n            if (this.fpsControls === undefined && container !== undefined) {\n                this.fpsControls = new App.Navigation.FirstPerson(this.camera, container);\n\n                this.fpsControls.Hold = function () {\n                    this.enabled = false;\n                };\n                this.fpsControls.Release = function () {\n                    this.enabled = true;\n                };\n            }\n\n            if (this.fpsControls !== undefined) {\n                if (params !== undefined) {\n                    this.fpsControls.speed.set(params.speedX, params.speedY);\n                    this.fpsControls.damping = params.damping;\n                    this.fpsControls.momentum = params.momentum;\n                    this.fpsControls.limitPhi = params.limitPhi;\n                    this.fpsControls.moveSpeed = params.moveSpeed;\n                    this.fpsControls.keyControls = true;\n                }\n\n                this.controls = this.fpsControls;\n            }\n        }\n    }, {\n        key: \"OrbitControls\",\n        value: function OrbitControls(container, params) {\n            if (this.orbitControls === undefined && container !== undefined) {\n\n                var lookTarget = new THREE.Vector3();\n                this.camera.getWorldDirection(lookTarget);\n                lookTarget.multiplyScalar(200).add(this.camera.position);\n\n                /** @type {THREE.EventDispatcher} */\n                this.orbitControls = new THREE.OrbitControls(this.camera, container);\n                this.orbitControls.target.copy(lookTarget);\n\n                this.dollyAnimation.lookAt.Hook(this.orbitControls.target, 'x', 'y', 'z');\n\n                var _scope = this;\n                this.orbitControls.addEventListener('change', function (e) {\n                    _scope.changed = true;\n                });\n                this.orbitControls.addEventListener('start', function (e) {\n                    _scope.Dispatch(signals.userChange);\n                });\n\n                this.orbitControls.Update = function () {\n                    if (this.enabled) {\n                        if (this.object.position.distanceTo(this.target) < 50) {\n                            var v = new THREE.Vector3().subVectors(this.target, this.object.position).multiplyScalar(.5);\n                            this.target.add(v);\n                        }\n                        this.update();\n                    }\n                };\n                this.orbitControls.Hold = function () {\n                    this.saveState();\n                    this.enabled = false;\n                };\n                this.orbitControls.Release = function () {\n                    this.reset();\n                    this.enabled = true;\n                };\n            }\n\n            params = params || {\n                maxDistance: 9000.0 * /*units*/1,\n                maxPolarAngle: Math.PI * 0.895\n            };\n            if (params !== undefined) {\n                this.orbitControls.maxDistance = params.maxDistance;\n                this.orbitControls.maxPolarAngle = params.maxPolarAngle;\n                this.orbitControls.autoRotate = false;\n            }\n\n            this.controls = this.orbitControls;\n        }\n    }, {\n        key: \"ToggleControls\",\n        value: function ToggleControls() {\n            this.Hold();\n\n            if (this.controls === this.orbitControls) {\n                if (this.fpsControls) {\n                    this.fpsControls.LerpRotation(this.camera, 1);\n                    this.FirstPersonControls();\n                }\n            } else {\n                if (this.orbitControls) {\n                    this.OrbitControls();\n\n                    // target\n                    var maxDistance = 100;\n\n                    var point = new THREE.Vector3(0, 0, -1);\n                    var quat = new THREE.Quaternion();\n                    point.applyQuaternion(this.camera.getWorldQuaternion(quat)).normalize().multiplyScalar(maxDistance * .5).add(this.camera.position);\n\n                    this.SetTarget(point);\n                }\n            }\n\n            this.Release();\n        }\n\n        /** @param {THREE.Vector3} position */\n\n    }, {\n        key: \"SetTarget\",\n        value: function SetTarget(position) {\n            if (this.controls instanceof THREE.OrbitControls) {\n                this.controls.target.copy(position);\n                this.changed = true;\n            } else {\n                console.warn('SetTarget not implemented for control type:', this.controls);\n            }\n        }\n\n        /** @returns {THREE.Vector3} */\n\n    }, {\n        key: \"GetTarget\",\n        value: function GetTarget() {\n            if (this.controls instanceof THREE.OrbitControls) {\n                return this.controls.target;\n            } else {\n                console.warn('GetTarget not implemented for control type:', this.controls);\n            }\n        }\n    }, {\n        key: \"Update\",\n        value: function Update() {\n            if (this.dollyAnimation.enabled) {\n                this.dollyAnimation.position.Update();\n                this.dollyAnimation.lookAt.Update();\n                this.changed = true;\n            }\n\n            if (this.fovAnimation.enabled) {\n                this.fovAnimation.fov.Update();\n                this.camera.updateProjectionMatrix();\n                this.changed = true;\n            }\n\n            if (this.controls !== undefined) {\n                this.controls.Update();\n            }\n        }\n    }, {\n        key: \"Hold\",\n        value: function Hold() {\n            if (this.enabled && this.controls !== undefined && this.controls.Hold) {\n                this.controls.Hold();\n            }\n        }\n    }, {\n        key: \"Release\",\n        value: function Release() {\n            if (!this.enabled && this.controls !== undefined && this.controls.Release) {\n                this.controls.Release();\n            }\n        }\n\n        /**\r\n         * @param {THREE.Box3} box3 \r\n         * @param {Number} [distanceMultiplier]\r\n         * @param {THREE.Vector3} [orientation]\r\n         * @param {Number} [fov] fov in degrees\r\n         * @returns {FrameCoords}\r\n         */\n\n    }, {\n        key: \"CalcFrameCoords\",\n        value: function CalcFrameCoords(box3, distanceMultiplier, orientation, fov) {\n            if (distanceMultiplier === undefined) distanceMultiplier = .75;\n\n            fov = (fov || this.camera.fov) * (Math.PI / 180);\n\n            var extent = tempVec3;\n            box3.getSize(extent);\n            var frameSize = Math.max(extent.x, extent.y, extent.z, 1);\n            var distance = Math.abs(frameSize / Math.sin(fov / 2)) * distanceMultiplier;\n\n            var center = tempVec3_b;\n            box3.getCenter(center);\n\n            var position = tempVec3;\n            orientation = orientation ? orientation : position.subVectors(this.camera.position, center);\n            position.copy(orientation).normalize().multiplyScalar(distance).add(center);\n            position.y = Math.abs(position.y);\n\n            tempCoords.position = position;\n            tempCoords.center = center;\n            return tempCoords;\n        }\n\n        /**\r\n         * @param {THREE.Box3} box3 \r\n         * @param {Number} [distanceMultiplier]\r\n         */\n\n    }, {\n        key: \"Frame\",\n        value: function Frame(box3, distanceMultiplier) {\n            var coords = this.CalcFrameCoords(box3, distanceMultiplier);\n\n            this.camera.position.copy(coords.position);\n            this.SetTarget(coords.center);\n        }\n\n        /**\r\n         * @param {Number} duration\r\n         * @param {THREE.Box3} box3 \r\n         * @param {Number} [distanceMultiplier]\r\n         */\n\n    }, {\n        key: \"TransitionToFrame\",\n        value: function TransitionToFrame(duration, box3, distanceMultiplier) {\n            var endCoords = this.CalcFrameCoords(box3, distanceMultiplier);\n            this.TransitionFromToCoords(duration, undefined, endCoords);\n        }\n\n        /**\r\n         * @param {Number} duration\r\n         * @param {FrameCoords} startCoords \r\n         * @param {FrameCoords} endCoords \r\n         */\n\n    }, {\n        key: \"TransitionFromToCoords\",\n        value: function TransitionFromToCoords(duration, startCoords, endCoords) {\n\n            if (!startCoords) {\n                startCoords = ownCoords;\n                startCoords.position.copy(this.position);\n                startCoords.center.copy(this.orbitControls.target);\n            }\n\n            this.dollyAnimation.position.SetDurations(duration, duration, duration);\n            this.dollyAnimation.lookAt.SetDurations(duration, duration, duration);\n\n            var p = startCoords.position;\n            this.dollyAnimation.position.SetStartValues(p.x, p.y, p.z);\n            var tp = endCoords.position;\n            this.dollyAnimation.position.SetDeltas(tp.x - p.x, tp.y - p.y, tp.z - p.z);\n\n            p = startCoords.center;\n            this.dollyAnimation.lookAt.SetStartValues(p.x, p.y, p.z);\n            tp = endCoords.center;\n            this.dollyAnimation.lookAt.SetDeltas(tp.x - p.x, tp.y - p.y, tp.z - p.z);\n\n            this.dollyAnimation.position.Restart();\n            this.dollyAnimation.lookAt.Restart();\n            this.dollyAnimation.enabled = true;\n        }\n\n        /** @param {Number} duration @param {Number} fov */\n\n    }, {\n        key: \"TransitionToFOV\",\n        value: function TransitionToFOV(duration, fov) {\n            var deltaFOV = fov - this.camera.fov;\n            if (Math.abs(deltaFOV) < epsilon) return;\n\n            this.fovAnimation.fov.duration = duration;\n            this.fovAnimation.fov.startValue = this.camera.fov;\n            this.fovAnimation.fov.delta = deltaFOV;\n            this.fovAnimation.fov.Restart();\n            this.fovAnimation.enabled = true;\n        }\n\n        /**\r\n         * @returns {Boolean}\r\n         */\n\n    }, {\n        key: \"position\",\n        get: function get() {\n            return this.camera.position;\n        },\n        set: function set(value) {\n            this.camera.position.copy(value);this.changed = true;\n        }\n    }, {\n        key: \"rotation\",\n        get: function get() {\n            return this.camera.rotation;\n        },\n        set: function set(value) {\n            this.camera.rotation.copy(value);this.changed = true;\n        }\n    }, {\n        key: \"enabled\",\n        get: function get() {\n            return this.controls && this.controls.enabled;\n        }\n    }], [{\n        key: \"signals\",\n        get: function get() {\n            return signals;\n        }\n    }]);\n\n    return Camera;\n}(_Signaler3.default);\n\nexports.default = Camera;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///14\n");

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Pool = __webpack_require__(23);\n\nvar _Pool2 = _interopRequireDefault(_Pool);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/** \r\n * Tween update function\r\n * @param {Number} time \r\n * @param {Number} startValue \r\n * @param {Number} delta \r\n * @param {Number} duration\r\n * @returns {Number} value\r\n */\nfunction TweenCallback(time, startValue, delta, duration) {}\n\n/**\r\n * On completed callback\r\n * @param {Tween} target\r\n */\nfunction TweenCompletedCallback(target) {}\n\nvar clock = new THREE.Clock();\n\nfunction poolNewFN() {\n    return new Tween();\n}\n/** @param {Tween} tween */\nfunction poolResetFN(tween) {\n    return tween;\n}\nvar pool = new _Pool2.default(poolNewFN, poolResetFN);\n\nvar functions = {\n    /** @type {TweenCallback} */\n    linear: function linear(t, b, c, d) {\n        return b + c * (t / d);\n    },\n\n    ease: {\n        /** @type {TweenCallback} */\n        easeOutElastic: function easeOutElastic(t, b, c, d) {\n            var ts = (t /= d) * t;\n            var tc = ts * t;\n            return b + c * (33 * tc * ts + -106 * ts * ts + 126 * tc + -67 * ts + 15 * t);\n        },\n\n        /** @type {TweenCallback} */\n        easeOutQuad: function easeOutQuad(t, b, c, d) {\n            return -c * (t /= d) * (t - 2) + b;\n        },\n\n        /** @type {TweenCallback} */\n        easeOutCubic: function easeOutCubic(t, b, c, d) {\n            return c * ((t = t / d - 1) * t * t + 1) + b;\n        },\n\n        easeInOutQuad: function easeInOutQuad(t, b, c, d) {\n            if ((t /= d / 2) < 1) return c / 2 * t * t + b;\n            return -c / 2 * (--t * (t - 2) - 1) + b;\n        }\n    },\n\n    special: {\n        /** @type {TweenCallback} */\n        pingPong: function pingPong(t, b, c, d) {\n            return Math.sin(t / d * Math.PI) * c + b;\n        }\n    }\n};\n\n/**\r\n * On completed callback\r\n * @param {TweenCombo} target\r\n */\nfunction TweenComboCompletedCallback(target) {}\n\nvar TweenCombo = function () {\n    /**\r\n     * \r\n     * @param {Array<Tween>} tweens \r\n     */\n    function TweenCombo() {\n        _classCallCheck(this, TweenCombo);\n\n        for (var _len = arguments.length, tweens = Array(_len), _key = 0; _key < _len; _key++) {\n            tweens[_key] = arguments[_key];\n        }\n\n        this.tweens = tweens;\n\n        /** @type {TweenComboCompletedCallback} */\n        this.onComplete;\n        this.completed = false;\n    }\n\n    /** @param {Array<Number>} args */\n\n\n    _createClass(TweenCombo, [{\n        key: \"SetDurations\",\n        value: function SetDurations() {\n            for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                args[_key2] = arguments[_key2];\n            }\n\n            for (var i = 0; i < this.tweens.length; i++) {\n                this.tweens[i].duration = args[i];\n            }\n        }\n\n        /** @param {Array<Number>} args */\n\n    }, {\n        key: \"SetDeltas\",\n        value: function SetDeltas() {\n            for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n                args[_key3] = arguments[_key3];\n            }\n\n            for (var i = 0; i < this.tweens.length; i++) {\n                this.tweens[i].delta = args[i];\n            }\n        }\n\n        /** @param {Array<Number>} args */\n\n    }, {\n        key: \"SetStartValues\",\n        value: function SetStartValues() {\n            for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n                args[_key4] = arguments[_key4];\n            }\n\n            for (var i = 0; i < this.tweens.length; i++) {\n                this.tweens[i].startValue = args[i];\n            }\n        }\n\n        /**\r\n         * @param {Object} object \r\n         * @param {Array<string>} properties \r\n         */\n\n    }, {\n        key: \"Hook\",\n        value: function Hook(object) {\n            for (var _len5 = arguments.length, properties = Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n                properties[_key5 - 1] = arguments[_key5];\n            }\n\n            for (var i = 0; i < this.tweens.length; i++) {\n                this.tweens[i].Hook(object, properties[i]);\n            };\n        }\n    }, {\n        key: \"Unhook\",\n        value: function Unhook() {\n            this.tweens.forEach(function (tween) {\n                return tween.Unhook();\n            });\n        }\n\n        /** Restarts time */\n\n    }, {\n        key: \"Restart\",\n        value: function Restart() {\n            this.tweens.forEach(function (tween) {\n                return tween.Restart();\n            });\n        }\n\n        /**\r\n         * Update tween\r\n         * @param {Number} [t] [0, duration]\r\n         */\n\n    }, {\n        key: \"Update\",\n        value: function Update(t) {\n            var completed = true;\n            this.tweens.forEach(function (tween) {\n                if (tween.completed === false) tween.Update(t);\n\n                completed = completed && tween.completed;\n            });\n\n            this.completed = completed;\n            if (this.completed && this.onComplete) this.onComplete(this);\n        }\n\n        /**\r\n         * Returns tweens to pool\r\n         */\n\n    }, {\n        key: \"Return\",\n        value: function Return() {\n            this.tweens.forEach(function (tween) {\n                pool.Return(tween);\n            });\n        }\n\n        /**\r\n         * @param {TweenCallback} callback \r\n         * @param {Number} startValue0\r\n         * @param {Number} startValue1\r\n         * @param {Number} startValue2\r\n         * @param {Number} delta0\r\n         * @param {Number} delta1\r\n         * @param {Number} delta2\r\n         * @param {Number} duration\r\n         */\n\n    }], [{\n        key: \"Request3\",\n        value: function Request3(callback, duration, startValue0, delta0, startValue1, delta1, startValue2, delta2) {\n            var tween0 = pool.Request();\n            tween0.Reset(callback, startValue0, delta0, duration);\n\n            var tween1 = pool.Request();\n            tween1.Reset(callback, startValue1, delta1, duration);\n\n            var tween2 = pool.Request();\n            tween2.Reset(callback, startValue2, delta2, duration);\n\n            var combo = new TweenCombo(tween0, tween1, tween2);\n            return combo;\n        }\n\n        /**\r\n         * @param {TweenCallback} callback \r\n         * @param {Number} duration \r\n         * @param {Array<Number>} args startValueN, deltaN\r\n         */\n\n    }, {\n        key: \"RequestN\",\n        value: function RequestN(callback, duration) {\n\n            var tweens = [];\n            for (var i = 0; i < (arguments.length <= 2 ? 0 : arguments.length - 2); i += 2) {\n                var tween = pool.Request();\n                tween.Reset(callback, arguments.length <= i + 2 ? undefined : arguments[i + 2], arguments.length <= i + 1 + 2 ? undefined : arguments[i + 1 + 2], duration);\n                tweens.push(tween);\n            }\n\n            var combo = new (Function.prototype.bind.apply(TweenCombo, [null].concat(tweens)))();\n            return combo;\n        }\n    }]);\n\n    return TweenCombo;\n}();\n\nvar Tween = function () {\n    /**\r\n     * @param {TweenCallback} callback \r\n     * @param {Number} [startValue] \r\n     * @param {Number} delta \r\n     * @param {Number} duration \r\n     */\n    function Tween(callback, startValue, delta, duration) {\n        _classCallCheck(this, Tween);\n\n        this.Reset(callback, startValue, delta, duration);\n\n        /** @type {TweenCompletedCallback} */\n        this.onComplete;\n    }\n\n    /**\r\n     * @param {TweenCallback} callback \r\n     * @param {Number} [startValue]\r\n     * @param {Number} delta \r\n     * @param {Number} duration \r\n     */\n\n\n    _createClass(Tween, [{\n        key: \"Reset\",\n        value: function Reset(callback, startValue, delta, duration) {\n            this.callback = callback;\n            this.startValue = startValue;\n            this.delta = delta;\n            this.duration = duration;\n\n            if (this.startValue === undefined && this.object && this.property) {\n                this.startValue = this.object[this.property];\n            }\n\n            this.Restart();\n        }\n\n        /** Restarts time */\n\n    }, {\n        key: \"Restart\",\n        value: function Restart() {\n            this.completed = false;\n            this.startTime = clock.getElapsedTime();\n        }\n\n        /**\r\n         * @param {Object} object \r\n         * @param {string} property \r\n         */\n\n    }, {\n        key: \"Hook\",\n        value: function Hook(object, property) {\n            this.object = object;\n            this.property = property;\n\n            if (this.startValue === undefined) {\n                this.startValue = this.object[this.property];\n            }\n        }\n    }, {\n        key: \"Unhook\",\n        value: function Unhook() {\n            this.object = this.property = undefined;\n        }\n\n        /**\r\n         * Update tween\r\n         * @param {Number} [t] [0, duration]\r\n         */\n\n    }, {\n        key: \"Update\",\n        value: function Update(t) {\n            if (t === undefined) t = clock.getElapsedTime() - this.startTime;\n\n            if (t >= this.duration) {\n                this.completed = true;\n                var endValue = this.startValue + this.delta;\n\n                if (this.object) this.object[this.property] = endValue;\n\n                if (this.onComplete) this.onComplete(this);\n\n                return endValue;\n            }\n\n            var x = this.callback(t, this.startValue, this.delta, this.duration);\n            if (this.object) this.object[this.property] = x;\n\n            return x;\n        }\n    }, {\n        key: \"Return\",\n        value: function Return() {\n            pool.Return(this);\n        }\n\n        /**\r\n         * @param {TweenCallback} callback \r\n         * @param {Number} [startValue]\r\n         * @param {Number} delta \r\n         * @param {Number} duration \r\n         */\n\n    }], [{\n        key: \"Request\",\n        value: function Request(callback, startValue, delta, duration) {\n            var tween = pool.Request();\n            tween.Reset(callback, startValue, delta, duration);\n\n            return tween;\n        }\n    }, {\n        key: \"functions\",\n        get: function get() {\n            return functions;\n        }\n    }]);\n\n    return Tween;\n}();\n\nTween.Combo = TweenCombo;\n\nexports.default = Tween;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///15\n");

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _set = function set(object, property, value, receiver) { var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent !== null) { set(parent, property, value, receiver); } } else if (\"value\" in desc && desc.writable) { desc.value = value; } else { var setter = desc.set; if (setter !== undefined) { setter.call(receiver, value); } } return value; };\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _CargoView2 = __webpack_require__(17);\n\nvar _CargoView3 = _interopRequireDefault(_CargoView2);\n\nvar _Utils = __webpack_require__(0);\n\nvar _Utils2 = _interopRequireDefault(_Utils);\n\nvar _BoxEntry = __webpack_require__(5);\n\nvar _BoxEntry2 = _interopRequireDefault(_BoxEntry);\n\nvar _Asset = __webpack_require__(4);\n\nvar _Asset2 = _interopRequireDefault(_Asset);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar unitCubeGeometry = new THREE.BoxBufferGeometry(1, 1, 1, 1, 1, 1);\nvar materialTemplate = new _Asset2.default.SolidMaterialType({ roughness: 1, metalness: 0, flatShading: true });\n\nvar brightnessRange = [.45, .55];\nvar hueBase = Math.random();\nfunction nextColor() {\n    var color = new THREE.Color();\n    color.setHSL(hueBase, 1, brightnessRange[0] + Math.random() * (brightnessRange[1] - brightnessRange[0]));\n    hueBase = _Utils2.default.GoldenSeries(hueBase);\n    return color;\n}\n\nvar _materialSettings = Symbol('matSet');\nvar _color = Symbol('color');\n\nvar typeofNumber = 'number',\n    typeofString = 'string';\n\nvar CargoBoxView = function (_CargoView) {\n    _inherits(CargoBoxView, _CargoView);\n\n    /**\r\n     * \r\n     * @param {BoxEntry} boxEntry \r\n     */\n    function CargoBoxView(boxEntry) {\n        _classCallCheck(this, CargoBoxView);\n\n        var _this = _possibleConstructorReturn(this, (CargoBoxView.__proto__ || Object.getPrototypeOf(CargoBoxView)).call(this, boxEntry));\n\n        var material = materialTemplate.clone();\n\n        var colorHex = boxEntry.Description('color');\n        _this[_color] = colorHex ? new THREE.Color(colorHex) : nextColor();\n        boxEntry.Description('color', _this.color.getHex());\n\n        material.color = _this.color;\n        _this.mesh = new THREE.Mesh(unitCubeGeometry, material);\n        _this.mesh.scale.copy(boxEntry.dimensions.vec3);\n\n        _this.view.add(_this.mesh);\n        return _this;\n    }\n\n    /** @returns {BoxEntry} */\n\n\n    _createClass(CargoBoxView, [{\n        key: \"SetScale\",\n\n\n        /**\r\n         * @param {Number} x \r\n         * @param {Number} y \r\n         * @param {Number} z \r\n         */\n        value: function SetScale(x, y, z) {\n            this.mesh.scale.set(x, y, z);\n\n            if (this.labelView) this.labelView.view.position.z = params.width / 2 + this.entry.dimensions.length / 2;\n        }\n    }, {\n        key: \"ReflectEntry\",\n        value: function ReflectEntry() {\n            this.entry = this.entry;\n        }\n\n        /** \r\n         * @param {string} value \r\n         * @param {import('./CargoView').CargoViewLabelParams} params */\n\n    }, {\n        key: \"SetLabel\",\n        value: function SetLabel(value, params) {\n            _get(CargoBoxView.prototype.__proto__ || Object.getPrototypeOf(CargoBoxView.prototype), \"SetLabel\", this).call(this, value, params);\n\n            this.labelView.view.scale.y = params.height;\n            this.labelView.view.scale.x = params.width;\n            this.labelView.view.position.z = params.width / 2 + this.entry.dimensions.length / 2;\n            this.labelView.view.position.y = .001;\n        }\n\n        /**\r\n         * @param {Number} x in radians\r\n         * @param {Number} y in radians\r\n         * @param {Number} z in radians\r\n         */\n\n    }, {\n        key: \"SetRotationAngles\",\n        value: function SetRotationAngles(x, y, z) {\n            this.mesh.rotation.set(x, y, z);\n        }\n    }, {\n        key: \"entry\",\n        get: function get() {\n            return _get(CargoBoxView.prototype.__proto__ || Object.getPrototypeOf(CargoBoxView.prototype), \"entry\", this);\n        },\n        set: function set(value) {\n            _set(CargoBoxView.prototype.__proto__ || Object.getPrototypeOf(CargoBoxView.prototype), \"entry\", value, this);\n            var s = value.dimensions.vec3;\n            this.SetScale(s.x, s.y, s.z);\n\n            var colorHex = value.Description('color');\n            if (colorHex) this.color = colorHex;\n        }\n\n        /** @param {Number} value */\n\n    }, {\n        key: \"focus\",\n        set: function set(value) {\n            _set(CargoBoxView.prototype.__proto__ || Object.getPrototypeOf(CargoBoxView.prototype), \"focus\", value, this);\n\n            if (this[_materialSettings]) _Asset2.default.RestoreMaterial(this.mesh.material, this[_materialSettings]);\n\n            if (Math.abs(1 - value) > .0001) {\n                if (this[_materialSettings] === undefined) {\n                    this.mesh.material = this.mesh.material.clone();\n                    this[_materialSettings] = {};\n                    _Asset2.default.SetMaterialFocus(this.mesh.material, value, this[_materialSettings]);\n                } else {\n                    _Asset2.default.SetMaterialFocus(this.mesh.material, value);\n                }\n            }\n        },\n        get: function get() {\n            return _get(CargoBoxView.prototype.__proto__ || Object.getPrototypeOf(CargoBoxView.prototype), \"focus\", this);\n        }\n\n        /** @returns {THREE.Color} */\n\n    }, {\n        key: \"color\",\n        get: function get() {\n            return this[_color];\n        }\n\n        /** @param {Number} value hex */\n        ,\n        set: function set(value) {\n            /** @type {THREE.Color} */\n            var c = this[_color];\n            if ((typeof value === \"undefined\" ? \"undefined\" : _typeof(value)) === typeofNumber) c.setHex(value);else if ((typeof value === \"undefined\" ? \"undefined\" : _typeof(value)) === typeofString) c.setHex(Number.parseInt(value));else c.copy(value);\n            if (this[_materialSettings]) this[_materialSettings].color = c.getHex();else this.mesh.material.color = c;\n            this.focus = _get(CargoBoxView.prototype.__proto__ || Object.getPrototypeOf(CargoBoxView.prototype), \"focus\", this);\n        }\n    }], [{\n        key: \"GetNextColor\",\n        value: function GetNextColor() {\n            return nextColor();\n        }\n    }]);\n\n    return CargoBoxView;\n}(_CargoView3.default);\n\nexports.default = CargoBoxView;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///16\n");

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _CargoEntry = __webpack_require__(6);\n\nvar _CargoEntry2 = _interopRequireDefault(_CargoEntry);\n\nvar _Asset = __webpack_require__(4);\n\nvar _Asset2 = _interopRequireDefault(_Asset);\n\nvar _TextLabelView = __webpack_require__(36);\n\nvar _TextLabelView2 = _interopRequireDefault(_TextLabelView);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * @typedef CargoViewLabelParams\r\n * @property {Number} width\r\n * @property {Number} height\r\n */\n\nvar dummyGeometry = new THREE.SphereBufferGeometry(1, 4, 4);\nvar dummyMaterial = new _Asset2.default.TransparentMaterialType({ color: 0xff0000, transparent: true, opacity: .5 });\n\nvar _entry = Symbol('entry');\nvar _focus = Symbol('focus');\n\nvar CargoView = function () {\n    /**\r\n     * @param {CargoEntry} entry \r\n     */\n    function CargoView(entry) {\n        _classCallCheck(this, CargoView);\n\n        this[_entry] = entry;\n\n        /** @type {THREE.Mesh} */\n        this.mesh;\n\n        this.view = new THREE.Object3D();\n\n        this[_focus] = 1;\n    }\n\n    /** @returns {CargoEntry} */\n\n\n    _createClass(CargoView, [{\n        key: \"ReflectEntry\",\n        value: function ReflectEntry() {}\n\n        /** @param {string} value @param {CargoViewLabelParams} params */\n\n    }, {\n        key: \"SetLabel\",\n        value: function SetLabel(value, params) {\n            var height = 64;\n            var width = Math.floor(params.width / params.height * height);\n            if (this.labelView === undefined) {\n                /** @type {import('./TextLabelView').TLVParams} */\n                var tlvParams = { font: '32px sans serif', backColor: 'rgb(0, 0, 0)', fontColor: 'rgb(255, 255, 255)',\n                    textAlign: 'right', sidePadding: 16, width: width, height: height\n                };\n                var ratioToX = 64;\n\n                this.labelView = new _TextLabelView2.default(tlvParams);\n                this.labelView.view.rotateY(90 * Math.PI / 180);\n                this.labelView.view.rotateX(-90 * Math.PI / 180);\n                this.view.add(this.labelView.view);\n            }\n\n            this.labelView.UpdateText(value);\n        }\n\n        /**\r\n         * @param {CargoEntry} entry \r\n         */\n\n    }, {\n        key: \"entry\",\n        get: function get() {\n            return this[_entry];\n        },\n        set: function set(value) {\n            this[_entry] = value;\n        }\n    }, {\n        key: \"position\",\n        get: function get() {\n            return this.view.position;\n        },\n        set: function set(value) {\n            this.view.position.copy(value);\n        }\n\n        /** @param {Number} value */\n\n    }, {\n        key: \"focus\",\n        set: function set(value) {\n            this[_focus] = value;\n        },\n        get: function get() {\n            return this[_focus];\n        }\n    }], [{\n        key: \"Dummy\",\n        value: function Dummy(entry) {\n            var cargoView = new CargoView(entry);\n            cargoView.view = new THREE.Mesh(dummyGeometry, dummyMaterial);\n            return cargoView;\n        }\n    }]);\n\n    return CargoView;\n}();\n\nexports.default = CargoView;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXBpL3ZpZXcvQ2FyZ29WaWV3LmpzPzc0YzgiXSwibmFtZXMiOlsiZHVtbXlHZW9tZXRyeSIsIlRIUkVFIiwiU3BoZXJlQnVmZmVyR2VvbWV0cnkiLCJkdW1teU1hdGVyaWFsIiwiQXNzZXQiLCJUcmFuc3BhcmVudE1hdGVyaWFsVHlwZSIsImNvbG9yIiwidHJhbnNwYXJlbnQiLCJvcGFjaXR5IiwiX2VudHJ5IiwiU3ltYm9sIiwiX2ZvY3VzIiwiQ2FyZ29WaWV3IiwiZW50cnkiLCJtZXNoIiwidmlldyIsIk9iamVjdDNEIiwidmFsdWUiLCJwYXJhbXMiLCJoZWlnaHQiLCJ3aWR0aCIsIk1hdGgiLCJmbG9vciIsImxhYmVsVmlldyIsInVuZGVmaW5lZCIsInRsdlBhcmFtcyIsImZvbnQiLCJiYWNrQ29sb3IiLCJmb250Q29sb3IiLCJ0ZXh0QWxpZ24iLCJzaWRlUGFkZGluZyIsInJhdGlvVG9YIiwiVGV4dExhYmVsVmlldyIsInJvdGF0ZVkiLCJQSSIsInJvdGF0ZVgiLCJhZGQiLCJVcGRhdGVUZXh0IiwicG9zaXRpb24iLCJjb3B5IiwiY2FyZ29WaWV3IiwiTWVzaCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7OztBQUNBOzs7O0FBQ0E7Ozs7Ozs7O0FBRUE7Ozs7OztBQU1BLElBQU1BLGdCQUFnQixJQUFJQyxNQUFNQyxvQkFBVixDQUErQixDQUEvQixFQUFrQyxDQUFsQyxFQUFxQyxDQUFyQyxDQUF0QjtBQUNBLElBQU1DLGdCQUFnQixJQUFJQyxnQkFBTUMsdUJBQVYsQ0FBa0MsRUFBQ0MsT0FBTyxRQUFSLEVBQWtCQyxhQUFhLElBQS9CLEVBQXFDQyxTQUFTLEVBQTlDLEVBQWxDLENBQXRCOztBQUVBLElBQU1DLFNBQVNDLE9BQU8sT0FBUCxDQUFmO0FBQ0EsSUFBTUMsU0FBU0QsT0FBTyxPQUFQLENBQWY7O0lBRU1FLFM7QUFDRjs7O0FBR0EsdUJBQVlDLEtBQVosRUFBa0I7QUFBQTs7QUFFZCxhQUFLSixNQUFMLElBQWVJLEtBQWY7O0FBRUE7QUFDQSxhQUFLQyxJQUFMOztBQUVBLGFBQUtDLElBQUwsR0FBWSxJQUFJZCxNQUFNZSxRQUFWLEVBQVo7O0FBRUEsYUFBS0wsTUFBTCxJQUFlLENBQWY7QUFDSDs7QUFFRDs7Ozs7dUNBcUJjLENBRWI7O0FBRUQ7Ozs7aUNBQ1NNLEssRUFBT0MsTSxFQUFPO0FBQ25CLGdCQUFNQyxTQUFTLEVBQWY7QUFDQSxnQkFBSUMsUUFBUUMsS0FBS0MsS0FBTCxDQUFZSixPQUFPRSxLQUFQLEdBQWVGLE9BQU9DLE1BQXRCLEdBQStCQSxNQUEzQyxDQUFaO0FBQ0EsZ0JBQUcsS0FBS0ksU0FBTCxLQUFtQkMsU0FBdEIsRUFBZ0M7QUFDNUI7QUFDQSxvQkFBSUMsWUFBWSxFQUFFQyxNQUFNLGlCQUFSLEVBQTJCQyxXQUFXLGNBQXRDLEVBQXNEQyxXQUFXLG9CQUFqRTtBQUNaQywrQkFBVyxPQURDLEVBQ1FDLGFBQWEsRUFEckIsRUFDeUJWLE9BQU9BLEtBRGhDLEVBQ3VDRCxRQUFRQTtBQUQvQyxpQkFBaEI7QUFHQSxvQkFBSVksV0FBVyxFQUFmOztBQUVBLHFCQUFLUixTQUFMLEdBQWlCLElBQUlTLHVCQUFKLENBQWtCUCxTQUFsQixDQUFqQjtBQUNBLHFCQUFLRixTQUFMLENBQWVSLElBQWYsQ0FBb0JrQixPQUFwQixDQUE2QixLQUFLWixLQUFLYSxFQUFWLEdBQWUsR0FBNUM7QUFDQSxxQkFBS1gsU0FBTCxDQUFlUixJQUFmLENBQW9Cb0IsT0FBcEIsQ0FBNkIsQ0FBQyxFQUFELEdBQU1kLEtBQUthLEVBQVgsR0FBZ0IsR0FBN0M7QUFDQSxxQkFBS25CLElBQUwsQ0FBVXFCLEdBQVYsQ0FBYyxLQUFLYixTQUFMLENBQWVSLElBQTdCO0FBQ0g7O0FBRUQsaUJBQUtRLFNBQUwsQ0FBZWMsVUFBZixDQUEwQnBCLEtBQTFCO0FBQ0g7O0FBRUQ7Ozs7Ozs0QkE1Q1c7QUFBRSxtQkFBTyxLQUFLUixNQUFMLENBQVA7QUFBc0IsUzswQkFDekJRLEssRUFBTTtBQUNaLGlCQUFLUixNQUFMLElBQWVRLEtBQWY7QUFDSDs7OzRCQUVhO0FBQ1YsbUJBQU8sS0FBS0YsSUFBTCxDQUFVdUIsUUFBakI7QUFDSCxTOzBCQUVZckIsSyxFQUFNO0FBQ2YsaUJBQUtGLElBQUwsQ0FBVXVCLFFBQVYsQ0FBbUJDLElBQW5CLENBQXdCdEIsS0FBeEI7QUFDSDs7QUFFRDs7OzswQkFDVUEsSyxFQUFNO0FBQ1osaUJBQUtOLE1BQUwsSUFBZU0sS0FBZjtBQUNILFM7NEJBRVU7QUFBRSxtQkFBTyxLQUFLTixNQUFMLENBQVA7QUFBc0I7Ozs4QkE2QnRCRSxLLEVBQU07QUFDZixnQkFBSTJCLFlBQVksSUFBSTVCLFNBQUosQ0FBY0MsS0FBZCxDQUFoQjtBQUNBMkIsc0JBQVV6QixJQUFWLEdBQWlCLElBQUlkLE1BQU13QyxJQUFWLENBQWV6QyxhQUFmLEVBQThCRyxhQUE5QixDQUFqQjtBQUNBLG1CQUFPcUMsU0FBUDtBQUNIOzs7Ozs7a0JBSVU1QixTIiwiZmlsZSI6IjE3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENhcmdvRW50cnkgZnJvbSBcIi4uL2NvbXBvbmVudHMvY29tbW9uL0NhcmdvRW50cnlcIjtcclxuaW1wb3J0IEFzc2V0IGZyb20gXCIuLi9jb21wb25lbnRzL2Fzc2V0cy9Bc3NldFwiO1xyXG5pbXBvcnQgVGV4dExhYmVsVmlldyBmcm9tIFwiLi9jb21wb25lbnRzL1RleHRMYWJlbFZpZXdcIjtcclxuXHJcbi8qKlxyXG4gKiBAdHlwZWRlZiBDYXJnb1ZpZXdMYWJlbFBhcmFtc1xyXG4gKiBAcHJvcGVydHkge051bWJlcn0gd2lkdGhcclxuICogQHByb3BlcnR5IHtOdW1iZXJ9IGhlaWdodFxyXG4gKi9cclxuXHJcbmNvbnN0IGR1bW15R2VvbWV0cnkgPSBuZXcgVEhSRUUuU3BoZXJlQnVmZmVyR2VvbWV0cnkoMSwgNCwgNCk7XHJcbmNvbnN0IGR1bW15TWF0ZXJpYWwgPSBuZXcgQXNzZXQuVHJhbnNwYXJlbnRNYXRlcmlhbFR5cGUoe2NvbG9yOiAweGZmMDAwMCwgdHJhbnNwYXJlbnQ6IHRydWUsIG9wYWNpdHk6IC41fSk7XHJcblxyXG5jb25zdCBfZW50cnkgPSBTeW1ib2woJ2VudHJ5Jyk7XHJcbmNvbnN0IF9mb2N1cyA9IFN5bWJvbCgnZm9jdXMnKTtcclxuXHJcbmNsYXNzIENhcmdvVmlldyB7XHJcbiAgICAvKipcclxuICAgICAqIEBwYXJhbSB7Q2FyZ29FbnRyeX0gZW50cnkgXHJcbiAgICAgKi9cclxuICAgIGNvbnN0cnVjdG9yKGVudHJ5KXtcclxuXHJcbiAgICAgICAgdGhpc1tfZW50cnldID0gZW50cnk7XHJcblxyXG4gICAgICAgIC8qKiBAdHlwZSB7VEhSRUUuTWVzaH0gKi9cclxuICAgICAgICB0aGlzLm1lc2g7XHJcblxyXG4gICAgICAgIHRoaXMudmlldyA9IG5ldyBUSFJFRS5PYmplY3QzRCgpO1xyXG5cclxuICAgICAgICB0aGlzW19mb2N1c10gPSAxO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKiBAcmV0dXJucyB7Q2FyZ29FbnRyeX0gKi9cclxuICAgIGdldCBlbnRyeSgpeyByZXR1cm4gdGhpc1tfZW50cnldOyB9XHJcbiAgICBzZXQgZW50cnkodmFsdWUpe1xyXG4gICAgICAgIHRoaXNbX2VudHJ5XSA9IHZhbHVlO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBwb3NpdGlvbigpe1xyXG4gICAgICAgIHJldHVybiB0aGlzLnZpZXcucG9zaXRpb247XHJcbiAgICB9XHJcblxyXG4gICAgc2V0IHBvc2l0aW9uKHZhbHVlKXtcclxuICAgICAgICB0aGlzLnZpZXcucG9zaXRpb24uY29weSh2YWx1ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIEBwYXJhbSB7TnVtYmVyfSB2YWx1ZSAqL1xyXG4gICAgc2V0IGZvY3VzKHZhbHVlKXtcclxuICAgICAgICB0aGlzW19mb2N1c10gPSB2YWx1ZTtcclxuICAgIH1cclxuXHJcbiAgICBnZXQgZm9jdXMoKXsgcmV0dXJuIHRoaXNbX2ZvY3VzXTsgfVxyXG5cclxuICAgIFJlZmxlY3RFbnRyeSgpe1xyXG4gICAgICAgIFxyXG4gICAgfVxyXG5cclxuICAgIC8qKiBAcGFyYW0ge3N0cmluZ30gdmFsdWUgQHBhcmFtIHtDYXJnb1ZpZXdMYWJlbFBhcmFtc30gcGFyYW1zICovXHJcbiAgICBTZXRMYWJlbCh2YWx1ZSwgcGFyYW1zKXtcclxuICAgICAgICBjb25zdCBoZWlnaHQgPSA2NDtcclxuICAgICAgICBsZXQgd2lkdGggPSBNYXRoLmZsb29yKCBwYXJhbXMud2lkdGggLyBwYXJhbXMuaGVpZ2h0ICogaGVpZ2h0ICk7XHJcbiAgICAgICAgaWYodGhpcy5sYWJlbFZpZXcgPT09IHVuZGVmaW5lZCl7XHJcbiAgICAgICAgICAgIC8qKiBAdHlwZSB7aW1wb3J0KCcuL1RleHRMYWJlbFZpZXcnKS5UTFZQYXJhbXN9ICovXHJcbiAgICAgICAgICAgIGxldCB0bHZQYXJhbXMgPSB7IGZvbnQ6ICczMnB4IHNhbnMgc2VyaWYnLCBiYWNrQ29sb3I6ICdyZ2IoMCwgMCwgMCknLCBmb250Q29sb3I6ICdyZ2IoMjU1LCAyNTUsIDI1NSknLCBcclxuICAgICAgICAgICAgICAgIHRleHRBbGlnbjogJ3JpZ2h0Jywgc2lkZVBhZGRpbmc6IDE2LCB3aWR0aDogd2lkdGgsIGhlaWdodDogaGVpZ2h0XHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIGxldCByYXRpb1RvWCA9IDY0XHJcblxyXG4gICAgICAgICAgICB0aGlzLmxhYmVsVmlldyA9IG5ldyBUZXh0TGFiZWxWaWV3KHRsdlBhcmFtcyk7XHJcbiAgICAgICAgICAgIHRoaXMubGFiZWxWaWV3LnZpZXcucm90YXRlWSggOTAgKiBNYXRoLlBJIC8gMTgwICk7XHJcbiAgICAgICAgICAgIHRoaXMubGFiZWxWaWV3LnZpZXcucm90YXRlWCggLTkwICogTWF0aC5QSSAvIDE4MCApO1xyXG4gICAgICAgICAgICB0aGlzLnZpZXcuYWRkKHRoaXMubGFiZWxWaWV3LnZpZXcpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5sYWJlbFZpZXcuVXBkYXRlVGV4dCh2YWx1ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBAcGFyYW0ge0NhcmdvRW50cnl9IGVudHJ5IFxyXG4gICAgICovXHJcbiAgICBzdGF0aWMgRHVtbXkoZW50cnkpe1xyXG4gICAgICAgIHZhciBjYXJnb1ZpZXcgPSBuZXcgQ2FyZ29WaWV3KGVudHJ5KTtcclxuICAgICAgICBjYXJnb1ZpZXcudmlldyA9IG5ldyBUSFJFRS5NZXNoKGR1bW15R2VvbWV0cnksIGR1bW15TWF0ZXJpYWwpO1xyXG4gICAgICAgIHJldHVybiBjYXJnb1ZpZXc7XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBDYXJnb1ZpZXc7XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2FwaS92aWV3L0NhcmdvVmlldy5qcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///17\n");

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Utils = __webpack_require__(0);\n\nvar _Utils2 = _interopRequireDefault(_Utils);\n\nvar _Visualization = __webpack_require__(58);\n\nvar _Visualization2 = _interopRequireDefault(_Visualization);\n\nvar _User = __webpack_require__(59);\n\nvar _User2 = _interopRequireDefault(_User);\n\nvar _App = __webpack_require__(10);\n\nvar _App2 = _interopRequireDefault(_App);\n\nvar _Constants = __webpack_require__(37);\n\nvar _Constants2 = _interopRequireDefault(_Constants);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * @typedef UXParams\r\n * @property {Boolean} hud default = true, create hud (hud currently disabled in api)\r\n * @property {Boolean} configure default = false, execute helpers that allow configuration\r\n * @property {Number} units default = 1, conversion to unit employed, default=1 for inches, for meters: units=0.0254\r\n * @property {Boolean} autoUpdatePack default = true, will auto-update the packing if entries are modified or deleted\r\n * @property {Number} backgroundColor default = 0xfefefe\r\n * @property {Constants.scaleRefFigure} scaleRefFigure default = man, human figure to show as scale reference\r\n * @property {Number} fov camera perspective fov\r\n */\nvar defaultParams = {\n    hud: true,\n    configure: false,\n    units: 1,\n    autoUpdatePack: true,\n    backgroundColor: 0xfefefe,\n    scaleRefFigure: _Constants2.default.scaleRefFigure.man,\n    fov: 15\n};\n\nvar UX = function () {\n    /**\r\n     * \r\n     * @param {UXParams} params \r\n     */\n    function UX(params) {\n        _classCallCheck(this, UX);\n\n        this.params = _Utils2.default.AssignUndefined(params, defaultParams);\n    }\n\n    /** @ignore ignore */\n\n\n    _createClass(UX, [{\n        key: \"_Bind\",\n        value: function _Bind(value) {\n            /** @type {App} */\n            var app = value;\n\n            /** Interface with visual elements */\n            this.visualization = new _Visualization2.default(app);\n\n            /** Interface with user input/output */\n            this.user = new _User2.default(app);\n        }\n    }]);\n\n    return UX;\n}();\n\nUX.User = _User2.default;\nUX.Visualization = _Visualization2.default;\n\nexports.default = UX;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXBpL1VYLmpzP2I0YWQiXSwibmFtZXMiOlsiZGVmYXVsdFBhcmFtcyIsImh1ZCIsImNvbmZpZ3VyZSIsInVuaXRzIiwiYXV0b1VwZGF0ZVBhY2siLCJiYWNrZ3JvdW5kQ29sb3IiLCJzY2FsZVJlZkZpZ3VyZSIsIkNvbnN0YW50cyIsIm1hbiIsImZvdiIsIlVYIiwicGFyYW1zIiwiVXRpbHMiLCJBc3NpZ25VbmRlZmluZWQiLCJ2YWx1ZSIsImFwcCIsInZpc3VhbGl6YXRpb24iLCJWaXN1YWxpemF0aW9uIiwidXNlciIsIlVzZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7Ozs7Ozs7QUFFQTs7Ozs7Ozs7OztBQVVBLElBQU1BLGdCQUFnQjtBQUNsQkMsU0FBSyxJQURhO0FBRWxCQyxlQUFXLEtBRk87QUFHbEJDLFdBQU8sQ0FIVztBQUlsQkMsb0JBQWdCLElBSkU7QUFLbEJDLHFCQUFpQixRQUxDO0FBTWxCQyxvQkFBZ0JDLG9CQUFVRCxjQUFWLENBQXlCRSxHQU52QjtBQU9sQkMsU0FBSztBQVBhLENBQXRCOztJQVVNQyxFO0FBQ0Y7Ozs7QUFJQSxnQkFBWUMsTUFBWixFQUFtQjtBQUFBOztBQUVmLGFBQUtBLE1BQUwsR0FBY0MsZ0JBQU1DLGVBQU4sQ0FBc0JGLE1BQXRCLEVBQThCWCxhQUE5QixDQUFkO0FBQ0g7O0FBRUQ7Ozs7OzhCQUNNYyxLLEVBQU07QUFDUjtBQUNBLGdCQUFJQyxNQUFNRCxLQUFWOztBQUVBO0FBQ04saUJBQUtFLGFBQUwsR0FBcUIsSUFBSUMsdUJBQUosQ0FBa0JGLEdBQWxCLENBQXJCOztBQUVBO0FBQ00saUJBQUtHLElBQUwsR0FBWSxJQUFJQyxjQUFKLENBQVNKLEdBQVQsQ0FBWjtBQUNIOzs7Ozs7QUFJTEwsR0FBR1MsSUFBSCxHQUFVQSxjQUFWO0FBQ0FULEdBQUdPLGFBQUgsR0FBbUJBLHVCQUFuQjs7a0JBRWVQLEUiLCJmaWxlIjoiMTguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVXRpbHMgZnJvbSBcIi4vdXRpbHMvY2lrL1V0aWxzXCI7XHJcbmltcG9ydCBWaXN1YWxpemF0aW9uIGZyb20gXCIuL2NvbXBvbmVudHMvVmlzdWFsaXphdGlvblwiO1xyXG5pbXBvcnQgVXNlciBmcm9tIFwiLi9jb21wb25lbnRzL1VzZXJcIjtcclxuaW1wb3J0IEFwcCBmcm9tIFwiLi9BcHBcIjtcclxuaW1wb3J0IENvbnN0YW50cyBmcm9tIFwiLi9Db25zdGFudHNcIjtcclxuXHJcbi8qKlxyXG4gKiBAdHlwZWRlZiBVWFBhcmFtc1xyXG4gKiBAcHJvcGVydHkge0Jvb2xlYW59IGh1ZCBkZWZhdWx0ID0gdHJ1ZSwgY3JlYXRlIGh1ZCAoaHVkIGN1cnJlbnRseSBkaXNhYmxlZCBpbiBhcGkpXHJcbiAqIEBwcm9wZXJ0eSB7Qm9vbGVhbn0gY29uZmlndXJlIGRlZmF1bHQgPSBmYWxzZSwgZXhlY3V0ZSBoZWxwZXJzIHRoYXQgYWxsb3cgY29uZmlndXJhdGlvblxyXG4gKiBAcHJvcGVydHkge051bWJlcn0gdW5pdHMgZGVmYXVsdCA9IDEsIGNvbnZlcnNpb24gdG8gdW5pdCBlbXBsb3llZCwgZGVmYXVsdD0xIGZvciBpbmNoZXMsIGZvciBtZXRlcnM6IHVuaXRzPTAuMDI1NFxyXG4gKiBAcHJvcGVydHkge0Jvb2xlYW59IGF1dG9VcGRhdGVQYWNrIGRlZmF1bHQgPSB0cnVlLCB3aWxsIGF1dG8tdXBkYXRlIHRoZSBwYWNraW5nIGlmIGVudHJpZXMgYXJlIG1vZGlmaWVkIG9yIGRlbGV0ZWRcclxuICogQHByb3BlcnR5IHtOdW1iZXJ9IGJhY2tncm91bmRDb2xvciBkZWZhdWx0ID0gMHhmZWZlZmVcclxuICogQHByb3BlcnR5IHtDb25zdGFudHMuc2NhbGVSZWZGaWd1cmV9IHNjYWxlUmVmRmlndXJlIGRlZmF1bHQgPSBtYW4sIGh1bWFuIGZpZ3VyZSB0byBzaG93IGFzIHNjYWxlIHJlZmVyZW5jZVxyXG4gKiBAcHJvcGVydHkge051bWJlcn0gZm92IGNhbWVyYSBwZXJzcGVjdGl2ZSBmb3ZcclxuICovXHJcbmNvbnN0IGRlZmF1bHRQYXJhbXMgPSB7XHJcbiAgICBodWQ6IHRydWUsXHJcbiAgICBjb25maWd1cmU6IGZhbHNlLFxyXG4gICAgdW5pdHM6IDEsXHJcbiAgICBhdXRvVXBkYXRlUGFjazogdHJ1ZSxcclxuICAgIGJhY2tncm91bmRDb2xvcjogMHhmZWZlZmUsXHJcbiAgICBzY2FsZVJlZkZpZ3VyZTogQ29uc3RhbnRzLnNjYWxlUmVmRmlndXJlLm1hbixcclxuICAgIGZvdjogMTVcclxufTtcclxuXHJcbmNsYXNzIFVYe1xyXG4gICAgLyoqXHJcbiAgICAgKiBcclxuICAgICAqIEBwYXJhbSB7VVhQYXJhbXN9IHBhcmFtcyBcclxuICAgICAqL1xyXG4gICAgY29uc3RydWN0b3IocGFyYW1zKXtcclxuXHJcbiAgICAgICAgdGhpcy5wYXJhbXMgPSBVdGlscy5Bc3NpZ25VbmRlZmluZWQocGFyYW1zLCBkZWZhdWx0UGFyYW1zKTtcclxuICAgIH1cclxuXHJcbiAgICAvKiogQGlnbm9yZSBpZ25vcmUgKi9cclxuICAgIF9CaW5kKHZhbHVlKXtcclxuICAgICAgICAvKiogQHR5cGUge0FwcH0gKi9cclxuICAgICAgICBsZXQgYXBwID0gdmFsdWU7XHJcbiAgICBcclxuICAgICAgICAvKiogSW50ZXJmYWNlIHdpdGggdmlzdWFsIGVsZW1lbnRzICovXHJcblx0XHR0aGlzLnZpc3VhbGl6YXRpb24gPSBuZXcgVmlzdWFsaXphdGlvbihhcHApO1xyXG5cclxuXHRcdC8qKiBJbnRlcmZhY2Ugd2l0aCB1c2VyIGlucHV0L291dHB1dCAqL1xyXG4gICAgICAgIHRoaXMudXNlciA9IG5ldyBVc2VyKGFwcCk7XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG5VWC5Vc2VyID0gVXNlcjtcclxuVVguVmlzdWFsaXphdGlvbiA9IFZpc3VhbGl6YXRpb247XHJcblxyXG5leHBvcnQgZGVmYXVsdCBVWDtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvYXBpL1VYLmpzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///18\n");

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Logger = __webpack_require__(2);\n\nvar _Logger2 = _interopRequireDefault(_Logger);\n\nvar _CargoBoxView = __webpack_require__(16);\n\nvar _CargoBoxView2 = _interopRequireDefault(_CargoBoxView);\n\nvar _CargoView = __webpack_require__(17);\n\nvar _CargoView2 = _interopRequireDefault(_CargoView);\n\nvar _Signaler2 = __webpack_require__(1);\n\nvar _Signaler3 = _interopRequireDefault(_Signaler2);\n\nvar _CargoGroup = __webpack_require__(26);\n\nvar _CargoGroup2 = _interopRequireDefault(_CargoGroup);\n\nvar _Utils = __webpack_require__(0);\n\nvar _Utils2 = _interopRequireDefault(_Utils);\n\nvar _CargoEntry = __webpack_require__(6);\n\nvar _CargoEntry2 = _interopRequireDefault(_CargoEntry);\n\nvar _FloatingShelf = __webpack_require__(61);\n\nvar _FloatingShelf2 = _interopRequireDefault(_FloatingShelf);\n\nvar _Asset = __webpack_require__(4);\n\nvar _Asset2 = _interopRequireDefault(_Asset);\n\nvar _BoxEntry = __webpack_require__(5);\n\nvar _BoxEntry2 = _interopRequireDefault(_BoxEntry);\n\nvar _TextLabelView = __webpack_require__(36);\n\nvar _TextLabelView2 = _interopRequireDefault(_TextLabelView);\n\nvar _RaycastGroup = __webpack_require__(32);\n\nvar _RaycastGroup2 = _interopRequireDefault(_RaycastGroup);\n\nvar _Outline = __webpack_require__(62);\n\nvar _Outline2 = _interopRequireDefault(_Outline);\n\nvar _Tween = __webpack_require__(15);\n\nvar _Tween2 = _interopRequireDefault(_Tween);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\r\n * @typedef {Object} CargoListViewParams\r\n * @property {import('../UX').default} ux\r\n * @property {Number} outlineOffset\r\n */\n\n/**\r\n * @typedef SortResult\r\n * @property {Number} min\r\n * @property {Number} max\r\n * @property {Number} cargoes\r\n */\n\nvar typeofString = 'string';\nvar epsilon = Math.pow(2, -52);\n\nvar _selectedEntryUID = Symbol('seUID');\n\n/** @type {Map<CargoView, TextLabelView>} */\nvar labels = new Map();\n\nvar tempBox = new THREE.Box3();\nvar tempVec = new THREE.Vector3();\n\nvar signals = {\n    sort: 'sort',\n    select: 'select',\n    deselect: 'deselect',\n    interact: 'interact'\n};\n\n/** @type {CargoListViewParams} */\nvar defaultParams = {\n    outlineOffset: 4\n};\n\nvar CargoListView = function (_Signaler) {\n    _inherits(CargoListView, _Signaler);\n\n    /**\r\n     * @param {CargoListViewParams} params \r\n     */\n    function CargoListView(params) {\n        _classCallCheck(this, CargoListView);\n\n        var _this = _possibleConstructorReturn(this, (CargoListView.__proto__ || Object.getPrototypeOf(CargoListView)).call(this));\n\n        _this.params = _Utils2.default.AssignUndefined(params, defaultParams);\n\n        _this.view = new THREE.Object3D();\n        _this.templatesView = new THREE.Object3D();\n        _this.view.add(_this.templatesView);\n\n        /** @type {Map<CargoGroup, CargoView>} */\n        _this.cargoTemplateViews = new Map();\n\n        var units = _this.params.ux.params.units;\n\n        // Shelf\n        /** @type {import('./components/FloatingShelf').FloatingShelfParams} */\n        var fsParams = { padding: new THREE.Vector3(10 * units, (_this.params.outlineOffset + 1) * units, 10 * units), colorHex: _Asset2.default.ColorTemplates('Containers').Apply(0x000000) };\n        _this.floatingShelf = new _FloatingShelf2.default(_this.templatesView, fsParams);\n        _this.view.add(_this.floatingShelf.view);\n\n        // Interaction\n        _this.raycastGroupItems = [];\n        _this.raycastGroup = new _RaycastGroup2.default(_this.raycastGroupItems, _this.OnInteract.bind(_this),\n        /** @param {CargoView} item */\n        function (item) {\n            return item.view;\n        }, false, true);\n\n        _this.outline = new _Outline2.default({ color: 0xffffff, opacity: 1, offsetFactor: _this.params.outlineOffset * units });\n        _this.view.add(_this.outline.view);\n\n        // Transition\n        _this.slidingAnimation = {\n            enabled: false,\n            position: _Tween2.default.Combo.RequestN(_Tween2.default.functions.ease.easeOutCubic, .5, 0, 0),\n            originalPosition: new THREE.Vector3(0, 0, 0)\n        };\n\n        var scope = _this;\n        function onAnimationComplete() {\n            scope.slidingAnimation.enabled = false;\n        }\n        _this.slidingAnimation.position.onComplete = onAnimationComplete;\n\n        _this.slidingAnimation.position.Hook(_this.view.position, 'y');\n        return _this;\n    }\n\n    /**\r\n     * @param {CargoGroup} group \r\n     */\n\n\n    _createClass(CargoListView, [{\n        key: \"Add\",\n        value: function Add(group) {\n            var units = this.params.ux.params.units;\n\n            var templateCargoView = void 0;\n            switch (group.entry.type) {\n                case 'BoxEntry':\n                    {\n                        templateCargoView = new _CargoBoxView2.default(group.entry);\n\n                        var ticketParams = { width: 50 * units, height: 20 * units };\n\n                        var height = 96;\n                        var width = Math.floor(ticketParams.width / ticketParams.height * height);\n                        /** @type {import('./TextLabelView').TLVParams} */\n                        var tlvParams = { font: '64px sans-serif', backColor: 'rgb(0, 0, 0)', fontColor: 'rgb(255, 255, 255)',\n                            textAlign: 'left', sidePadding: 30, width: width, height: height\n                        };\n\n                        var labelView = new _TextLabelView2.default(tlvParams);\n                        labelView.view.rotateY(90 * Math.PI / 180);\n                        labelView.view.rotateX(-90 * Math.PI / 180);\n                        labelView.view.scale.y = ticketParams.height;\n                        labelView.view.scale.x = ticketParams.width;\n                        /** @type {BoxEntry} */\n                        var boxEntry = group.entry;\n                        labelView.view.position.z = ticketParams.width / 2;\n                        this.view.add(labelView.view);\n\n                        labelView.UpdateText(boxEntry.quantity);\n\n                        labels.set(templateCargoView, labelView);\n\n                        break;\n                    }\n\n                default:\n                    templateCargoView = _CargoView2.default.Dummy(group.entry);\n                    _Logger2.default.Warn('group.entry.type not supported by viewer,', group);\n                    break;\n            }\n\n            this.cargoTemplateViews.set(group, templateCargoView);\n            this.templatesView.add(templateCargoView.view);\n\n            this.raycastGroupItems.push(templateCargoView);\n            this.raycastGroup.UpdateItems(this.raycastGroupItems);\n\n            this.Sort();\n            this.floatingShelf.Update();\n        }\n\n        /**\r\n         * @param {CargoGroup} group \r\n         */\n\n    }, {\n        key: \"UpdateGroup\",\n        value: function UpdateGroup(group) {\n            var templateCargoView = this.cargoTemplateViews.get(group);\n            templateCargoView.ReflectEntry();\n\n            this.Sort();\n            this.floatingShelf.Update();\n\n            if (this[_selectedEntryUID] === group.entry.uid) this.SetOutline(templateCargoView);\n        }\n\n        /**\r\n         * @param {CargoGroup} group \r\n         */\n\n    }, {\n        key: \"Remove\",\n        value: function Remove(group) {\n            var templateCargoView = this.cargoTemplateViews.get(group);\n            if (templateCargoView) {\n\n                var raycastGroupIndex = this.raycastGroupItems.indexOf(templateCargoView);\n                if (raycastGroupIndex !== -1) this.raycastGroupItems.splice(raycastGroupIndex, 1);\n                this.raycastGroup.UpdateItems(this.raycastGroupItems);\n\n                this.cargoTemplateViews.delete(group);\n                this.templatesView.remove(templateCargoView.view);\n\n                if (this[_selectedEntryUID] === group.entry.uid) this.outline.box = false;\n\n                this.Sort();\n            }\n        }\n\n        /**\r\n         * RaycastCallback\r\n         * @param {CargoView} cargoView\r\n         * @param {THREE.Intersection} intersection\r\n         */\n\n    }, {\n        key: \"OnInteract\",\n        value: function OnInteract(cargoView, intersection) {\n            this.Dispatch(signals.interact, cargoView.entry);\n        }\n\n        /** @param {CargoView} cargoView */\n\n    }, {\n        key: \"Select\",\n        value: function Select(entryUID) {\n\n            this[_selectedEntryUID] = entryUID;\n\n            if (!entryUID) {\n                this.outline.box = false;\n                this.Dispatch(signals.deselect);\n            } else {\n                var cargoView = this.GetTemplate(entryUID);\n                this.SetOutline(cargoView);\n                this.Dispatch(signals.select, cargoView.entry);\n            }\n        }\n\n        /** @param {CargoView} target */\n\n    }, {\n        key: \"SetOutline\",\n        value: function SetOutline(target) {\n            this.outline.box = target instanceof _CargoBoxView2.default ? target.mesh : target.view;\n        }\n    }, {\n        key: \"SlideUp\",\n        value: function SlideUp(targetY, duration) {\n            var deltaY = targetY - this.view.position.y;\n            if (Math.abs(deltaY) < epsilon) return;\n\n            this.slidingAnimation.position.SetDurations(duration);\n            this.slidingAnimation.position.SetStartValues(this.view.position.y);\n            this.slidingAnimation.position.SetDeltas(deltaY);\n            this.slidingAnimation.position.Restart();\n            this.slidingAnimation.enabled = true;\n        }\n    }, {\n        key: \"SlideDown\",\n        value: function SlideDown(duration) {\n            var deltaY = this.slidingAnimation.originalPosition.y - this.view.position.y;\n            if (Math.abs(deltaY) < epsilon) return;\n\n            this.slidingAnimation.position.SetDurations(duration);\n            this.slidingAnimation.position.SetStartValues(this.view.position.y);\n            this.slidingAnimation.position.SetDeltas(deltaY);\n            this.slidingAnimation.position.Restart();\n            this.slidingAnimation.enabled = true;\n        }\n    }, {\n        key: \"Update\",\n        value: function Update() {\n            if (this.slidingAnimation.enabled) {\n                this.slidingAnimation.position.Update();\n            }\n        }\n\n        /**\r\n         * \r\n         * @param {CargoGroup|CargoEntry|string|Number} id \r\n         */\n\n    }, {\n        key: \"GetTemplate\",\n        value: function GetTemplate(id) {\n            var group;\n            if (id instanceof _CargoGroup2.default) {\n                group = id;\n            } else if (id instanceof _CargoEntry2.default) {\n                var _iteratorNormalCompletion = true;\n                var _didIteratorError = false;\n                var _iteratorError = undefined;\n\n                try {\n                    for (var _iterator = this.cargoTemplateViews.keys()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                        var cargoGroup = _step.value;\n\n                        if (cargoGroup.entry === id) group = cargoGroup;\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return) {\n                            _iterator.return();\n                        }\n                    } finally {\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n            } else {\n                var _iteratorNormalCompletion2 = true;\n                var _didIteratorError2 = false;\n                var _iteratorError2 = undefined;\n\n                try {\n                    for (var _iterator2 = this.cargoTemplateViews.keys()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                        var cargoGroup = _step2.value;\n\n                        if (cargoGroup.entry.uid === id) group = cargoGroup;\n                    }\n                } catch (err) {\n                    _didIteratorError2 = true;\n                    _iteratorError2 = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                            _iterator2.return();\n                        }\n                    } finally {\n                        if (_didIteratorError2) {\n                            throw _iteratorError2;\n                        }\n                    }\n                }\n            }\n\n            return this.cargoTemplateViews.get(group);\n        }\n\n        /**\r\n         * @param {CargoView} cargoView \r\n         * @param {string} value \r\n         * @param {string} textColor css\r\n         */\n\n    }, {\n        key: \"UpdateLabel\",\n        value: function UpdateLabel(cargoView, value, textColor) {\n            var textLabelView = labels.get(cargoView);\n            if (textLabelView) {\n                if (textColor) textLabelView.params.fontColor = textColor;\n                textLabelView.UpdateText(value);\n            }\n        }\n\n        /**\r\n         * @param {Map<CargoGroup, CargoView>} cargoViews \r\n         * @returns {Number}\r\n         */\n\n    }, {\n        key: \"Sort\",\n        value: function Sort() {\n\n            this.SortMapBySize();\n\n            var units = this.params.ux.params.units;\n\n            this.view.updateMatrixWorld(true);\n            var worldToLocal = new THREE.Matrix4().getInverse(this.templatesView.matrixWorld);\n            var padding = 5 * units,\n                start = 0;\n\n            var i = 0,\n                offset = 0;\n\n            /**\r\n             * @type {SortResult}\r\n             */\n            var result = { min: start, max: start, cargoes: 0 };\n\n            var list = this.cargoTemplateViews.values(),\n                cargoView;\n            while ((cargoView = list.next()).done === false) {\n\n                cargoView.value.position.set(start, 0, 0);\n\n                tempBox.setFromObject(cargoView.value.view);\n                tempBox.applyMatrix4(worldToLocal);\n\n                tempBox.getSize(tempVec);\n                var halfSize = tempVec.x / 2;\n                if (i > 0) offset += halfSize;\n\n                cargoView.value.position.set(start + offset, tempVec.y / 2 + padding, -tempVec.z / 2);\n\n                var labelView = labels.get(cargoView.value);\n                labelView.view.position.x = cargoView.value.position.x;\n                labelView.view.position.y = padding + 1 * units;\n\n                offset += halfSize + padding;\n\n                i++;\n            }\n\n            result.min = start;\n            result.max = offset;\n            result.cargoes = i;\n            this.Dispatch(signals.sort, result);\n        }\n    }, {\n        key: \"SortMapBySize\",\n        value: function SortMapBySize() {\n            /**\r\n             * \r\n             * @param {[CargoGroup, CargoListView]} a \r\n             * @param {[CargoGroup, CargoListView]} b \r\n             */\n            function sort(a, b) {\n                return -a[0].entry.dimensions.Compare(b[0].entry.dimensions);\n            }\n\n            var list = [].concat(_toConsumableArray(this.cargoTemplateViews.entries()));\n            list.sort(sort);\n            this.cargoTemplateViews = new Map(list);\n            return;\n        }\n    }], [{\n        key: \"signals\",\n        get: function get() {\n            return signals;\n        }\n    }]);\n\n    return CargoListView;\n}(_Signaler3.default);\n\nexports.default = CargoListView;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///19\n");

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _UIUtils = __webpack_require__(27);\n\nvar _Config2 = __webpack_require__(7);\n\nvar _Config3 = _interopRequireDefault(_Config2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n//import dat from \"./datGUIConsole\";\n\nvar serializeModes = _Config3.default.serializeModes;\n\nvar current = undefined,\n    onFocus = [],\n    onFocusLost = [];\n\nvar Smart = function () {\n    /**\r\n     * @param {*} target \r\n     * @param {string} label \r\n     */\n    function Smart(target, label) {\n        _classCallCheck(this, Smart);\n\n        this.target = target;\n        this.label = label;\n\n        var scope = this;\n\n        this.gui = new (window.dat || __webpack_require__(3).default).GUI({ autoPlace: false });\n        this.draggable = new _UIUtils.Draggable(this.label, 250);\n        this.draggable.Add(this.gui.domElement);\n        this.draggable.closeBtn.onclick = function () {\n            scope.Hide();\n        };\n\n        var ui = _UIUtils.Element.Add(this.draggable);\n        this.draggable.Hide();\n\n        this.onFocus = [];\n        this.onFocusLost = [];\n    }\n\n    _createClass(Smart, [{\n        key: \"Delete\",\n        value: function Delete() {\n            this.Hide();\n            this.draggable.Delete();\n            this.gui.destroy();\n            this.onFocus.length = this.onFocusLost.length = 0;\n        }\n    }, {\n        key: \"UpdateGUI\",\n        value: function UpdateGUI() {\n            Smart.UpdateGUI(this.gui);\n        }\n    }, {\n        key: \"Hide\",\n        value: function Hide() {\n            this.visible = false;\n            this.draggable.Hide();\n            Smart.SetCurrent(undefined);\n        }\n    }, {\n        key: \"Show\",\n        value: function Show() {\n            if (current !== undefined) {\n                if (current === this) return;\n\n                var oldPos = current.draggable.GetPosition();\n                this.draggable.SetPosition(oldPos.x, oldPos.y);\n\n                current.Hide();\n            }\n            this.visible = true;\n            this.draggable.Show();\n            _UIUtils.Element.AddStyle(this.draggable.domElement, _UIUtils.styles.UIWiggleAnim);\n            Smart.SetCurrent(this);\n\n            this.UpdateGUI();\n        }\n\n        /**\r\n         * \r\n         * @param {string} folderName \r\n         * @param {*} target \r\n         * @param {Function} guiChanged \r\n         * @param {serializeModes} serializeMode\r\n         * @param {Array<string|Config.Controller>} args \r\n         */\n\n    }, {\n        key: \"Config\",\n        value: function Config(folderName, target, guiChanged, serializeMode) {\n            var _config;\n\n            this.config = new _Config3.default(target);\n\n            for (var _len = arguments.length, args = Array(_len > 4 ? _len - 4 : 0), _key = 4; _key < _len; _key++) {\n                args[_key - 4] = arguments[_key];\n            }\n\n            (_config = this.config).Track.apply(_config, args);\n            this.config.Edit(guiChanged, folderName, this.gui, { serializeMode: serializeMode, save: false });\n            return this.config.gui;\n        }\n\n        /**\r\n         * @param {string} category \r\n         */\n\n    }, {\n        key: \"MakeShortcut\",\n        value: function MakeShortcut(category) {\n            Smart.MakeShortcut(category, this);\n        }\n    }], [{\n        key: \"MakeShortcut\",\n\n\n        /**\r\n         * @param {string} category \r\n         * @param {Smart} target \r\n         */\n        value: function MakeShortcut(category, target) {\n            _Config3.default.MakeShortcut(category, target.label, function () {\n                if (target.visible) {\n                    target.Hide();\n                } else {\n                    target.Show();\n                }\n            });\n        }\n    }, {\n        key: \"SetCurrent\",\n        value: function SetCurrent(current) {\n            var iFocus;\n            if (current !== undefined) {\n                for (iFocus = 0; iFocus < onFocusLost.length; iFocus++) {\n                    onFocusLost[iFocus](current);\n                }\n                for (iFocus = 0; iFocus < current.onFocusLost.length; iFocus++) {\n                    current.onFocusLost[iFocus]();\n                }\n            }\n\n            current = current;\n\n            if (current !== undefined) {\n                for (iFocus = 0; iFocus < onFocus.length; iFocus++) {\n                    onFocus[iFocus](current);\n                }\n                for (iFocus = 0; iFocus < current.onFocus.length; iFocus++) {\n                    current.onFocus[iFocus]();\n                }\n            }\n        }\n    }, {\n        key: \"UpdateGUI\",\n        value: function UpdateGUI(gui) {\n            for (var i in gui.__controllers) {\n                gui.__controllers[i].updateDisplay();\n            }\n\n            var folders = Object.values(gui.__folders);\n            for (i = 0; i < folders.length; i++) {\n                this.UpdateGUI(folders[i]);\n            }\n        }\n    }, {\n        key: \"serializeModes\",\n        get: function get() {\n            return serializeModes;\n        }\n    }]);\n\n    return Smart;\n}();\n\nexports.default = Smart;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///20\n");

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar spaces = {\n    world: 'world',\n    local: 'local'\n};\n\nvar modes = {\n    translate: 'translate',\n    rotate: 'rotate',\n    scale: 'scale'\n};\n\n/**\r\n * @type {Object<Control3D>}\r\n */\nvar defaultControls = {};\n\nvar Control3D = function () {\n\n    /**\r\n     * @param {THREE.Camera} camera \r\n     * @param {HTMLElement} domElement \r\n     */\n    function Control3D(camera, domElement) {\n        _classCallCheck(this, Control3D);\n\n        this.camera = camera;\n        this.control = new THREE.TransformControls(this.camera, domElement);\n        this.control.addEventListener('change', this.Update.bind(this));\n\n        this.control.traverse(function (child) {\n            child.renderOrder = 2;\n        });\n\n        this.visible = false;\n    }\n\n    _createClass(Control3D, [{\n        key: 'Attach',\n        value: function Attach(target) {\n            this.control.attach(target);\n        }\n    }, {\n        key: 'Detach',\n        value: function Detach() {\n            this.control.detach();\n        }\n    }, {\n        key: 'Toggle',\n        value: function Toggle(target) {\n            if (this.control.object) {\n                this.control.detach();\n            } else {\n                this.control.attach(target);\n            }\n        }\n    }, {\n        key: 'Update',\n        value: function Update() {\n            this.control.update();\n        }\n    }, {\n        key: 'visible',\n        get: function get() {\n            return this.control.visible;\n        },\n        set: function set(value) {\n            this.control.visible = value;\n            if (value === false) {\n                this.Detach();\n            }\n        }\n    }, {\n        key: 'space',\n        get: function get() {\n            return this.control.space;\n        },\n        set: function set(value) {\n            this.control.space = value;\n        }\n\n        // translate || rotate || scale\n\n    }, {\n        key: 'mode',\n        set: function set(value) {\n            this.control.setMode(value);\n        }\n    }], [{\n        key: 'Configure',\n\n\n        /**\r\n         * @param {string} id \r\n         * @param {THREE.Camera} camera \r\n         * @param {HTMLElement} domElement \r\n         * @returns {Control3D}\r\n         */\n        value: function Configure(id, camera, domElement) {\n            var control = new Control3D(camera, domElement);\n            defaultControls[id] = control;\n            return control;\n        }\n\n        /**\r\n         * @returns {Control3D}\r\n         */\n\n    }, {\n        key: 'Request',\n        value: function Request(id) {\n            return defaultControls[id];\n        }\n    }, {\n        key: 'spaces',\n        get: function get() {\n            return spaces;\n        }\n    }, {\n        key: 'modes',\n        get: function get() {\n            return modes;\n        }\n    }]);\n\n    return Control3D;\n}();\n\nexports.default = Control3D;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXBpL3V0aWxzL2Npay9jb25maWcvQ29udHJvbDNELmpzP2U0ZTIiXSwibmFtZXMiOlsic3BhY2VzIiwid29ybGQiLCJsb2NhbCIsIm1vZGVzIiwidHJhbnNsYXRlIiwicm90YXRlIiwic2NhbGUiLCJkZWZhdWx0Q29udHJvbHMiLCJDb250cm9sM0QiLCJjYW1lcmEiLCJkb21FbGVtZW50IiwiY29udHJvbCIsIlRIUkVFIiwiVHJhbnNmb3JtQ29udHJvbHMiLCJhZGRFdmVudExpc3RlbmVyIiwiVXBkYXRlIiwiYmluZCIsInRyYXZlcnNlIiwiY2hpbGQiLCJyZW5kZXJPcmRlciIsInZpc2libGUiLCJ0YXJnZXQiLCJhdHRhY2giLCJkZXRhY2giLCJvYmplY3QiLCJ1cGRhdGUiLCJ2YWx1ZSIsIkRldGFjaCIsInNwYWNlIiwic2V0TW9kZSIsImlkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQ0EsSUFBTUEsU0FBUztBQUNYQyxXQUFPLE9BREk7QUFFWEMsV0FBTztBQUZJLENBQWY7O0FBS0EsSUFBTUMsUUFBUTtBQUNWQyxlQUFXLFdBREQ7QUFFVkMsWUFBUSxRQUZFO0FBR1ZDLFdBQU87QUFIRyxDQUFkOztBQU1BOzs7QUFHQSxJQUFJQyxrQkFBa0IsRUFBdEI7O0lBRU1DLFM7O0FBRUY7Ozs7QUFJQSx1QkFBWUMsTUFBWixFQUFvQkMsVUFBcEIsRUFBK0I7QUFBQTs7QUFDM0IsYUFBS0QsTUFBTCxHQUFjQSxNQUFkO0FBQ0EsYUFBS0UsT0FBTCxHQUFlLElBQUlDLE1BQU1DLGlCQUFWLENBQTRCLEtBQUtKLE1BQWpDLEVBQXlDQyxVQUF6QyxDQUFmO0FBQ0EsYUFBS0MsT0FBTCxDQUFhRyxnQkFBYixDQUE4QixRQUE5QixFQUF3QyxLQUFLQyxNQUFMLENBQVlDLElBQVosQ0FBaUIsSUFBakIsQ0FBeEM7O0FBRUEsYUFBS0wsT0FBTCxDQUFhTSxRQUFiLENBQXNCLFVBQVNDLEtBQVQsRUFBZTtBQUNqQ0Esa0JBQU1DLFdBQU4sR0FBb0IsQ0FBcEI7QUFDSCxTQUZEOztBQUlBLGFBQUtDLE9BQUwsR0FBZSxLQUFmO0FBQ0g7Ozs7K0JBYU1DLE0sRUFBTztBQUNWLGlCQUFLVixPQUFMLENBQWFXLE1BQWIsQ0FBb0JELE1BQXBCO0FBQ0g7OztpQ0FFTztBQUNKLGlCQUFLVixPQUFMLENBQWFZLE1BQWI7QUFDSDs7OytCQUVNRixNLEVBQU87QUFDVixnQkFBRyxLQUFLVixPQUFMLENBQWFhLE1BQWhCLEVBQXVCO0FBQ25CLHFCQUFLYixPQUFMLENBQWFZLE1BQWI7QUFDSCxhQUZELE1BR0k7QUFDQSxxQkFBS1osT0FBTCxDQUFhVyxNQUFiLENBQW9CRCxNQUFwQjtBQUNIO0FBQ0o7OztpQ0FFTztBQUNKLGlCQUFLVixPQUFMLENBQWFjLE1BQWI7QUFDSDs7OzRCQTlCWTtBQUNULG1CQUFPLEtBQUtkLE9BQUwsQ0FBYVMsT0FBcEI7QUFDSCxTOzBCQUVXTSxLLEVBQU07QUFDZCxpQkFBS2YsT0FBTCxDQUFhUyxPQUFiLEdBQXVCTSxLQUF2QjtBQUNBLGdCQUFHQSxVQUFVLEtBQWIsRUFBbUI7QUFDZixxQkFBS0MsTUFBTDtBQUNIO0FBQ0o7Ozs0QkF1QlU7QUFDUCxtQkFBTyxLQUFLaEIsT0FBTCxDQUFhaUIsS0FBcEI7QUFDSCxTOzBCQUVTRixLLEVBQU07QUFDWixpQkFBS2YsT0FBTCxDQUFhaUIsS0FBYixHQUFxQkYsS0FBckI7QUFDSDs7QUFFRDs7OzswQkFDU0EsSyxFQUFNO0FBQ1gsaUJBQUtmLE9BQUwsQ0FBYWtCLE9BQWIsQ0FBcUJILEtBQXJCO0FBQ0g7Ozs7O0FBVUQ7Ozs7OztrQ0FNaUJJLEUsRUFBSXJCLE0sRUFBUUMsVSxFQUFXO0FBQ3BDLGdCQUFJQyxVQUFVLElBQUlILFNBQUosQ0FBY0MsTUFBZCxFQUFzQkMsVUFBdEIsQ0FBZDtBQUNBSCw0QkFBZ0J1QixFQUFoQixJQUFzQm5CLE9BQXRCO0FBQ0EsbUJBQU9BLE9BQVA7QUFDSDs7QUFFRDs7Ozs7O2dDQUdlbUIsRSxFQUFHO0FBQ2QsbUJBQU92QixnQkFBZ0J1QixFQUFoQixDQUFQO0FBQ0g7Ozs0QkF6QmtCO0FBQ2YsbUJBQU85QixNQUFQO0FBQ0g7Ozs0QkFFaUI7QUFDZCxtQkFBT0csS0FBUDtBQUNIOzs7Ozs7a0JBc0JVSyxTIiwiZmlsZSI6IjIxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmNvbnN0IHNwYWNlcyA9IHtcclxuICAgIHdvcmxkOiAnd29ybGQnLFxyXG4gICAgbG9jYWw6ICdsb2NhbCdcclxufTtcclxuXHJcbmNvbnN0IG1vZGVzID0ge1xyXG4gICAgdHJhbnNsYXRlOiAndHJhbnNsYXRlJyxcclxuICAgIHJvdGF0ZTogJ3JvdGF0ZScsXHJcbiAgICBzY2FsZTogJ3NjYWxlJ1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIEB0eXBlIHtPYmplY3Q8Q29udHJvbDNEPn1cclxuICovXHJcbnZhciBkZWZhdWx0Q29udHJvbHMgPSB7fTtcclxuXHJcbmNsYXNzIENvbnRyb2wzRCB7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBAcGFyYW0ge1RIUkVFLkNhbWVyYX0gY2FtZXJhIFxyXG4gICAgICogQHBhcmFtIHtIVE1MRWxlbWVudH0gZG9tRWxlbWVudCBcclxuICAgICAqL1xyXG4gICAgY29uc3RydWN0b3IoY2FtZXJhLCBkb21FbGVtZW50KXtcclxuICAgICAgICB0aGlzLmNhbWVyYSA9IGNhbWVyYTtcclxuICAgICAgICB0aGlzLmNvbnRyb2wgPSBuZXcgVEhSRUUuVHJhbnNmb3JtQ29udHJvbHModGhpcy5jYW1lcmEsIGRvbUVsZW1lbnQpO1xyXG4gICAgICAgIHRoaXMuY29udHJvbC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCB0aGlzLlVwZGF0ZS5iaW5kKHRoaXMpKTtcclxuXHJcbiAgICAgICAgdGhpcy5jb250cm9sLnRyYXZlcnNlKGZ1bmN0aW9uKGNoaWxkKXtcclxuICAgICAgICAgICAgY2hpbGQucmVuZGVyT3JkZXIgPSAyO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICB0aGlzLnZpc2libGUgPSBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICBnZXQgdmlzaWJsZSgpe1xyXG4gICAgICAgIHJldHVybiB0aGlzLmNvbnRyb2wudmlzaWJsZTtcclxuICAgIH1cclxuXHJcbiAgICBzZXQgdmlzaWJsZSh2YWx1ZSl7XHJcbiAgICAgICAgdGhpcy5jb250cm9sLnZpc2libGUgPSB2YWx1ZTtcclxuICAgICAgICBpZih2YWx1ZSA9PT0gZmFsc2Upe1xyXG4gICAgICAgICAgICB0aGlzLkRldGFjaCgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBBdHRhY2godGFyZ2V0KXtcclxuICAgICAgICB0aGlzLmNvbnRyb2wuYXR0YWNoKHRhcmdldCk7XHJcbiAgICB9XHJcblxyXG4gICAgRGV0YWNoKCl7XHJcbiAgICAgICAgdGhpcy5jb250cm9sLmRldGFjaCgpO1xyXG4gICAgfVxyXG5cclxuICAgIFRvZ2dsZSh0YXJnZXQpe1xyXG4gICAgICAgIGlmKHRoaXMuY29udHJvbC5vYmplY3Qpe1xyXG4gICAgICAgICAgICB0aGlzLmNvbnRyb2wuZGV0YWNoKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgIHRoaXMuY29udHJvbC5hdHRhY2godGFyZ2V0KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgVXBkYXRlKCl7XHJcbiAgICAgICAgdGhpcy5jb250cm9sLnVwZGF0ZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBzcGFjZSgpe1xyXG4gICAgICAgIHJldHVybiB0aGlzLmNvbnRyb2wuc3BhY2U7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0IHNwYWNlKHZhbHVlKXtcclxuICAgICAgICB0aGlzLmNvbnRyb2wuc3BhY2UgPSB2YWx1ZTtcclxuICAgIH1cclxuXHJcbiAgICAvLyB0cmFuc2xhdGUgfHwgcm90YXRlIHx8IHNjYWxlXHJcbiAgICBzZXQgbW9kZSh2YWx1ZSl7XHJcbiAgICAgICAgdGhpcy5jb250cm9sLnNldE1vZGUodmFsdWUpO1xyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBnZXQgc3BhY2VzKCl7XHJcbiAgICAgICAgcmV0dXJuIHNwYWNlcztcclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgZ2V0IG1vZGVzKCl7XHJcbiAgICAgICAgcmV0dXJuIG1vZGVzO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGlkIFxyXG4gICAgICogQHBhcmFtIHtUSFJFRS5DYW1lcmF9IGNhbWVyYSBcclxuICAgICAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGRvbUVsZW1lbnQgXHJcbiAgICAgKiBAcmV0dXJucyB7Q29udHJvbDNEfVxyXG4gICAgICovXHJcbiAgICBzdGF0aWMgQ29uZmlndXJlKGlkLCBjYW1lcmEsIGRvbUVsZW1lbnQpe1xyXG4gICAgICAgIHZhciBjb250cm9sID0gbmV3IENvbnRyb2wzRChjYW1lcmEsIGRvbUVsZW1lbnQpO1xyXG4gICAgICAgIGRlZmF1bHRDb250cm9sc1tpZF0gPSBjb250cm9sO1xyXG4gICAgICAgIHJldHVybiBjb250cm9sO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQHJldHVybnMge0NvbnRyb2wzRH1cclxuICAgICAqL1xyXG4gICAgc3RhdGljIFJlcXVlc3QoaWQpe1xyXG4gICAgICAgIHJldHVybiBkZWZhdWx0Q29udHJvbHNbaWRdO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBDb250cm9sM0Q7XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2FwaS91dGlscy9jaWsvY29uZmlnL0NvbnRyb2wzRC5qcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///21\n");

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _CargoList = __webpack_require__(28);\n\nvar _CargoList2 = _interopRequireDefault(_CargoList);\n\nvar _PackingSpace = __webpack_require__(29);\n\nvar _PackingSpace2 = _interopRequireDefault(_PackingSpace);\n\nvar _BoxEntry = __webpack_require__(5);\n\nvar _BoxEntry2 = _interopRequireDefault(_BoxEntry);\n\nvar _Utils = __webpack_require__(0);\n\nvar _Utils2 = _interopRequireDefault(_Utils);\n\nvar _Signaler2 = __webpack_require__(1);\n\nvar _Signaler3 = _interopRequireDefault(_Signaler2);\n\nvar _Logger = __webpack_require__(2);\n\nvar _Logger2 = _interopRequireDefault(_Logger);\n\nvar _ContainingVolume = __webpack_require__(11);\n\nvar _ContainingVolume2 = _interopRequireDefault(_ContainingVolume);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * @typedef {Object} PackerParams\r\n * @property {import('../UX').default} ux\r\n * @property {Number} defaultStackingFactor\r\n */\n\n/** @typedef {import('../packer/cub/CUB').CUBParams} CUBParams */\n\n/** @typedef SolverParams\r\n * @property {CUBParams} algorithmParams\r\n * @property {string} algorithm default = 'cub'\r\n */\n\nvar PackedCargo =\n/**\r\n * @param {BoxEntry} entry \r\n * @param {ContainingVolume} containingVolume \r\n * @param {THREE.Vector3} position \r\n * @param {Number} orientation \r\n */\nfunction PackedCargo(entry, containingVolume, position, orientation) {\n    _classCallCheck(this, PackedCargo);\n\n    this.entry = entry;\n    this.containingVolume = containingVolume;\n    this.position = position;\n    this.orientation = orientation;\n};\n\nvar UnpackedCargo =\n/**\r\n * @param {BoxEntry} entry \r\n * @param {Number} unpackedQuantity\r\n */\nfunction UnpackedCargo(entry, unpackedQuantity) {\n    _classCallCheck(this, UnpackedCargo);\n\n    this.entry = entry;\n    this.unpackedQuantity = unpackedQuantity;\n};\n\nvar PackingResult =\n/** @param {Number} numTotalItem @param {Number} runtime */\nfunction PackingResult(numTotalItems, runtime) {\n    _classCallCheck(this, PackingResult);\n\n    /** @type {Array<PackedCargo>} */\n    this.packed = [];\n\n    /** @type {Array<UnpackedCargo>} */\n    this.unpacked = [];\n\n    this.numTotalItems = numTotalItems || 0;\n\n    this.runtime = runtime || -1;\n};\n\n/** @type {PackerParams} */\n\n\nvar defaultParams = {};\nvar signals = {\n    packUpdate: 'packUpdate',\n    packFailed: 'packFailed'\n};\n\nvar _solverParams = Symbol('solverParams');\n\nvar epsilon = Math.pow(2, -52);\n\nvar Packer = function (_Signaler) {\n    _inherits(Packer, _Signaler);\n\n    /** @param {PackerParams} params */\n    function Packer(params) {\n        _classCallCheck(this, Packer);\n\n        var _this = _possibleConstructorReturn(this, (Packer.__proto__ || Object.getPrototypeOf(Packer)).call(this));\n\n        _this.params = _Utils2.default.AssignUndefined(params, defaultParams);\n\n        _this.packingSpace = new _PackingSpace2.default();\n        _this.cargoList = new _CargoList2.default();\n\n        _this.solverExecutionsCount = 0;\n        return _this;\n    }\n\n    /** @param {PackerParams} extendedParams */\n\n\n    _createClass(Packer, [{\n        key: \"Solve\",\n\n\n        /** @param {SolverParams} params */\n        value: function Solve(params) {\n            params = params || this[_solverParams];\n            this[_solverParams] = params;\n\n            this.solverExecutionsCount++;\n\n            var algorithm = params.algorithm;\n            var algorithmParams = params.algorithmParams;\n            if (algorithm === 'cub') this.SolveCUB(algorithmParams);\n        }\n\n        /** @param {import('../packer/cub/CUB').CUBParams} params */\n\n    }, {\n        key: \"SolveCUB\",\n        value: function () {\n            var _ref = _asyncToGenerator(function* (params) {\n\n                if (this.packingSpace.ready === false) {\n                    this.Dispatch(signals.packFailed, 'Packing space not ready');\n                    return;\n                }\n\n                if (this.cargoList.ready === false) {\n                    this.Dispatch(signals.packFailed, 'Cargo list not ready');\n                    return;\n                }\n\n                var Container = __webpack_require__(30).Container;\n                var Item = __webpack_require__(30).Item;\n\n                var containingVolume = this.packingSpace.current.volume;\n                var d = containingVolume.dimensions;\n                var container = new Container(containingVolume.uid, d.width, d.height, d.length, containingVolume.weightCapacity);\n\n                var numTotalItems = 0;\n\n                /** @type {Array<Item>} */\n                var items = [];\n                var entries = {};\n                var _iteratorNormalCompletion = true;\n                var _didIteratorError = false;\n                var _iteratorError = undefined;\n\n                try {\n                    for (var _iterator = this.cargoList.groups.values()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                        var group = _step.value;\n\n                        /** @type {BoxEntry} */\n                        var entry = group.entry;\n                        entries[entry.uid] = entry;\n                        d = entry.dimensions;\n                        var validOrientations = entry.properties.rotation.enabled ? entry.properties.rotation.allowedOrientations : undefined;\n                        var stackingCapacity = entry.properties.stacking.enabled ? entry.properties.stacking.capacity : entry.weight > epsilon ? entry.weight * this.params.defaultStackingFactor : Number.MAX_SAFE_INTEGER - 10;\n                        var grounded = entry.properties.translation.enabled ? entry.properties.translation.grounded : false;\n                        var item = new Item(entry.uid, d.width, d.height, d.length, entry.weight, entry.quantity, validOrientations, stackingCapacity, grounded);\n                        items.push(item);\n                        numTotalItems += entry.quantity;\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return) {\n                            _iterator.return();\n                        }\n                    } finally {\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n\n                var CUB = __webpack_require__(64);\n                var startTime = performance.now();\n                var result = yield CUB.pack(container, items, params);\n                var cubRuntime = performance.now() - startTime;\n\n                var cubRuntime2Dec = Math.round(cubRuntime / 1000 * 100) / 100;\n                var packingResult = new PackingResult(numTotalItems, cubRuntime2Dec);\n                result.packedItems.forEach(function (packedItem) {\n                    var entry = entries[packedItem.ref.id];\n                    var position = new THREE.Vector3(packedItem.x + packedItem.packedWidth / 2, packedItem.y + packedItem.packedHeight / 2, packedItem.z + packedItem.packedLength / 2);\n                    var orientation = Item.ResolveOrientation(packedItem.orientation);\n                    var packedCargo = new PackedCargo(entry, containingVolume, position, orientation);\n                    packingResult.packed.push(packedCargo);\n                });\n\n                result.unpackedItems.forEach(function (unpackedItem) {\n                    var entry = entries[unpackedItem.id];\n                    var unpackedQuantity = unpackedItem.quantity;\n                    var unpackedCargo = new UnpackedCargo(entry, unpackedQuantity);\n                    packingResult.unpacked.push(unpackedCargo);\n                });\n\n                this.Dispatch(signals.packUpdate, packingResult);\n            });\n\n            function SolveCUB(_x) {\n                return _ref.apply(this, arguments);\n            }\n\n            return SolveCUB;\n        }()\n    }, {\n        key: \"extendedParams\",\n        set: function set(extendedParams) {\n            this.params = _Utils2.default.AssignUndefined(this.params, extendedParams);\n        }\n    }, {\n        key: \"solveAgain\",\n        get: function get() {\n            return this.solverExecutionsCount > 0;\n        }\n    }], [{\n        key: \"signals\",\n        get: function get() {\n            return signals;\n        }\n    }]);\n\n    return Packer;\n}(_Signaler3.default);\n\nPacker.PackingResult = PackingResult;\n\nexports.default = Packer;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///22\n");

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _new = Symbol('new'),\n    _reset = Symbol('reset');\n\n/**\r\n * @template {T}\r\n */\n\nvar Pool = function () {\n    /**\r\n     * @param {function(...args)=>T} fnNew \r\n     * @param {function(T, ...args)=>T} [fnReset]\r\n     */\n    function Pool(fnNew, fnReset) {\n        _classCallCheck(this, Pool);\n\n        this.objects = [];\n\n        this[_new] = fnNew;\n        this[_reset] = fnReset;\n    }\n\n    /** Get a clean object (fnNew & fnReset) from the pool\r\n     * @returns {T}\r\n     */\n\n\n    _createClass(Pool, [{\n        key: 'Request',\n        value: function Request() {\n            var object;\n\n            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n                args[_key] = arguments[_key];\n            }\n\n            if (this.objects.length === 0) {\n                object = this[_new].apply(this, args);\n            } else {\n                object = this.objects[this.objects.length - 1];\n                --this.objects.length;\n            }\n\n            return this[_reset].apply(this, [object].concat(args));\n        }\n\n        /** Make object available again\r\n         * @param {T} object \r\n         */\n\n    }, {\n        key: 'Return',\n        value: function Return(object) {\n            this.objects[this.objects.length] = object;\n        }\n    }]);\n\n    return Pool;\n}();\n\nexports.default = Pool;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXBpL3V0aWxzL2Npay9Qb29sLmpzPzJlNmYiXSwibmFtZXMiOlsiX25ldyIsIlN5bWJvbCIsIl9yZXNldCIsIlBvb2wiLCJmbk5ldyIsImZuUmVzZXQiLCJvYmplY3RzIiwib2JqZWN0IiwiYXJncyIsImxlbmd0aCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBLElBQU1BLE9BQU9DLE9BQU8sS0FBUCxDQUFiO0FBQUEsSUFDSUMsU0FBU0QsT0FBTyxPQUFQLENBRGI7O0FBR0E7Ozs7SUFHTUUsSTtBQUNGOzs7O0FBSUEsa0JBQVlDLEtBQVosRUFBbUJDLE9BQW5CLEVBQTJCO0FBQUE7O0FBQ3ZCLGFBQUtDLE9BQUwsR0FBZSxFQUFmOztBQUVBLGFBQUtOLElBQUwsSUFBYUksS0FBYjtBQUNBLGFBQUtGLE1BQUwsSUFBZUcsT0FBZjtBQUNIOztBQUVEOzs7Ozs7O2tDQUdnQjtBQUNaLGdCQUFJRSxNQUFKOztBQURZLDhDQUFMQyxJQUFLO0FBQUxBLG9CQUFLO0FBQUE7O0FBR1osZ0JBQUcsS0FBS0YsT0FBTCxDQUFhRyxNQUFiLEtBQXdCLENBQTNCLEVBQTZCO0FBQ3pCRix5QkFBUyxLQUFLUCxJQUFMLGNBQWNRLElBQWQsQ0FBVDtBQUNILGFBRkQsTUFHSTtBQUNBRCx5QkFBUyxLQUFLRCxPQUFMLENBQWEsS0FBS0EsT0FBTCxDQUFhRyxNQUFiLEdBQXNCLENBQW5DLENBQVQ7QUFDQSxrQkFBRSxLQUFLSCxPQUFMLENBQWFHLE1BQWY7QUFDSDs7QUFFRCxtQkFBTyxLQUFLUCxNQUFMLGVBQWFLLE1BQWIsU0FBd0JDLElBQXhCLEVBQVA7QUFDSDs7QUFFRDs7Ozs7OytCQUdPRCxNLEVBQU87QUFDVixpQkFBS0QsT0FBTCxDQUFhLEtBQUtBLE9BQUwsQ0FBYUcsTUFBMUIsSUFBb0NGLE1BQXBDO0FBQ0g7Ozs7OztrQkFHVUosSSIsImZpbGUiOiIyMy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5jb25zdCBfbmV3ID0gU3ltYm9sKCduZXcnKSxcclxuICAgIF9yZXNldCA9IFN5bWJvbCgncmVzZXQnKTtcclxuXHJcbi8qKlxyXG4gKiBAdGVtcGxhdGUge1R9XHJcbiAqL1xyXG5jbGFzcyBQb29se1xyXG4gICAgLyoqXHJcbiAgICAgKiBAcGFyYW0ge2Z1bmN0aW9uKC4uLmFyZ3MpPT5UfSBmbk5ldyBcclxuICAgICAqIEBwYXJhbSB7ZnVuY3Rpb24oVCwgLi4uYXJncyk9PlR9IFtmblJlc2V0XVxyXG4gICAgICovXHJcbiAgICBjb25zdHJ1Y3Rvcihmbk5ldywgZm5SZXNldCl7XHJcbiAgICAgICAgdGhpcy5vYmplY3RzID0gW107XHJcblxyXG4gICAgICAgIHRoaXNbX25ld10gPSBmbk5ldztcclxuICAgICAgICB0aGlzW19yZXNldF0gPSBmblJlc2V0O1xyXG4gICAgfVxyXG5cclxuICAgIC8qKiBHZXQgYSBjbGVhbiBvYmplY3QgKGZuTmV3ICYgZm5SZXNldCkgZnJvbSB0aGUgcG9vbFxyXG4gICAgICogQHJldHVybnMge1R9XHJcbiAgICAgKi9cclxuICAgIFJlcXVlc3QoLi4uYXJncyl7XHJcbiAgICAgICAgdmFyIG9iamVjdDtcclxuXHJcbiAgICAgICAgaWYodGhpcy5vYmplY3RzLmxlbmd0aCA9PT0gMCl7XHJcbiAgICAgICAgICAgIG9iamVjdCA9IHRoaXNbX25ld10oLi4uYXJncyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgIG9iamVjdCA9IHRoaXMub2JqZWN0c1t0aGlzLm9iamVjdHMubGVuZ3RoIC0gMV07XHJcbiAgICAgICAgICAgIC0tdGhpcy5vYmplY3RzLmxlbmd0aDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiB0aGlzW19yZXNldF0ob2JqZWN0LCAuLi5hcmdzKTtcclxuICAgIH1cclxuXHJcbiAgICAvKiogTWFrZSBvYmplY3QgYXZhaWxhYmxlIGFnYWluXHJcbiAgICAgKiBAcGFyYW0ge1R9IG9iamVjdCBcclxuICAgICAqL1xyXG4gICAgUmV0dXJuKG9iamVjdCl7XHJcbiAgICAgICAgdGhpcy5vYmplY3RzW3RoaXMub2JqZWN0cy5sZW5ndGhdID0gb2JqZWN0O1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBQb29sO1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9hcGkvdXRpbHMvY2lrL1Bvb2wuanMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///23\n");

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar type = 'Dimensions';\nvar _vec3 = Symbol('vec3');\n\nvar epsilon = Math.pow(2, -52);\nvar numberType = 'number';\n\nvar Dimensions = function () {\n    /**\r\n     * @param {Number} width \r\n     * @param {Number} length \r\n     * @param {Number} height \r\n     */\n    function Dimensions(width, length, height) {\n        _classCallCheck(this, Dimensions);\n\n        if (width === undefined) width = 0;\n        if (length === undefined) length = 0;\n        if (height === undefined) height = 0;\n\n        this.Set(width, length, height);\n        this[_vec3] = new THREE.Vector3();\n    }\n\n    /**\r\n     * @param {Number} width \r\n     * @param {Number} length \r\n     * @param {Number} height \r\n     */\n\n\n    _createClass(Dimensions, [{\n        key: 'Set',\n        value: function Set(width, length, height) {\n            /** @type {Number} */\n            this.width = width;\n            /** @type {Number} */\n            this.length = length;\n            /** @type {Number} */\n            this.height = height;\n        }\n\n        /**\r\n         * Returns a THREE.Vector3 representation of the dimensions\r\n         * Beware of ordering: x=width, y=height and z=length\r\n         * @returns {THREE.Vector3}\r\n         */\n\n    }, {\n        key: 'Abs',\n        value: function Abs() {\n            if (this.width < 0) this.width = -this.width;\n            if (this.length < 0) this.length = -this.length;\n            if (this.height < 0) this.height = -this.height;\n            return this;\n        }\n    }, {\n        key: 'Compare',\n        value: function Compare(dimensions) {\n            var d = this.volume - dimensions.volume;\n            if (d < -epsilon) return -1;\n            if (d > epsilon) return 1;\n            return 0;\n        }\n    }, {\n        key: 'Copy',\n        value: function Copy(dimensions) {\n            this.Set(dimensions.width, dimensions.length, dimensions.height);\n        }\n    }, {\n        key: 'Clone',\n        value: function Clone() {\n            var dimensions = new Dimensions(this.width, this.length, this.height);\n            return dimensions;\n        }\n    }, {\n        key: 'ToString',\n        value: function ToString() {\n            return this.width.toFixed(2) + 'x' + this.length.toFixed(2) + 'x' + this.height.toFixed(2);\n        }\n    }, {\n        key: 'toJSON',\n        value: function toJSON() {\n            return {\n                type: type,\n                width: this.width,\n                length: this.length,\n                height: this.height\n            };\n        }\n    }, {\n        key: 'vec3',\n        get: function get() {\n            return this[_vec3].set(this.width, this.height, this.length);\n        }\n    }, {\n        key: 'volume',\n        get: function get() {\n            return this.width * this.height * this.length;\n        }\n    }], [{\n        key: 'IsVolume',\n        value: function IsVolume(dimensions) {\n            return Dimensions.Assert(dimensions) && dimensions.width > epsilon && dimensions.length > epsilon && dimensions.height > epsilon;\n        }\n    }, {\n        key: 'FromJSON',\n        value: function FromJSON(data) {\n            if (data.type !== type) console.warn('Data supplied is not: ' + type);\n\n            var dimensions = new Dimensions(data.width, data.length, data.height);\n            return dimensions;\n        }\n    }, {\n        key: 'Assert',\n        value: function Assert(dimensions) {\n            return dimensions instanceof Dimensions && _typeof(dimensions.width) === numberType && _typeof(dimensions.length) === numberType && _typeof(dimensions.height) === numberType;\n        }\n    }]);\n\n    return Dimensions;\n}();\n\nexports.default = Dimensions;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXBpL2NvbXBvbmVudHMvYm94L0RpbWVuc2lvbnMuanM/OGM2MSJdLCJuYW1lcyI6WyJ0eXBlIiwiX3ZlYzMiLCJTeW1ib2wiLCJlcHNpbG9uIiwiTWF0aCIsInBvdyIsIm51bWJlclR5cGUiLCJEaW1lbnNpb25zIiwid2lkdGgiLCJsZW5ndGgiLCJoZWlnaHQiLCJ1bmRlZmluZWQiLCJTZXQiLCJUSFJFRSIsIlZlY3RvcjMiLCJkaW1lbnNpb25zIiwiZCIsInZvbHVtZSIsInRvRml4ZWQiLCJzZXQiLCJBc3NlcnQiLCJkYXRhIiwiY29uc29sZSIsIndhcm4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUNBLElBQU1BLE9BQU8sWUFBYjtBQUNBLElBQU1DLFFBQVFDLE9BQU8sTUFBUCxDQUFkOztBQUVBLElBQU1DLFVBQVVDLEtBQUtDLEdBQUwsQ0FBUyxDQUFULEVBQVksQ0FBQyxFQUFiLENBQWhCO0FBQ0EsSUFBTUMsYUFBYSxRQUFuQjs7SUFFTUMsVTtBQUNGOzs7OztBQUtBLHdCQUFZQyxLQUFaLEVBQW1CQyxNQUFuQixFQUEyQkMsTUFBM0IsRUFBa0M7QUFBQTs7QUFDOUIsWUFBR0YsVUFBVUcsU0FBYixFQUF3QkgsUUFBUSxDQUFSO0FBQ3hCLFlBQUdDLFdBQVdFLFNBQWQsRUFBeUJGLFNBQVMsQ0FBVDtBQUN6QixZQUFHQyxXQUFXQyxTQUFkLEVBQXlCRCxTQUFTLENBQVQ7O0FBRXpCLGFBQUtFLEdBQUwsQ0FBU0osS0FBVCxFQUFnQkMsTUFBaEIsRUFBd0JDLE1BQXhCO0FBQ0EsYUFBS1QsS0FBTCxJQUFjLElBQUlZLE1BQU1DLE9BQVYsRUFBZDtBQUNIOztBQUVEOzs7Ozs7Ozs7NEJBS0lOLEssRUFBT0MsTSxFQUFRQyxNLEVBQU87QUFDdEI7QUFDQSxpQkFBS0YsS0FBTCxHQUFhQSxLQUFiO0FBQ0E7QUFDQSxpQkFBS0MsTUFBTCxHQUFjQSxNQUFkO0FBQ0E7QUFDQSxpQkFBS0MsTUFBTCxHQUFjQSxNQUFkO0FBQ0g7O0FBRUQ7Ozs7Ozs7OzhCQWFLO0FBQ0QsZ0JBQUcsS0FBS0YsS0FBTCxHQUFhLENBQWhCLEVBQW1CLEtBQUtBLEtBQUwsR0FBYSxDQUFDLEtBQUtBLEtBQW5CO0FBQ25CLGdCQUFHLEtBQUtDLE1BQUwsR0FBYyxDQUFqQixFQUFvQixLQUFLQSxNQUFMLEdBQWMsQ0FBQyxLQUFLQSxNQUFwQjtBQUNwQixnQkFBRyxLQUFLQyxNQUFMLEdBQWMsQ0FBakIsRUFBb0IsS0FBS0EsTUFBTCxHQUFjLENBQUMsS0FBS0EsTUFBcEI7QUFDcEIsbUJBQU8sSUFBUDtBQUNIOzs7Z0NBRU9LLFUsRUFBVztBQUNmLGdCQUFJQyxJQUFJLEtBQUtDLE1BQUwsR0FBY0YsV0FBV0UsTUFBakM7QUFDQSxnQkFBR0QsSUFBSSxDQUFDYixPQUFSLEVBQWlCLE9BQU8sQ0FBQyxDQUFSO0FBQ2pCLGdCQUFHYSxJQUFJYixPQUFQLEVBQWdCLE9BQU8sQ0FBUDtBQUNoQixtQkFBTyxDQUFQO0FBQ0g7Ozs2QkFFSVksVSxFQUFXO0FBQ1osaUJBQUtILEdBQUwsQ0FBU0csV0FBV1AsS0FBcEIsRUFBMkJPLFdBQVdOLE1BQXRDLEVBQThDTSxXQUFXTCxNQUF6RDtBQUNIOzs7Z0NBRU07QUFDSCxnQkFBSUssYUFBYSxJQUFJUixVQUFKLENBQWUsS0FBS0MsS0FBcEIsRUFBMkIsS0FBS0MsTUFBaEMsRUFBd0MsS0FBS0MsTUFBN0MsQ0FBakI7QUFDQSxtQkFBT0ssVUFBUDtBQUNIOzs7bUNBRVM7QUFDTixtQkFBTyxLQUFLUCxLQUFMLENBQVdVLE9BQVgsQ0FBbUIsQ0FBbkIsSUFBd0IsR0FBeEIsR0FBOEIsS0FBS1QsTUFBTCxDQUFZUyxPQUFaLENBQW9CLENBQXBCLENBQTlCLEdBQXVELEdBQXZELEdBQTZELEtBQUtSLE1BQUwsQ0FBWVEsT0FBWixDQUFvQixDQUFwQixDQUFwRTtBQUNIOzs7aUNBRU87QUFDSixtQkFBTztBQUNIbEIsc0JBQU1BLElBREg7QUFFSFEsdUJBQU8sS0FBS0EsS0FGVDtBQUdIQyx3QkFBUSxLQUFLQSxNQUhWO0FBSUhDLHdCQUFRLEtBQUtBO0FBSlYsYUFBUDtBQU1IOzs7NEJBMUNTO0FBQ04sbUJBQU8sS0FBS1QsS0FBTCxFQUFZa0IsR0FBWixDQUFnQixLQUFLWCxLQUFyQixFQUE0QixLQUFLRSxNQUFqQyxFQUF5QyxLQUFLRCxNQUE5QyxDQUFQO0FBQ0g7Ozs0QkFFVztBQUNSLG1CQUFPLEtBQUtELEtBQUwsR0FBYSxLQUFLRSxNQUFsQixHQUEyQixLQUFLRCxNQUF2QztBQUNIOzs7aUNBc0NlTSxVLEVBQVc7QUFDdkIsbUJBQU9SLFdBQVdhLE1BQVgsQ0FBa0JMLFVBQWxCLEtBQ0FBLFdBQVdQLEtBQVgsR0FBbUJMLE9BRG5CLElBRUFZLFdBQVdOLE1BQVgsR0FBb0JOLE9BRnBCLElBR0FZLFdBQVdMLE1BQVgsR0FBb0JQLE9BSDNCO0FBS0g7OztpQ0FFZWtCLEksRUFBSztBQUNqQixnQkFBR0EsS0FBS3JCLElBQUwsS0FBY0EsSUFBakIsRUFBdUJzQixRQUFRQyxJQUFSLENBQWEsMkJBQTJCdkIsSUFBeEM7O0FBRXZCLGdCQUFJZSxhQUFhLElBQUlSLFVBQUosQ0FBZWMsS0FBS2IsS0FBcEIsRUFBMkJhLEtBQUtaLE1BQWhDLEVBQXdDWSxLQUFLWCxNQUE3QyxDQUFqQjtBQUNBLG1CQUFPSyxVQUFQO0FBQ0g7OzsrQkFFYUEsVSxFQUFXO0FBQ3JCLG1CQUFPQSxzQkFBc0JSLFVBQXRCLElBQ0EsUUFBT1EsV0FBV1AsS0FBbEIsTUFBNEJGLFVBRDVCLElBRUEsUUFBT1MsV0FBV04sTUFBbEIsTUFBNkJILFVBRjdCLElBR0EsUUFBT1MsV0FBV0wsTUFBbEIsTUFBNkJKLFVBSHBDO0FBS0g7Ozs7OztrQkFHVUMsVSIsImZpbGUiOiIyNC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5jb25zdCB0eXBlID0gJ0RpbWVuc2lvbnMnO1xyXG5jb25zdCBfdmVjMyA9IFN5bWJvbCgndmVjMycpO1xyXG5cclxuY29uc3QgZXBzaWxvbiA9IE1hdGgucG93KDIsIC01Mik7XHJcbmNvbnN0IG51bWJlclR5cGUgPSAnbnVtYmVyJztcclxuXHJcbmNsYXNzIERpbWVuc2lvbnMge1xyXG4gICAgLyoqXHJcbiAgICAgKiBAcGFyYW0ge051bWJlcn0gd2lkdGggXHJcbiAgICAgKiBAcGFyYW0ge051bWJlcn0gbGVuZ3RoIFxyXG4gICAgICogQHBhcmFtIHtOdW1iZXJ9IGhlaWdodCBcclxuICAgICAqL1xyXG4gICAgY29uc3RydWN0b3Iod2lkdGgsIGxlbmd0aCwgaGVpZ2h0KXtcclxuICAgICAgICBpZih3aWR0aCA9PT0gdW5kZWZpbmVkKSB3aWR0aCA9IDA7XHJcbiAgICAgICAgaWYobGVuZ3RoID09PSB1bmRlZmluZWQpIGxlbmd0aCA9IDA7XHJcbiAgICAgICAgaWYoaGVpZ2h0ID09PSB1bmRlZmluZWQpIGhlaWdodCA9IDA7XHJcbiAgICAgICAgXHJcbiAgICAgICAgdGhpcy5TZXQod2lkdGgsIGxlbmd0aCwgaGVpZ2h0KTtcclxuICAgICAgICB0aGlzW192ZWMzXSA9IG5ldyBUSFJFRS5WZWN0b3IzKCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBAcGFyYW0ge051bWJlcn0gd2lkdGggXHJcbiAgICAgKiBAcGFyYW0ge051bWJlcn0gbGVuZ3RoIFxyXG4gICAgICogQHBhcmFtIHtOdW1iZXJ9IGhlaWdodCBcclxuICAgICAqL1xyXG4gICAgU2V0KHdpZHRoLCBsZW5ndGgsIGhlaWdodCl7XHJcbiAgICAgICAgLyoqIEB0eXBlIHtOdW1iZXJ9ICovXHJcbiAgICAgICAgdGhpcy53aWR0aCA9IHdpZHRoO1xyXG4gICAgICAgIC8qKiBAdHlwZSB7TnVtYmVyfSAqL1xyXG4gICAgICAgIHRoaXMubGVuZ3RoID0gbGVuZ3RoO1xyXG4gICAgICAgIC8qKiBAdHlwZSB7TnVtYmVyfSAqL1xyXG4gICAgICAgIHRoaXMuaGVpZ2h0ID0gaGVpZ2h0O1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyBhIFRIUkVFLlZlY3RvcjMgcmVwcmVzZW50YXRpb24gb2YgdGhlIGRpbWVuc2lvbnNcclxuICAgICAqIEJld2FyZSBvZiBvcmRlcmluZzogeD13aWR0aCwgeT1oZWlnaHQgYW5kIHo9bGVuZ3RoXHJcbiAgICAgKiBAcmV0dXJucyB7VEhSRUUuVmVjdG9yM31cclxuICAgICAqL1xyXG4gICAgZ2V0IHZlYzMoKXtcclxuICAgICAgICByZXR1cm4gdGhpc1tfdmVjM10uc2V0KHRoaXMud2lkdGgsIHRoaXMuaGVpZ2h0LCB0aGlzLmxlbmd0aCk7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IHZvbHVtZSgpe1xyXG4gICAgICAgIHJldHVybiB0aGlzLndpZHRoICogdGhpcy5oZWlnaHQgKiB0aGlzLmxlbmd0aDtcclxuICAgIH1cclxuXHJcbiAgICBBYnMoKXtcclxuICAgICAgICBpZih0aGlzLndpZHRoIDwgMCkgdGhpcy53aWR0aCA9IC10aGlzLndpZHRoO1xyXG4gICAgICAgIGlmKHRoaXMubGVuZ3RoIDwgMCkgdGhpcy5sZW5ndGggPSAtdGhpcy5sZW5ndGg7XHJcbiAgICAgICAgaWYodGhpcy5oZWlnaHQgPCAwKSB0aGlzLmhlaWdodCA9IC10aGlzLmhlaWdodDtcclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgIH1cclxuXHJcbiAgICBDb21wYXJlKGRpbWVuc2lvbnMpe1xyXG4gICAgICAgIHZhciBkID0gdGhpcy52b2x1bWUgLSBkaW1lbnNpb25zLnZvbHVtZTtcclxuICAgICAgICBpZihkIDwgLWVwc2lsb24pIHJldHVybiAtMTtcclxuICAgICAgICBpZihkID4gZXBzaWxvbikgcmV0dXJuIDE7XHJcbiAgICAgICAgcmV0dXJuIDA7XHJcbiAgICB9XHJcblxyXG4gICAgQ29weShkaW1lbnNpb25zKXtcclxuICAgICAgICB0aGlzLlNldChkaW1lbnNpb25zLndpZHRoLCBkaW1lbnNpb25zLmxlbmd0aCwgZGltZW5zaW9ucy5oZWlnaHQpO1xyXG4gICAgfVxyXG5cclxuICAgIENsb25lKCl7XHJcbiAgICAgICAgdmFyIGRpbWVuc2lvbnMgPSBuZXcgRGltZW5zaW9ucyh0aGlzLndpZHRoLCB0aGlzLmxlbmd0aCwgdGhpcy5oZWlnaHQpO1xyXG4gICAgICAgIHJldHVybiBkaW1lbnNpb25zO1xyXG4gICAgfVxyXG5cclxuICAgIFRvU3RyaW5nKCl7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMud2lkdGgudG9GaXhlZCgyKSArICd4JyArIHRoaXMubGVuZ3RoLnRvRml4ZWQoMikgKyAneCcgKyB0aGlzLmhlaWdodC50b0ZpeGVkKDIpO1xyXG4gICAgfVxyXG5cclxuICAgIHRvSlNPTigpe1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHR5cGU6IHR5cGUsXHJcbiAgICAgICAgICAgIHdpZHRoOiB0aGlzLndpZHRoLFxyXG4gICAgICAgICAgICBsZW5ndGg6IHRoaXMubGVuZ3RoLFxyXG4gICAgICAgICAgICBoZWlnaHQ6IHRoaXMuaGVpZ2h0XHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgSXNWb2x1bWUoZGltZW5zaW9ucyl7XHJcbiAgICAgICAgcmV0dXJuIERpbWVuc2lvbnMuQXNzZXJ0KGRpbWVuc2lvbnMpIFxyXG4gICAgICAgICAgICAmJiBkaW1lbnNpb25zLndpZHRoID4gZXBzaWxvblxyXG4gICAgICAgICAgICAmJiBkaW1lbnNpb25zLmxlbmd0aCA+IGVwc2lsb25cclxuICAgICAgICAgICAgJiYgZGltZW5zaW9ucy5oZWlnaHQgPiBlcHNpbG9uXHJcbiAgICAgICAgO1xyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBGcm9tSlNPTihkYXRhKXtcclxuICAgICAgICBpZihkYXRhLnR5cGUgIT09IHR5cGUpIGNvbnNvbGUud2FybignRGF0YSBzdXBwbGllZCBpcyBub3Q6ICcgKyB0eXBlKTtcclxuXHJcbiAgICAgICAgdmFyIGRpbWVuc2lvbnMgPSBuZXcgRGltZW5zaW9ucyhkYXRhLndpZHRoLCBkYXRhLmxlbmd0aCwgZGF0YS5oZWlnaHQpO1xyXG4gICAgICAgIHJldHVybiBkaW1lbnNpb25zO1xyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBBc3NlcnQoZGltZW5zaW9ucyl7XHJcbiAgICAgICAgcmV0dXJuIGRpbWVuc2lvbnMgaW5zdGFuY2VvZiBEaW1lbnNpb25zXHJcbiAgICAgICAgICAgICYmIHR5cGVvZiBkaW1lbnNpb25zLndpZHRoID09PSBudW1iZXJUeXBlXHJcbiAgICAgICAgICAgICYmIHR5cGVvZiBkaW1lbnNpb25zLmxlbmd0aCA9PT0gbnVtYmVyVHlwZVxyXG4gICAgICAgICAgICAmJiB0eXBlb2YgZGltZW5zaW9ucy5oZWlnaHQgPT09IG51bWJlclR5cGVcclxuICAgICAgICA7XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IERpbWVuc2lvbnM7XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2FwaS9jb21wb25lbnRzL2JveC9EaW1lbnNpb25zLmpzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///24\n");

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Resources = function Resources() {\n    _classCallCheck(this, Resources);\n\n    this.texturesPath = '';\n};\n\nexports.default = Resources;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXBpL1Jlc291cmNlcy5qcz85OWNhIl0sIm5hbWVzIjpbIlJlc291cmNlcyIsInRleHR1cmVzUGF0aCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7SUFDTUEsUyxHQUNGLHFCQUFhO0FBQUE7O0FBQ1QsU0FBS0MsWUFBTCxHQUFvQixFQUFwQjtBQUNILEM7O2tCQUdVRCxTIiwiZmlsZSI6IjI1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmNsYXNzIFJlc291cmNlc3tcclxuICAgIGNvbnN0cnVjdG9yKCl7XHJcbiAgICAgICAgdGhpcy50ZXh0dXJlc1BhdGggPSAnJztcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgUmVzb3VyY2VzO1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9hcGkvUmVzb3VyY2VzLmpzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///25\n");

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _CargoEntry = __webpack_require__(6);\n\nvar _CargoEntry2 = _interopRequireDefault(_CargoEntry);\n\nvar _Cargo = __webpack_require__(60);\n\nvar _Cargo2 = _interopRequireDefault(_Cargo);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar CargoGroup = function () {\n    /**\r\n     * \r\n     * @param {CargoEntry} entry\r\n     */\n    function CargoGroup(entry) {\n        _classCallCheck(this, CargoGroup);\n\n        this.entry = entry;\n\n        /** @type {Array<Cargo>} */\n        this.cargoes = [];\n\n        this.template = new _Cargo2.default(this);\n        this.quantity = this.entry.quantity;\n    }\n\n    _createClass(CargoGroup, [{\n        key: \"ToString\",\n        value: function ToString() {\n            var output = 'CargoGroup(' + this.quantity + ' x ' + this.entry.ToString() + ')';\n\n            return output;\n        }\n    }, {\n        key: \"quantity\",\n        get: function get() {\n            return this.cargoes.length;\n        },\n        set: function set(value) {\n            var currentQuantity = this.cargoes.length;\n            if (value < currentQuantity) {\n                this.cargoes.length = value;\n                this.entry.quantity = value;\n            } else if (value > currentQuantity) {\n                for (var i = currentQuantity; i < value; i++) {\n                    this.cargoes[i] = this.template.Clone();\n                }\n            }\n        }\n    }]);\n\n    return CargoGroup;\n}();\n\nexports.default = CargoGroup;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXBpL3BhY2tlci9DYXJnb0dyb3VwLmpzPzQxN2EiXSwibmFtZXMiOlsiQ2FyZ29Hcm91cCIsImVudHJ5IiwiY2FyZ29lcyIsInRlbXBsYXRlIiwiQ2FyZ28iLCJxdWFudGl0eSIsIm91dHB1dCIsIlRvU3RyaW5nIiwibGVuZ3RoIiwidmFsdWUiLCJjdXJyZW50UXVhbnRpdHkiLCJpIiwiQ2xvbmUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7Ozs7QUFDQTs7Ozs7Ozs7SUFHTUEsVTtBQUNGOzs7O0FBSUEsd0JBQVlDLEtBQVosRUFBa0I7QUFBQTs7QUFDZCxhQUFLQSxLQUFMLEdBQWFBLEtBQWI7O0FBRUE7QUFDQSxhQUFLQyxPQUFMLEdBQWUsRUFBZjs7QUFFQSxhQUFLQyxRQUFMLEdBQWdCLElBQUlDLGVBQUosQ0FBVSxJQUFWLENBQWhCO0FBQ0EsYUFBS0MsUUFBTCxHQUFnQixLQUFLSixLQUFMLENBQVdJLFFBQTNCO0FBQ0g7Ozs7bUNBbUJTO0FBQ04sZ0JBQUlDLFNBQVMsZ0JBQWdCLEtBQUtELFFBQXJCLEdBQWdDLEtBQWhDLEdBQXdDLEtBQUtKLEtBQUwsQ0FBV00sUUFBWCxFQUF4QyxHQUFnRSxHQUE3RTs7QUFFQSxtQkFBT0QsTUFBUDtBQUNIOzs7NEJBckJhO0FBQ1YsbUJBQU8sS0FBS0osT0FBTCxDQUFhTSxNQUFwQjtBQUNILFM7MEJBRVlDLEssRUFBTTtBQUNmLGdCQUFJQyxrQkFBa0IsS0FBS1IsT0FBTCxDQUFhTSxNQUFuQztBQUNBLGdCQUFHQyxRQUFRQyxlQUFYLEVBQTJCO0FBQ3ZCLHFCQUFLUixPQUFMLENBQWFNLE1BQWIsR0FBc0JDLEtBQXRCO0FBQ0EscUJBQUtSLEtBQUwsQ0FBV0ksUUFBWCxHQUFzQkksS0FBdEI7QUFDSCxhQUhELE1BSUssSUFBR0EsUUFBUUMsZUFBWCxFQUEyQjtBQUM1QixxQkFBSSxJQUFJQyxJQUFJRCxlQUFaLEVBQTZCQyxJQUFJRixLQUFqQyxFQUF3Q0UsR0FBeEMsRUFBNEM7QUFDeEMseUJBQUtULE9BQUwsQ0FBYVMsQ0FBYixJQUFrQixLQUFLUixRQUFMLENBQWNTLEtBQWQsRUFBbEI7QUFDSDtBQUNKO0FBQ0o7Ozs7OztrQkFVVVosVSIsImZpbGUiOiIyNi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDYXJnb0VudHJ5IGZyb20gXCIuLi9jb21wb25lbnRzL2NvbW1vbi9DYXJnb0VudHJ5XCI7XHJcbmltcG9ydCBDYXJnbyBmcm9tIFwiLi9DYXJnb1wiO1xyXG5cclxuXHJcbmNsYXNzIENhcmdvR3JvdXAge1xyXG4gICAgLyoqXHJcbiAgICAgKiBcclxuICAgICAqIEBwYXJhbSB7Q2FyZ29FbnRyeX0gZW50cnlcclxuICAgICAqL1xyXG4gICAgY29uc3RydWN0b3IoZW50cnkpe1xyXG4gICAgICAgIHRoaXMuZW50cnkgPSBlbnRyeTtcclxuXHJcbiAgICAgICAgLyoqIEB0eXBlIHtBcnJheTxDYXJnbz59ICovXHJcbiAgICAgICAgdGhpcy5jYXJnb2VzID0gW107XHJcblxyXG4gICAgICAgIHRoaXMudGVtcGxhdGUgPSBuZXcgQ2FyZ28odGhpcyk7XHJcbiAgICAgICAgdGhpcy5xdWFudGl0eSA9IHRoaXMuZW50cnkucXVhbnRpdHk7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IHF1YW50aXR5KCl7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuY2FyZ29lcy5sZW5ndGg7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0IHF1YW50aXR5KHZhbHVlKXtcclxuICAgICAgICB2YXIgY3VycmVudFF1YW50aXR5ID0gdGhpcy5jYXJnb2VzLmxlbmd0aDtcclxuICAgICAgICBpZih2YWx1ZSA8IGN1cnJlbnRRdWFudGl0eSl7XHJcbiAgICAgICAgICAgIHRoaXMuY2FyZ29lcy5sZW5ndGggPSB2YWx1ZTtcclxuICAgICAgICAgICAgdGhpcy5lbnRyeS5xdWFudGl0eSA9IHZhbHVlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmKHZhbHVlID4gY3VycmVudFF1YW50aXR5KXtcclxuICAgICAgICAgICAgZm9yKHZhciBpID0gY3VycmVudFF1YW50aXR5OyBpIDwgdmFsdWU7IGkrKyl7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNhcmdvZXNbaV0gPSB0aGlzLnRlbXBsYXRlLkNsb25lKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgVG9TdHJpbmcoKXtcclxuICAgICAgICB2YXIgb3V0cHV0ID0gJ0NhcmdvR3JvdXAoJyArIHRoaXMucXVhbnRpdHkgKyAnIHggJyArIHRoaXMuZW50cnkuVG9TdHJpbmcoKSArICcpJztcclxuXHJcbiAgICAgICAgcmV0dXJuIG91dHB1dDtcclxuICAgIH1cclxuXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IENhcmdvR3JvdXA7XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2FwaS9wYWNrZXIvQ2FyZ29Hcm91cC5qcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///26\n");

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction stopPropagation(e) {\n    e.stopPropagation();\n}\n\nvar stylesheet;\n\n/** @param {string|Array<string>} css */\nfunction createCSS(css) {\n    if (stylesheet === undefined) {\n        stylesheet = document.createElement('style');\n        stylesheet.type = 'text/css';\n        document.getElementsByTagName('head')[0].appendChild(stylesheet);\n    }\n    if (css instanceof Array) css = css.join('\\n');\n\n    if (css.length > 1) stylesheet.innerHTML += css + '\\n';\n}\n\ncreateCSS(['@keyframes wiggle {', '    20% { transform: rotate(5deg); }', '    50% { transform: rotate(0deg); }', '    75% { transform: rotate(-5deg); }', '   100% { transform: rotate(0deg); }', '}']);\n\nvar styles = {\n    UIFitContent: 'display: inline-block; padding-bottom: 1em;',\n    UIHideMenu: 'display: none !important;',\n\n    UIDraggable: 'position: absolute; -webkit-user-select: none; -moz-user-select: none; -o-user-select: none; \\\r\n                -ms-user-select: none; -khtml-user-select: none; user-select: none; z-index: 1; padding: 4px;',\n    UIDHeader: 'color: #ffffff; display: inline-block; word-wrap: break-word; font-family: Monospace; font-size: 1.2em; height: 100%; width: 100%;',\n    UIDCloseButton: 'background-color: rgb(19, 19, 19); border: none; color: white; padding: 8px 2px; text-align: center; \\\r\n                text-decoration: none; margin-left: -38px; margin-right: 10px; font-family: Monospace; font-size: small; cursor: pointer;',\n    UIWiggleAnim: 'display: inline-block; animation: wiggle .15s;'\n\n};\n\nvar Element = function () {\n\n    /**\r\n     * @property {HTMLElement} domElement\r\n     */\n\n    function Element() {\n        _classCallCheck(this, Element);\n\n        /**\r\n         * @type {HTMLElement}\r\n         */\n        this._domElement;\n    }\n\n    _createClass(Element, [{\n        key: 'EnableChildInput',\n        value: function EnableChildInput() {\n            if (this._domElement) {\n                this._domElement.removeEventListener('mousedown', stopPropagation);\n                this._domElement.removeEventListener('mouseup', stopPropagation);\n            }\n        }\n    }, {\n        key: 'Hide',\n        value: function Hide() {\n            Element.AddStyle(this.domElement, styles.UIHideMenu);\n        }\n    }, {\n        key: 'Show',\n        value: function Show() {\n            Element.RemoveStyle(this.domElement, styles.UIHideMenu);\n        }\n    }, {\n        key: 'Remove',\n        value: function Remove() {\n            if (this._domElement) {\n                this._domElement.removeEventListener('mousedown', stopPropagation);\n                this._domElement.removeEventListener('mouseup', stopPropagation);\n\n                this._domElement.remove();\n                delete this._domElement;\n            }\n        }\n    }, {\n        key: 'domElement',\n        set: function set(value) {\n            if (this._domElement) {\n                this._domElement.removeEventListener('mousedown', stopPropagation);\n                this._domElement.removeEventListener('mouseup', stopPropagation);\n            }\n\n            this._domElement = value;\n\n            this._domElement.addEventListener('mousedown', stopPropagation);\n            this._domElement.addEventListener('mouseup', stopPropagation);\n        },\n        get: function get() {\n            return this._domElement;\n        }\n    }, {\n        key: 'opacity',\n        get: function get() {\n            return parseFloat(this.domElement.style.opacity);\n        },\n        set: function set(value) {\n            this.domElement.style.opacity = value;\n        }\n    }], [{\n        key: '_Span',\n        value: function _Span(text, attributes) {\n            return {\n                type: 'span',\n                label: text,\n                attributes: attributes\n            };\n        }\n    }, {\n        key: 'Span',\n        value: function Span(text, attributes) {\n            var _span = this._Span(text, attributes);\n            return crel(_span.type, _span.attributes, _span.label);\n        }\n\n        /**\r\n         * \r\n         * @param {HTMLElement} element \r\n         * @param {string} style \r\n         */\n\n    }, {\n        key: 'AddStyle',\n        value: function AddStyle(element, style) {\n            var eStyle = element.style.cssText;\n            var index = eStyle.indexOf(style);\n            if (index === -1) {\n                element.style.cssText += style;\n            }\n        }\n\n        /**\r\n         * \r\n         * @param {HTMLElement} element \r\n         * @param {string} style \r\n         */\n\n    }, {\n        key: 'RemoveStyle',\n        value: function RemoveStyle(element, style) {\n            element.style.cssText = element.style.cssText.replace(style, '');\n        }\n    }, {\n        key: 'Add',\n        value: function Add(element) {\n            document.body.appendChild(element.domElement);\n        }\n    }, {\n        key: 'CreateCSS',\n        get: function get() {\n            return createCSS;\n        }\n    }]);\n\n    return Element;\n}();\n\nvar widths = {\n    small: 162,\n    medium: 242,\n    large: 362\n};\n\nvar Draggable = function (_Element) {\n    _inherits(Draggable, _Element);\n\n    function Draggable(title, width) {\n        _classCallCheck(this, Draggable);\n\n        var _this = _possibleConstructorReturn(this, (Draggable.__proto__ || Object.getPrototypeOf(Draggable)).call(this));\n\n        var dom;\n\n        var move = function move(xpos, ypos) {\n            dom.style.left = xpos + 'px';\n            dom.style.top = ypos + 'px';\n        };\n\n        var diffX = 0,\n            diffY = 0;\n        var eWi = 0,\n            eHe = 0,\n            cWi = 0,\n            cHe = 0;\n\n        var onMouseMove = function onMouseMove(evt) {\n            evt = evt || window.event;\n            var posX = evt.clientX,\n                posY = evt.clientY,\n                aX = posX - diffX,\n                aY = posY - diffY;\n            if (aX < 0) aX = 0;\n            if (aY < 0) aY = 0;\n            if (aX + eWi > cWi) aX = cWi - eWi;\n            if (aY + eHe > cHe) aY = cHe - eHe;\n            move(aX, aY);\n        };\n\n        var startMoving = function startMoving(evt) {\n            var p = dom.parentNode;\n            var container = p !== undefined && p !== null ? p : window;\n            container = document.body;\n            evt = evt || window.event;\n            var posX = evt.clientX,\n                posY = evt.clientY,\n                divTop = dom.style.top,\n                divLeft = dom.style.left;\n\n            eWi = parseInt(dom.style.width);\n            eHe = parseInt(dom.style.height);\n            cWi = parseInt(container.style.width);\n            cHe = parseInt(container.style.height);\n\n            container.style.cursor = 'move';\n            divTop = divTop.replace('px', '');\n            divLeft = divLeft.replace('px', '');\n            diffX = posX - divLeft;\n            diffY = posY - divTop;\n            document.addEventListener('mousemove', onMouseMove);\n        };\n\n        var stopMoving = function stopMoving() {\n            var p = dom.parentNode;\n            var container = p !== undefined && p !== null ? p : window;\n            container = document.body;\n            container.style.cursor = 'default';\n            document.removeEventListener('mousemove', onMouseMove);\n        };\n\n        if (width === undefined) width = widths.medium;\n        var left = 60 + Math.floor(Math.random() * 160),\n            top = 60 + Math.floor(Math.random() * 60);\n        var domStyle = 'left:' + left + 'px; top:' + top + 'px; width:' + width + 'px; background-color: rgba(0, 0, 0, .8);' + styles.UIFitContent + styles.UIDraggable;\n        dom = crel('div', { style: domStyle });\n        var head = crel('div', { style: 'display: flex;' });\n        dom.appendChild(head);\n        var header = crel('div', { onmousedown: startMoving, onmouseup: stopMoving, style: styles.UIDHeader }, title);\n\n        var scope = _this;\n        var close = function close() {\n            scope.Close();\n        };\n        var closeBtn = crel('button', { onclick: close, style: styles.UIDCloseButton }, 'Close');\n        head.appendChild(closeBtn);\n        head.appendChild(header);\n\n        dom.closeBtn = closeBtn;\n\n        _this.domElement = dom;\n        _this.EnableChildInput();\n        _this.closeBtn = closeBtn;\n        return _this;\n    }\n\n    _createClass(Draggable, [{\n        key: 'Close',\n        value: function Close() {\n            this.domElement.remove();\n        }\n    }, {\n        key: 'Add',\n        value: function Add(elt) {\n            this.domElement.appendChild(elt);\n        }\n    }, {\n        key: 'GetPosition',\n        value: function GetPosition() {\n            var style = window.getComputedStyle(this.domElement),\n                left = parseFloat(style.left),\n                top = parseFloat(style.top);\n\n            return { x: left, y: top };\n        }\n    }, {\n        key: 'SetPosition',\n        value: function SetPosition(x, y) {\n            this.domElement.style.left = x + 'px';\n            this.domElement.style.top = y + 'px';\n        }\n    }], [{\n        key: 'widths',\n        get: function get() {\n            return widths;\n        }\n    }]);\n\n    return Draggable;\n}(Element);\n\nexports.styles = styles;\nexports.Element = Element;\nexports.Draggable = Draggable;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///27\n");

/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Signaler2 = __webpack_require__(1);\n\nvar _Signaler3 = _interopRequireDefault(_Signaler2);\n\nvar _CargoEntry = __webpack_require__(6);\n\nvar _CargoEntry2 = _interopRequireDefault(_CargoEntry);\n\nvar _CargoGroup = __webpack_require__(26);\n\nvar _CargoGroup2 = _interopRequireDefault(_CargoGroup);\n\nvar _BoxEntry = __webpack_require__(5);\n\nvar _BoxEntry2 = _interopRequireDefault(_BoxEntry);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar stringType = 'string';\n\nvar signals = {\n    groupAdded: 'groupAdded',\n    groupRemoved: 'groupRemoved',\n    groupModified: 'groupModified'\n};\n\nvar CargoList = function (_Signaler) {\n    _inherits(CargoList, _Signaler);\n\n    function CargoList() {\n        _classCallCheck(this, CargoList);\n\n        /** @type {Map<string, CargoGroup>} */\n        var _this = _possibleConstructorReturn(this, (CargoList.__proto__ || Object.getPrototypeOf(CargoList)).call(this));\n\n        _this.groups = new Map();\n        return _this;\n    }\n\n    /** Adds a new CargoGroup\r\n     * @param {CargoEntry} entry \r\n     */\n\n\n    _createClass(CargoList, [{\n        key: \"Add\",\n        value: function Add(entry) {\n            var group = new _CargoGroup2.default(entry);\n\n            this.groups.set(entry.uid, group);\n            this.Dispatch(signals.groupAdded, group);\n        }\n\n        /** Adds a new CargoGroup\r\n         * @param {CargoEntry} entry \r\n         */\n\n    }, {\n        key: \"Modify\",\n        value: function Modify(entry) {\n            var group = this.groups.get(entry.uid);\n            this.Dispatch(signals.groupModified, group);\n        }\n\n        /** Removes the CargoGroup using its uid\r\n         * @param {string} uid \r\n         */\n\n    }, {\n        key: \"Remove\",\n        value: function Remove(uid) {\n            var group = this.groups.get(uid);\n            if (group) {\n                this.groups.delete(uid);\n                this.Dispatch(signals.groupRemoved, group);\n            }\n        }\n\n        /** @param {string} entryUID @returns {BoxEntry} the entry if it exists */\n\n    }, {\n        key: \"GetEntry\",\n        value: function GetEntry(entryUID) {\n            if (this.groups.has(entryUID)) return this.groups.get(entryUID).entry;\n        }\n    }, {\n        key: \"ready\",\n        get: function get() {\n            return this.groups.size > 0;\n        }\n    }], [{\n        key: \"signals\",\n        get: function get() {\n            return signals;\n        }\n    }]);\n\n    return CargoList;\n}(_Signaler3.default);\n\nexports.default = CargoList;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXBpL3BhY2tlci9DYXJnb0xpc3QuanM/YjUwYiJdLCJuYW1lcyI6WyJzdHJpbmdUeXBlIiwic2lnbmFscyIsImdyb3VwQWRkZWQiLCJncm91cFJlbW92ZWQiLCJncm91cE1vZGlmaWVkIiwiQ2FyZ29MaXN0IiwiZ3JvdXBzIiwiTWFwIiwiZW50cnkiLCJncm91cCIsIkNhcmdvR3JvdXAiLCJzZXQiLCJ1aWQiLCJEaXNwYXRjaCIsImdldCIsImRlbGV0ZSIsImVudHJ5VUlEIiwiaGFzIiwic2l6ZSIsIlNpZ25hbGVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7Ozs7Ozs7Ozs7QUFFQSxJQUFNQSxhQUFhLFFBQW5COztBQUVBLElBQU1DLFVBQVU7QUFDWkMsZ0JBQVksWUFEQTtBQUVaQyxrQkFBYyxjQUZGO0FBR1pDLG1CQUFlO0FBSEgsQ0FBaEI7O0lBTU1DLFM7OztBQUNGLHlCQUFhO0FBQUE7O0FBR1Q7QUFIUzs7QUFJVCxjQUFLQyxNQUFMLEdBQWMsSUFBSUMsR0FBSixFQUFkO0FBSlM7QUFLWjs7QUFFRDs7Ozs7Ozs0QkFHSUMsSyxFQUFNO0FBQ04sZ0JBQUlDLFFBQVEsSUFBSUMsb0JBQUosQ0FBZUYsS0FBZixDQUFaOztBQUVBLGlCQUFLRixNQUFMLENBQVlLLEdBQVosQ0FBZ0JILE1BQU1JLEdBQXRCLEVBQTJCSCxLQUEzQjtBQUNBLGlCQUFLSSxRQUFMLENBQWNaLFFBQVFDLFVBQXRCLEVBQWtDTyxLQUFsQztBQUNIOztBQUVEOzs7Ozs7K0JBR09ELEssRUFBTTtBQUNULGdCQUFJQyxRQUFRLEtBQUtILE1BQUwsQ0FBWVEsR0FBWixDQUFnQk4sTUFBTUksR0FBdEIsQ0FBWjtBQUNBLGlCQUFLQyxRQUFMLENBQWNaLFFBQVFHLGFBQXRCLEVBQXFDSyxLQUFyQztBQUNIOztBQUVEOzs7Ozs7K0JBR09HLEcsRUFBSTtBQUNQLGdCQUFJSCxRQUFRLEtBQUtILE1BQUwsQ0FBWVEsR0FBWixDQUFnQkYsR0FBaEIsQ0FBWjtBQUNBLGdCQUFHSCxLQUFILEVBQVM7QUFDTCxxQkFBS0gsTUFBTCxDQUFZUyxNQUFaLENBQW1CSCxHQUFuQjtBQUNBLHFCQUFLQyxRQUFMLENBQWNaLFFBQVFFLFlBQXRCLEVBQW9DTSxLQUFwQztBQUNIO0FBQ0o7O0FBRUQ7Ozs7aUNBQ1NPLFEsRUFBUztBQUNkLGdCQUFHLEtBQUtWLE1BQUwsQ0FBWVcsR0FBWixDQUFnQkQsUUFBaEIsQ0FBSCxFQUE4QixPQUFPLEtBQUtWLE1BQUwsQ0FBWVEsR0FBWixDQUFnQkUsUUFBaEIsRUFBMEJSLEtBQWpDO0FBQ2pDOzs7NEJBRVU7QUFDUCxtQkFBTyxLQUFLRixNQUFMLENBQVlZLElBQVosR0FBbUIsQ0FBMUI7QUFDSDs7OzRCQUVtQjtBQUNoQixtQkFBT2pCLE9BQVA7QUFDSDs7OztFQWhEbUJrQixrQjs7a0JBbURUZCxTIiwiZmlsZSI6IjI4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFNpZ25hbGVyIGZyb20gXCIuLi91dGlscy9jaWsvU2lnbmFsZXJcIjtcclxuaW1wb3J0IENhcmdvRW50cnkgZnJvbSBcIi4uL2NvbXBvbmVudHMvY29tbW9uL0NhcmdvRW50cnlcIjtcclxuaW1wb3J0IENhcmdvR3JvdXAgZnJvbSBcIi4vQ2FyZ29Hcm91cFwiO1xyXG5pbXBvcnQgQm94RW50cnkgZnJvbSBcIi4uL2NvbXBvbmVudHMvYm94L0JveEVudHJ5XCI7XHJcblxyXG5jb25zdCBzdHJpbmdUeXBlID0gJ3N0cmluZyc7XHJcblxyXG5jb25zdCBzaWduYWxzID0ge1xyXG4gICAgZ3JvdXBBZGRlZDogJ2dyb3VwQWRkZWQnLFxyXG4gICAgZ3JvdXBSZW1vdmVkOiAnZ3JvdXBSZW1vdmVkJyxcclxuICAgIGdyb3VwTW9kaWZpZWQ6ICdncm91cE1vZGlmaWVkJ1xyXG59O1xyXG5cclxuY2xhc3MgQ2FyZ29MaXN0IGV4dGVuZHMgU2lnbmFsZXJ7XHJcbiAgICBjb25zdHJ1Y3Rvcigpe1xyXG4gICAgICAgIHN1cGVyKCk7XHJcblxyXG4gICAgICAgIC8qKiBAdHlwZSB7TWFwPHN0cmluZywgQ2FyZ29Hcm91cD59ICovXHJcbiAgICAgICAgdGhpcy5ncm91cHMgPSBuZXcgTWFwKCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIEFkZHMgYSBuZXcgQ2FyZ29Hcm91cFxyXG4gICAgICogQHBhcmFtIHtDYXJnb0VudHJ5fSBlbnRyeSBcclxuICAgICAqL1xyXG4gICAgQWRkKGVudHJ5KXtcclxuICAgICAgICB2YXIgZ3JvdXAgPSBuZXcgQ2FyZ29Hcm91cChlbnRyeSk7XHJcblxyXG4gICAgICAgIHRoaXMuZ3JvdXBzLnNldChlbnRyeS51aWQsIGdyb3VwKTtcclxuICAgICAgICB0aGlzLkRpc3BhdGNoKHNpZ25hbHMuZ3JvdXBBZGRlZCwgZ3JvdXApO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKiBBZGRzIGEgbmV3IENhcmdvR3JvdXBcclxuICAgICAqIEBwYXJhbSB7Q2FyZ29FbnRyeX0gZW50cnkgXHJcbiAgICAgKi9cclxuICAgIE1vZGlmeShlbnRyeSl7XHJcbiAgICAgICAgdmFyIGdyb3VwID0gdGhpcy5ncm91cHMuZ2V0KGVudHJ5LnVpZCk7XHJcbiAgICAgICAgdGhpcy5EaXNwYXRjaChzaWduYWxzLmdyb3VwTW9kaWZpZWQsIGdyb3VwKTtcclxuICAgIH1cclxuXHJcbiAgICAvKiogUmVtb3ZlcyB0aGUgQ2FyZ29Hcm91cCB1c2luZyBpdHMgdWlkXHJcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gdWlkIFxyXG4gICAgICovXHJcbiAgICBSZW1vdmUodWlkKXtcclxuICAgICAgICB2YXIgZ3JvdXAgPSB0aGlzLmdyb3Vwcy5nZXQodWlkKTtcclxuICAgICAgICBpZihncm91cCl7XHJcbiAgICAgICAgICAgIHRoaXMuZ3JvdXBzLmRlbGV0ZSh1aWQpO1xyXG4gICAgICAgICAgICB0aGlzLkRpc3BhdGNoKHNpZ25hbHMuZ3JvdXBSZW1vdmVkLCBncm91cCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKiBAcGFyYW0ge3N0cmluZ30gZW50cnlVSUQgQHJldHVybnMge0JveEVudHJ5fSB0aGUgZW50cnkgaWYgaXQgZXhpc3RzICovXHJcbiAgICBHZXRFbnRyeShlbnRyeVVJRCl7XHJcbiAgICAgICAgaWYodGhpcy5ncm91cHMuaGFzKGVudHJ5VUlEKSkgcmV0dXJuIHRoaXMuZ3JvdXBzLmdldChlbnRyeVVJRCkuZW50cnk7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IHJlYWR5KCl7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZ3JvdXBzLnNpemUgPiAwO1xyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBnZXQgc2lnbmFscygpe1xyXG4gICAgICAgIHJldHVybiBzaWduYWxzO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBDYXJnb0xpc3Q7XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2FwaS9wYWNrZXIvQ2FyZ29MaXN0LmpzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///28\n");

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Container = __webpack_require__(8);\n\nvar _Container2 = _interopRequireDefault(_Container);\n\nvar _Signaler2 = __webpack_require__(1);\n\nvar _Signaler3 = _interopRequireDefault(_Signaler2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar signals = {\n    containerAdded: 'containerAdded'\n};\n\nvar _currentIndex = Symbol('currentIndex');\n\nvar PackingSpace = function (_Signaler) {\n    _inherits(PackingSpace, _Signaler);\n\n    function PackingSpace() {\n        _classCallCheck(this, PackingSpace);\n\n        var _this = _possibleConstructorReturn(this, (PackingSpace.__proto__ || Object.getPrototypeOf(PackingSpace)).call(this));\n\n        _this[_currentIndex] = -1;\n\n        /**\r\n         * @type {Container}\r\n         */\n        _this.containers = [];\n        return _this;\n    }\n\n    /** @param {Container} container */\n\n\n    _createClass(PackingSpace, [{\n        key: \"AddContainer\",\n        value: function AddContainer(container) {\n            this.containers.push(container);\n            this[_currentIndex]++;\n\n            this.Dispatch(signals.containerAdded, container);\n        }\n\n        /** @returns {Container} */\n\n    }, {\n        key: \"current\",\n        get: function get() {\n            var currentIndex = this[_currentIndex];\n            if (currentIndex !== -1) {\n                return this.containers[currentIndex];\n            }\n        }\n    }, {\n        key: \"ready\",\n        get: function get() {\n            return this[_currentIndex] !== -1;\n        }\n    }], [{\n        key: \"signals\",\n        get: function get() {\n            return signals;\n        }\n    }]);\n\n    return PackingSpace;\n}(_Signaler3.default);\n\nexports.default = PackingSpace;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXBpL3BhY2tlci9QYWNraW5nU3BhY2UuanM/YTNiYSJdLCJuYW1lcyI6WyJzaWduYWxzIiwiY29udGFpbmVyQWRkZWQiLCJfY3VycmVudEluZGV4IiwiU3ltYm9sIiwiUGFja2luZ1NwYWNlIiwiY29udGFpbmVycyIsImNvbnRhaW5lciIsInB1c2giLCJEaXNwYXRjaCIsImN1cnJlbnRJbmRleCIsIlNpZ25hbGVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7Ozs7Ozs7OztBQUVBLElBQU1BLFVBQVU7QUFDWkMsb0JBQWdCO0FBREosQ0FBaEI7O0FBSUEsSUFBTUMsZ0JBQWdCQyxPQUFPLGNBQVAsQ0FBdEI7O0lBRU1DLFk7OztBQUNGLDRCQUFhO0FBQUE7O0FBQUE7O0FBR1QsY0FBS0YsYUFBTCxJQUFzQixDQUFDLENBQXZCOztBQUVBOzs7QUFHQSxjQUFLRyxVQUFMLEdBQWtCLEVBQWxCO0FBUlM7QUFTWjs7QUFFRDs7Ozs7cUNBQ2FDLFMsRUFBVTtBQUNuQixpQkFBS0QsVUFBTCxDQUFnQkUsSUFBaEIsQ0FBcUJELFNBQXJCO0FBQ0EsaUJBQUtKLGFBQUw7O0FBRUEsaUJBQUtNLFFBQUwsQ0FBY1IsUUFBUUMsY0FBdEIsRUFBc0NLLFNBQXRDO0FBQ0g7O0FBRUQ7Ozs7NEJBQ2E7QUFDVCxnQkFBSUcsZUFBZSxLQUFLUCxhQUFMLENBQW5CO0FBQ0EsZ0JBQUdPLGlCQUFpQixDQUFDLENBQXJCLEVBQXVCO0FBQ25CLHVCQUFPLEtBQUtKLFVBQUwsQ0FBZ0JJLFlBQWhCLENBQVA7QUFDSDtBQUNKOzs7NEJBRVU7QUFDUCxtQkFBTyxLQUFLUCxhQUFMLE1BQXdCLENBQUMsQ0FBaEM7QUFDSDs7OzRCQUVtQjtBQUNoQixtQkFBT0YsT0FBUDtBQUNIOzs7O0VBbENzQlUsa0I7O2tCQXFDWk4sWSIsImZpbGUiOiIyOS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDb250YWluZXIgZnJvbSBcIi4vY29udGFpbmVyL0NvbnRhaW5lclwiO1xyXG5pbXBvcnQgU2lnbmFsZXIgZnJvbSBcIi4uL3V0aWxzL2Npay9TaWduYWxlclwiO1xyXG5cclxuY29uc3Qgc2lnbmFscyA9IHtcclxuICAgIGNvbnRhaW5lckFkZGVkOiAnY29udGFpbmVyQWRkZWQnXHJcbn07XHJcblxyXG5jb25zdCBfY3VycmVudEluZGV4ID0gU3ltYm9sKCdjdXJyZW50SW5kZXgnKTtcclxuXHJcbmNsYXNzIFBhY2tpbmdTcGFjZSBleHRlbmRzIFNpZ25hbGVyIHtcclxuICAgIGNvbnN0cnVjdG9yKCl7XHJcbiAgICAgICAgc3VwZXIoKTtcclxuICAgICAgICBcclxuICAgICAgICB0aGlzW19jdXJyZW50SW5kZXhdID0gLTE7XHJcblxyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEB0eXBlIHtDb250YWluZXJ9XHJcbiAgICAgICAgICovXHJcbiAgICAgICAgdGhpcy5jb250YWluZXJzID0gW107XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIEBwYXJhbSB7Q29udGFpbmVyfSBjb250YWluZXIgKi9cclxuICAgIEFkZENvbnRhaW5lcihjb250YWluZXIpe1xyXG4gICAgICAgIHRoaXMuY29udGFpbmVycy5wdXNoKGNvbnRhaW5lcik7XHJcbiAgICAgICAgdGhpc1tfY3VycmVudEluZGV4XSsrO1xyXG5cclxuICAgICAgICB0aGlzLkRpc3BhdGNoKHNpZ25hbHMuY29udGFpbmVyQWRkZWQsIGNvbnRhaW5lcik7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIEByZXR1cm5zIHtDb250YWluZXJ9ICovXHJcbiAgICBnZXQgY3VycmVudCgpe1xyXG4gICAgICAgIHZhciBjdXJyZW50SW5kZXggPSB0aGlzW19jdXJyZW50SW5kZXhdO1xyXG4gICAgICAgIGlmKGN1cnJlbnRJbmRleCAhPT0gLTEpe1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5jb250YWluZXJzW2N1cnJlbnRJbmRleF07XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGdldCByZWFkeSgpe1xyXG4gICAgICAgIHJldHVybiB0aGlzW19jdXJyZW50SW5kZXhdICE9PSAtMTtcclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgZ2V0IHNpZ25hbHMoKXtcclxuICAgICAgICByZXR1cm4gc2lnbmFscztcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgUGFja2luZ1NwYWNlO1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9hcGkvcGFja2VyL1BhY2tpbmdTcGFjZS5qcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///29\n");

/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar typeofNumber = 'number';\n\nvar _maxHeight = Symbol('maxHeight');\nvar _validOrientations = Symbol('validOrientations');\n\nvar orientations = ['xyz', 'zyx', 'yxz', 'yzx', 'zxy', 'xzy'];\nvar dimensions = [0, 0, 0];\n\nvar Item = function () {\n    /**\r\n     * @param {string} id \r\n     * @param {Number} width \r\n     * @param {Number} height \r\n     * @param {Number} length \r\n     * @param {Number} weight \r\n     * @param {Number} quantity \r\n     * @param {Array<Number|string>} validOrientations\r\n     * @param {Number} stackingCapacity \r\n     * @param {Boolean} grounded \r\n     */\n    function Item(id, width, height, length, weight, quantity, validOrientations, stackingCapacity, grounded) {\n        _classCallCheck(this, Item);\n\n        this.id = id;\n        this.width = width;\n        this.height = height;\n        this.length = length;\n        this.weight = weight;\n        /** @type {Number} */\n        this.volume = width * height * length;\n        this.quantity = quantity;\n\n        this.validOrientations = validOrientations;\n\n        this.stackingCapacity = stackingCapacity;\n        this.grounded = grounded;\n    }\n\n    /** @returns {Array<Number>} */\n\n\n    _createClass(Item, [{\n        key: 'GetOrientedDimensions',\n\n\n        /** @param {Number} orientation */\n        value: function GetOrientedDimensions(orientation) {\n            switch (orientation) {\n                case 0:\n                    return this.xyz;\n                case 1:\n                    return this.zyx;\n                case 2:\n                    return this.yxz;\n                case 3:\n                    return this.yzx;\n                case 4:\n                    return this.zxy;\n                case 5:\n                    return this.xzy;\n            }\n        }\n\n        /** @param {Number} orientation */\n\n    }, {\n        key: 'validOrientations',\n        get: function get() {\n            return this[_validOrientations];\n        },\n        set: function set(value) {\n            if (!value) value = orientations;\n\n            var validOrientations = [];\n            for (var i = 0; i < value.length; i++) {\n                var vo = value[i];\n                var orientation = (typeof vo === 'undefined' ? 'undefined' : _typeof(vo)) === typeofNumber ? vo : orientations.indexOf(vo.toLowerCase());\n                if (orientation !== -1) validOrientations.push(orientation);\n            }\n\n            if (validOrientations.length === 0) validOrientations[0] = 'xyz' || orientations[0];\n\n            this[_validOrientations] = validOrientations;\n            this[_maxHeight] = undefined;\n        }\n    }, {\n        key: 'xyz',\n        get: function get() {\n            dimensions[0] = this.width;dimensions[1] = this.height;dimensions[2] = this.length;return dimensions;\n        }\n    }, {\n        key: 'zyx',\n        get: function get() {\n            dimensions[0] = this.length;dimensions[1] = this.height;dimensions[2] = this.width;return dimensions;\n        }\n    }, {\n        key: 'yxz',\n        get: function get() {\n            dimensions[0] = this.height;dimensions[1] = this.width;dimensions[2] = this.length;return dimensions;\n        }\n    }, {\n        key: 'yzx',\n        get: function get() {\n            dimensions[0] = this.height;dimensions[1] = this.length;dimensions[2] = this.width;return dimensions;\n        }\n    }, {\n        key: 'zxy',\n        get: function get() {\n            dimensions[0] = this.length;dimensions[1] = this.width;dimensions[2] = this.height;return dimensions;\n        }\n    }, {\n        key: 'xzy',\n        get: function get() {\n            dimensions[0] = this.width;dimensions[1] = this.length;dimensions[2] = this.height;return dimensions;\n        }\n\n        /** @returns {Number} */\n\n    }, {\n        key: 'maxHeight',\n        get: function get() {\n            if (this[_maxHeight] === undefined) {\n                var maxHeight = 0;\n                for (var i = 0; i < this.validOrientations.length; i++) {\n                    var _dimensions = this.GetOrientedDimensions(this.validOrientations[i]);\n                    if (_dimensions[1] > maxHeight) maxHeight = _dimensions[1];\n                }\n                this[_maxHeight] = maxHeight;\n            }\n\n            return this[_maxHeight];\n        }\n    }], [{\n        key: 'ResolveOrientation',\n        value: function ResolveOrientation(orientation) {\n            return orientations[orientation];\n        }\n\n        /** @param {Array<Item>} items */\n\n    }, {\n        key: 'GetMinDimensions',\n        value: function GetMinDimensions(items) {\n            var minDimensions = [Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER];\n\n            for (var iItem = 0, numItems = items.length; iItem < numItems; iItem++) {\n                var item = items[iItem];\n                var validOrientations = item.validOrientations;\n                for (var iOrient = 0; iOrient < validOrientations.length; iOrient++) {\n                    var orientation = validOrientations[iOrient];\n                    var _dimensions2 = item.GetOrientedDimensions(orientation);\n                    if (_dimensions2[0] < minDimensions[0]) minDimensions[0] = _dimensions2[0];\n                    if (_dimensions2[1] < minDimensions[1]) minDimensions[1] = _dimensions2[1];\n                    if (_dimensions2[2] < minDimensions[2]) minDimensions[2] = _dimensions2[2];\n                }\n            }\n\n            return minDimensions;\n        }\n\n        /**\r\n         * @param {Item} a \r\n         * @param {Item} b \r\n         */\n\n    }, {\n        key: 'VolumeSort',\n        value: function VolumeSort(a, b) {\n            if (a.volume < b.volume) return -1;\n            if (a.volume > b.volume) return 1;\n            return 0;\n        }\n\n        /**\r\n         * @param {Item} a \r\n         * @param {Item} b \r\n         */\n\n    }, {\n        key: 'HeightSort',\n        value: function HeightSort(a, b) {\n            if (a.maxHeight < b.maxHeight) return -1;\n            if (a.maxHeight > b.maxHeight) return 1;\n            if (a.volume < b.volume) return -1;\n            if (a.volume > b.volume) return 1;\n            return 0;\n        }\n    }]);\n\n    return Item;\n}();\n\nvar Container =\n/**\r\n * @param {string} id \r\n * @param {Number} width \r\n * @param {Number} height \r\n * @param {Number} length \r\n * @param {Number} weightCapacity \r\n */\nfunction Container(id, width, height, length, weightCapacity) {\n    _classCallCheck(this, Container);\n\n    this.id = id;\n    this.width = width;\n    this.height = height;\n    this.length = length;\n    this.weightCapacity = weightCapacity;\n};\n\nexports.Item = Item;\nexports.Container = Container;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///30\n");

/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*\r\nconst _callback = Symbol('callback');\r\n/** @returns {function} /\r\nget callback(){ return this[_callback]; }\r\nset callback(value){\r\n    this[_callback] = value;\r\n}\r\n*/\n\nvar UpdateComponent = function () {\n    /**\r\n     * \r\n     * @param {Boolean} active \r\n     * @param {Number} interval \r\n     * @param {function(Number)} callback\r\n     */\n    function UpdateComponent(active, interval, callback) {\n        _classCallCheck(this, UpdateComponent);\n\n        this.active = active === undefined ? false : active;\n        this.interval = interval === undefined ? 1 / 30 : interval;\n        this.callback = callback;\n        this.lastUpdateTime = 0;\n    }\n\n    /**\r\n     * @param {Number} now \r\n     */\n\n\n    _createClass(UpdateComponent, [{\n        key: \"Update\",\n        value: function Update(now) {\n            this.lastUpdateTime = now;\n            this.callback(now);\n        }\n    }]);\n\n    return UpdateComponent;\n}();\n\nexports.default = UpdateComponent;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXBpL3V0aWxzL2Npay9pbnB1dC9VcGRhdGVDb21wb25lbnQuanM/MmIyMSJdLCJuYW1lcyI6WyJVcGRhdGVDb21wb25lbnQiLCJhY3RpdmUiLCJpbnRlcnZhbCIsImNhbGxiYWNrIiwidW5kZWZpbmVkIiwibGFzdFVwZGF0ZVRpbWUiLCJub3ciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTs7Ozs7Ozs7O0lBU01BLGU7QUFDRjs7Ozs7O0FBTUEsNkJBQVlDLE1BQVosRUFBb0JDLFFBQXBCLEVBQThCQyxRQUE5QixFQUF1QztBQUFBOztBQUNuQyxhQUFLRixNQUFMLEdBQWNBLFdBQVdHLFNBQVgsR0FBdUIsS0FBdkIsR0FBK0JILE1BQTdDO0FBQ0EsYUFBS0MsUUFBTCxHQUFnQkEsYUFBYUUsU0FBYixHQUF5QixJQUFJLEVBQTdCLEdBQWtDRixRQUFsRDtBQUNBLGFBQUtDLFFBQUwsR0FBZ0JBLFFBQWhCO0FBQ0EsYUFBS0UsY0FBTCxHQUFzQixDQUF0QjtBQUNIOztBQUVEOzs7Ozs7OytCQUdPQyxHLEVBQUk7QUFDUCxpQkFBS0QsY0FBTCxHQUFzQkMsR0FBdEI7QUFDQSxpQkFBS0gsUUFBTCxDQUFjRyxHQUFkO0FBQ0g7Ozs7OztrQkFHVU4sZSIsImZpbGUiOiIzMS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXHJcbmNvbnN0IF9jYWxsYmFjayA9IFN5bWJvbCgnY2FsbGJhY2snKTtcclxuLyoqIEByZXR1cm5zIHtmdW5jdGlvbn0gL1xyXG5nZXQgY2FsbGJhY2soKXsgcmV0dXJuIHRoaXNbX2NhbGxiYWNrXTsgfVxyXG5zZXQgY2FsbGJhY2sodmFsdWUpe1xyXG4gICAgdGhpc1tfY2FsbGJhY2tdID0gdmFsdWU7XHJcbn1cclxuKi9cclxuXHJcbmNsYXNzIFVwZGF0ZUNvbXBvbmVudHtcclxuICAgIC8qKlxyXG4gICAgICogXHJcbiAgICAgKiBAcGFyYW0ge0Jvb2xlYW59IGFjdGl2ZSBcclxuICAgICAqIEBwYXJhbSB7TnVtYmVyfSBpbnRlcnZhbCBcclxuICAgICAqIEBwYXJhbSB7ZnVuY3Rpb24oTnVtYmVyKX0gY2FsbGJhY2tcclxuICAgICAqL1xyXG4gICAgY29uc3RydWN0b3IoYWN0aXZlLCBpbnRlcnZhbCwgY2FsbGJhY2spe1xyXG4gICAgICAgIHRoaXMuYWN0aXZlID0gYWN0aXZlID09PSB1bmRlZmluZWQgPyBmYWxzZSA6IGFjdGl2ZTtcclxuICAgICAgICB0aGlzLmludGVydmFsID0gaW50ZXJ2YWwgPT09IHVuZGVmaW5lZCA/IDEgLyAzMCA6IGludGVydmFsO1xyXG4gICAgICAgIHRoaXMuY2FsbGJhY2sgPSBjYWxsYmFjaztcclxuICAgICAgICB0aGlzLmxhc3RVcGRhdGVUaW1lID0gMDtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEBwYXJhbSB7TnVtYmVyfSBub3cgXHJcbiAgICAgKi9cclxuICAgIFVwZGF0ZShub3cpe1xyXG4gICAgICAgIHRoaXMubGFzdFVwZGF0ZVRpbWUgPSBub3c7XHJcbiAgICAgICAgdGhpcy5jYWxsYmFjayhub3cpO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBVcGRhdGVDb21wb25lbnQ7XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2FwaS91dGlscy9jaWsvaW5wdXQvVXBkYXRlQ29tcG9uZW50LmpzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///31\n");

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * RaycastCallback\r\n * \r\n * @callback RaycastCallback\r\n * @param {Object} obj\r\n * @param {THREE.Intersection} intersection\r\n */\n\n/**\r\n * Mapping function\r\n * \r\n * @callback RaycastMapping\r\n * @param {Object} obj\r\n */\n\nvar RaycastGroup = function () {\n\n    /**\r\n     * \r\n     * @param {Array<THREE.Object3D>} items \r\n     * @param {RaycastCallback} callback \r\n     * @param {RaycastMapping} collectionQuery \r\n     * @param {Boolean} updateProperty \r\n     * @param {Boolean} recursive \r\n     */\n    function RaycastGroup(items, callback, collectionQuery, updateProperty, recursive) {\n        _classCallCheck(this, RaycastGroup);\n\n        /**\r\n         * @type {Boolean}\r\n         */\n        this.enabled = true;\n\n        this.items = items;\n        this.callback = callback;\n        this.updateProperty = updateProperty !== undefined ? updateProperty : false;\n        this.recursive = recursive !== undefined ? recursive : false;\n\n        if (collectionQuery === undefined) {\n            this.raycastItems = this.items;\n        } else {\n            this.raycastItems = [];\n            this.collectionQuery = collectionQuery;\n            this.GetRaycastItems(this.collectionQuery);\n        }\n    }\n\n    _createClass(RaycastGroup, [{\n        key: 'GetRaycastItems',\n        value: function GetRaycastItems(collectionQuery) {\n            for (var iItem = 0; iItem < this.items.length; iItem++) {\n                var rItem = collectionQuery(this.items[iItem]);\n                if (rItem !== undefined) {\n                    this.raycastItems.push(rItem);\n                } else {\n                    this.items.splice(iItem, 1);\n                    Cik.Log('raycastItem is undefined, entry removed from .items array');\n                }\n            }\n        }\n    }, {\n        key: 'UpdateItems',\n        value: function UpdateItems(items, collectionQuery) {\n            this.items = items;\n            if (collectionQuery === undefined) collectionQuery = this.collectionQuery;\n\n            if (collectionQuery === undefined) {\n                this.raycastItems = this.items;\n            } else {\n                this.raycastItems.length = 0;\n                this.collectionQuery = collectionQuery;\n                this.GetRaycastItems(this.collectionQuery);\n            }\n        }\n    }, {\n        key: 'UpdateRaycastItems',\n        value: function UpdateRaycastItems() {\n            this.raycastItems.length = 0;\n            for (var i = 0; i < this.items.length; i++) {\n                var raycastItem = this.collectionQuery(this.items[i]);\n                if (raycastItem) this.raycastItems.push(raycastItem);\n            }\n        }\n    }, {\n        key: 'Raycast',\n        value: function Raycast(raycaster) {\n            if (this.enabled === false) return;\n\n            if (this.updateProperty) {\n                this.UpdateRaycastItems();\n            }\n\n            var raycastItems = this.raycastItems;\n\n            // if ( object.visible === false || object.parent === null) return; in THREE.Raycaster.intersectObject()\n            var intersects = raycaster.intersectObjects(raycastItems, this.recursive);\n            if (intersects.length > 0) {\n                if (this.collectionQuery) {\n                    var raycastItemIndex = this.BubbleUpForIndex(intersects[0].object, raycastItems);\n                    if (raycastItemIndex !== -1) this.callback(this.items[raycastItemIndex], intersects[0]);\n                } else {\n                    this.callback(intersects[0].object, intersects[0]);\n                }\n            }\n        }\n    }, {\n        key: 'BubbleUpForIndex',\n        value: function BubbleUpForIndex(child, collection) {\n            var nestLimit = 100;\n            var numCollection = collection.length;\n            while (child !== null && nestLimit-- > 0) {\n                for (var i = 0; i < numCollection; i++) {\n                    if (collection[i] === child) return i;\n                }child = child.parent;\n            }\n            return -1;\n        }\n    }]);\n\n    return RaycastGroup;\n}();\n\nexports.default = RaycastGroup;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///32\n");

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Controller = function () {\n    function Controller(params) {\n        _classCallCheck(this, Controller);\n\n        this.params = params;\n\n        // Containers\n        this.itemsContainer = new THREE.Object3D();\n        this.itemsContainer.name = \"itemsContainer\";\n        this.miscContainer = new THREE.Object3D();\n        this.miscContainer.name = \"miscContainer\";\n        this.ambientContainer = new THREE.Object3D();\n        this.ambientContainer.name = \"ambientContainer\";\n        this.defaults = new THREE.Object3D();\n        this.defaults.name = \"defaults\";\n\n        // Scene\n        this.scene = new THREE.Scene();\n\n        // Setup rest\n        this.scene.add(this.itemsContainer);\n        this.scene.add(this.miscContainer);\n        this.scene.add(this.ambientContainer);\n        this.scene.add(this.defaults);\n    }\n\n    _createClass(Controller, [{\n        key: \"Add\",\n        value: function Add(object, container) {\n            if (container === undefined) container = this.miscContainer;\n            container.add(object);\n        }\n    }, {\n        key: \"AddDefault\",\n        value: function AddDefault(object) {\n            this.defaults.add(object);\n        }\n    }, {\n        key: \"Remove\",\n        value: function Remove(object) {\n            if (typeof object === 'string') {\n                var objName = object;\n                object = this.itemsContainer.getObjectByName(objName);\n                if (object === undefined) object = this.miscContainer.getObjectByName(objName);\n                if (object === undefined) return;\n            }\n            this.itemsContainer.remove(object);\n            this.miscContainer.remove(object);\n        }\n    }]);\n\n    return Controller;\n}();\n\nexports.default = Controller;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXBpL3NjZW5lL0NvbnRyb2xsZXIuanM/NTc1YiJdLCJuYW1lcyI6WyJDb250cm9sbGVyIiwicGFyYW1zIiwiaXRlbXNDb250YWluZXIiLCJUSFJFRSIsIk9iamVjdDNEIiwibmFtZSIsIm1pc2NDb250YWluZXIiLCJhbWJpZW50Q29udGFpbmVyIiwiZGVmYXVsdHMiLCJzY2VuZSIsIlNjZW5lIiwiYWRkIiwib2JqZWN0IiwiY29udGFpbmVyIiwidW5kZWZpbmVkIiwib2JqTmFtZSIsImdldE9iamVjdEJ5TmFtZSIsInJlbW92ZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztJQUNNQSxVO0FBQ0Ysd0JBQVlDLE1BQVosRUFBbUI7QUFBQTs7QUFFZixhQUFLQSxNQUFMLEdBQWNBLE1BQWQ7O0FBRUE7QUFDQSxhQUFLQyxjQUFMLEdBQXNCLElBQUlDLE1BQU1DLFFBQVYsRUFBdEI7QUFDQSxhQUFLRixjQUFMLENBQW9CRyxJQUFwQixHQUEyQixnQkFBM0I7QUFDQSxhQUFLQyxhQUFMLEdBQXFCLElBQUlILE1BQU1DLFFBQVYsRUFBckI7QUFDQSxhQUFLRSxhQUFMLENBQW1CRCxJQUFuQixHQUEwQixlQUExQjtBQUNBLGFBQUtFLGdCQUFMLEdBQXdCLElBQUlKLE1BQU1DLFFBQVYsRUFBeEI7QUFDQSxhQUFLRyxnQkFBTCxDQUFzQkYsSUFBdEIsR0FBNkIsa0JBQTdCO0FBQ0EsYUFBS0csUUFBTCxHQUFnQixJQUFJTCxNQUFNQyxRQUFWLEVBQWhCO0FBQ0EsYUFBS0ksUUFBTCxDQUFjSCxJQUFkLEdBQXFCLFVBQXJCOztBQUVBO0FBQ0EsYUFBS0ksS0FBTCxHQUFhLElBQUlOLE1BQU1PLEtBQVYsRUFBYjs7QUFFQTtBQUNBLGFBQUtELEtBQUwsQ0FBV0UsR0FBWCxDQUFlLEtBQUtULGNBQXBCO0FBQ0EsYUFBS08sS0FBTCxDQUFXRSxHQUFYLENBQWUsS0FBS0wsYUFBcEI7QUFDQSxhQUFLRyxLQUFMLENBQVdFLEdBQVgsQ0FBZSxLQUFLSixnQkFBcEI7QUFDQSxhQUFLRSxLQUFMLENBQVdFLEdBQVgsQ0FBZSxLQUFLSCxRQUFwQjtBQUNIOzs7OzRCQUVHSSxNLEVBQVFDLFMsRUFBVTtBQUNsQixnQkFBR0EsY0FBY0MsU0FBakIsRUFBNEJELFlBQVksS0FBS1AsYUFBakI7QUFDNUJPLHNCQUFVRixHQUFWLENBQWNDLE1BQWQ7QUFDSDs7O21DQUVVQSxNLEVBQU87QUFDZCxpQkFBS0osUUFBTCxDQUFjRyxHQUFkLENBQWtCQyxNQUFsQjtBQUNIOzs7K0JBRU1BLE0sRUFBTztBQUNWLGdCQUFHLE9BQU9BLE1BQVAsS0FBa0IsUUFBckIsRUFBOEI7QUFDMUIsb0JBQUlHLFVBQVVILE1BQWQ7QUFDQUEseUJBQVMsS0FBS1YsY0FBTCxDQUFvQmMsZUFBcEIsQ0FBb0NELE9BQXBDLENBQVQ7QUFDQSxvQkFBR0gsV0FBV0UsU0FBZCxFQUF5QkYsU0FBUyxLQUFLTixhQUFMLENBQW1CVSxlQUFuQixDQUFtQ0QsT0FBbkMsQ0FBVDtBQUN6QixvQkFBR0gsV0FBV0UsU0FBZCxFQUF5QjtBQUM1QjtBQUNELGlCQUFLWixjQUFMLENBQW9CZSxNQUFwQixDQUEyQkwsTUFBM0I7QUFDQSxpQkFBS04sYUFBTCxDQUFtQlcsTUFBbkIsQ0FBMEJMLE1BQTFCO0FBQ0g7Ozs7OztrQkFHVVosVSIsImZpbGUiOiIzMy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5jbGFzcyBDb250cm9sbGVyIHtcclxuICAgIGNvbnN0cnVjdG9yKHBhcmFtcyl7XHJcblxyXG4gICAgICAgIHRoaXMucGFyYW1zID0gcGFyYW1zO1xyXG5cclxuICAgICAgICAvLyBDb250YWluZXJzXHJcbiAgICAgICAgdGhpcy5pdGVtc0NvbnRhaW5lciA9IG5ldyBUSFJFRS5PYmplY3QzRCgpO1xyXG4gICAgICAgIHRoaXMuaXRlbXNDb250YWluZXIubmFtZSA9IFwiaXRlbXNDb250YWluZXJcIjtcclxuICAgICAgICB0aGlzLm1pc2NDb250YWluZXIgPSBuZXcgVEhSRUUuT2JqZWN0M0QoKTtcclxuICAgICAgICB0aGlzLm1pc2NDb250YWluZXIubmFtZSA9IFwibWlzY0NvbnRhaW5lclwiO1xyXG4gICAgICAgIHRoaXMuYW1iaWVudENvbnRhaW5lciA9IG5ldyBUSFJFRS5PYmplY3QzRCgpO1xyXG4gICAgICAgIHRoaXMuYW1iaWVudENvbnRhaW5lci5uYW1lID0gXCJhbWJpZW50Q29udGFpbmVyXCI7XHJcbiAgICAgICAgdGhpcy5kZWZhdWx0cyA9IG5ldyBUSFJFRS5PYmplY3QzRCgpO1xyXG4gICAgICAgIHRoaXMuZGVmYXVsdHMubmFtZSA9IFwiZGVmYXVsdHNcIjtcclxuXHJcbiAgICAgICAgLy8gU2NlbmVcclxuICAgICAgICB0aGlzLnNjZW5lID0gbmV3IFRIUkVFLlNjZW5lKCk7XHJcblxyXG4gICAgICAgIC8vIFNldHVwIHJlc3RcclxuICAgICAgICB0aGlzLnNjZW5lLmFkZCh0aGlzLml0ZW1zQ29udGFpbmVyKTtcclxuICAgICAgICB0aGlzLnNjZW5lLmFkZCh0aGlzLm1pc2NDb250YWluZXIpO1xyXG4gICAgICAgIHRoaXMuc2NlbmUuYWRkKHRoaXMuYW1iaWVudENvbnRhaW5lcik7XHJcbiAgICAgICAgdGhpcy5zY2VuZS5hZGQodGhpcy5kZWZhdWx0cyk7XHJcbiAgICB9XHJcblxyXG4gICAgQWRkKG9iamVjdCwgY29udGFpbmVyKXtcclxuICAgICAgICBpZihjb250YWluZXIgPT09IHVuZGVmaW5lZCkgY29udGFpbmVyID0gdGhpcy5taXNjQ29udGFpbmVyO1xyXG4gICAgICAgIGNvbnRhaW5lci5hZGQob2JqZWN0KTtcclxuICAgIH1cclxuXHJcbiAgICBBZGREZWZhdWx0KG9iamVjdCl7XHJcbiAgICAgICAgdGhpcy5kZWZhdWx0cy5hZGQob2JqZWN0KTtcclxuICAgIH1cclxuXHJcbiAgICBSZW1vdmUob2JqZWN0KXtcclxuICAgICAgICBpZih0eXBlb2Ygb2JqZWN0ID09PSAnc3RyaW5nJyl7XHJcbiAgICAgICAgICAgIHZhciBvYmpOYW1lID0gb2JqZWN0O1xyXG4gICAgICAgICAgICBvYmplY3QgPSB0aGlzLml0ZW1zQ29udGFpbmVyLmdldE9iamVjdEJ5TmFtZShvYmpOYW1lKTtcclxuICAgICAgICAgICAgaWYob2JqZWN0ID09PSB1bmRlZmluZWQpIG9iamVjdCA9IHRoaXMubWlzY0NvbnRhaW5lci5nZXRPYmplY3RCeU5hbWUob2JqTmFtZSk7XHJcbiAgICAgICAgICAgIGlmKG9iamVjdCA9PT0gdW5kZWZpbmVkKSByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuaXRlbXNDb250YWluZXIucmVtb3ZlKG9iamVjdCk7XHJcbiAgICAgICAgdGhpcy5taXNjQ29udGFpbmVyLnJlbW92ZShvYmplY3QpO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBDb250cm9sbGVyO1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9hcGkvc2NlbmUvQ29udHJvbGxlci5qcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///33\n");

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _CargoEntry = __webpack_require__(6);\n\nvar _CargoEntry2 = _interopRequireDefault(_CargoEntry);\n\nvar _BoxEntry = __webpack_require__(5);\n\nvar _BoxEntry2 = _interopRequireDefault(_BoxEntry);\n\nvar _CargoBoxView = __webpack_require__(16);\n\nvar _CargoBoxView2 = _interopRequireDefault(_CargoBoxView);\n\nvar _CargoView = __webpack_require__(17);\n\nvar _CargoView2 = _interopRequireDefault(_CargoView);\n\nvar _Utils = __webpack_require__(0);\n\nvar _Utils2 = _interopRequireDefault(_Utils);\n\nvar _Transition = __webpack_require__(57);\n\nvar _Asset = __webpack_require__(4);\n\nvar _Asset2 = _interopRequireDefault(_Asset);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar epsilon = Math.pow(2, -52);\n\nvar tempBox3 = new THREE.Box3();\nvar tempVec3 = new THREE.Vector3();\n\n/**\r\n * @typedef {Object} EntryInputViewParams\r\n * @property {import('../UX').default} ux\r\n * @property {SceneSetup} sceneSetup\r\n * @property {scaleFigure} scaleFigure\r\n */\n\nvar _scaleFigure = Symbol('scaleFigure');\nvar scaleFigure = {\n    man: 'man',\n    woman: 'woman',\n    none: 'none'\n};\n\n/** @type {EntryInputViewParams} */\nvar defaultParams = {\n    scaleFigure: scaleFigure.man\n};\n\nvar EntryInputView = function () {\n    /** @param {EntryInputViewParams} params */\n    function EntryInputView(params) {\n        _classCallCheck(this, EntryInputView);\n\n        this.params = _Utils2.default.AssignUndefined(params, defaultParams);\n        var scope = this;\n\n        this.view = new THREE.Object3D();\n        this.preview = new THREE.Object3D();\n        this.view.add(this.preview);\n\n        /** @type {Map<string, CargoView>} */\n        this.previewTypes = new Map();\n\n        var units = this.params.ux.params.units;\n        this.offsetX = 0;\n\n        // scale ref\n        var height = 71 * units;\n\n        var material = new THREE.MeshBasicMaterial({ color: 0x000000, transparent: true, side: THREE.DoubleSide });\n        _Asset2.default.SetTextureMap('scaleref-alphaMap.jpg', material, 'alphaMap').then(function (alphaMap) {\n            alphaMap.repeat.setX(.5);\n        });\n\n        var refMesh = new THREE.Mesh(new THREE.PlaneGeometry(height / 2, height, 1, 1), material);\n\n        this.offsetX = 60 * units;\n        refMesh.position.x = this.offsetX;\n\n        this.view.add(refMesh);\n        this.refMesh = refMesh;\n        this.scaleFigure = this.params.scaleFigure;\n\n        tempBox3.setFromObject(this.refMesh);\n        tempBox3.getSize(tempVec3);\n        this.offsetX -= tempVec3.x / 2;\n\n        var bkgMesh = new THREE.Mesh(new THREE.PlaneGeometry(height * 6, height * 1.8, 1, 1), new THREE.MeshBasicMaterial({ color: 0xffffff, depthWrite: false, depthFunc: THREE.NeverDepth, side: THREE.DoubleSide }));\n\n        bkgMesh.position.z = -2 * units;\n\n        this.view.add(bkgMesh);\n\n        this.rotate = false;\n\n        this.transition = new _Transition.Transition(this.view, this.view, .25);\n        this.slideIn = new _Transition.Slide('x', 1.2, 0);\n        this.slideIn.Init(this.transition);\n        this.slideOut = new _Transition.Slide('x', 0, 1.2);\n        this.slideOut.Init(this.transition);\n        /** @param {Slide} transitionController */\n        function onTransitionComplete(transitionController) {\n            if (transitionController === scope.slideOut) {\n                scope.Hide();\n            } else {\n                scope.rotate = true;\n            }\n        }\n        this.transition.On(_Transition.Transition.signals.complete, onTransitionComplete);\n\n        this.Preview();\n    }\n\n    /** @param {scaleFigure} value */\n\n\n    _createClass(EntryInputView, [{\n        key: 'Preview',\n\n\n        /**\r\n         * @param {CargoEntry} entry \r\n         */\n        value: function Preview(entry) {\n\n            var valid = entry;\n\n            if (valid) {\n                if (entry instanceof _BoxEntry2.default) valid = entry.dimensions.volume > epsilon;\n            }\n\n            if (!valid) {\n                this.End();\n                return false;\n            }\n\n            var c = this.preview.children;\n            while (c.length > 0) {\n                this.preview.remove(c[c.length - 1]);\n            }var units = this.params.ux.params.units;\n            var offsetX = this.offsetX;\n\n            if (entry instanceof _BoxEntry2.default) {\n                /** @type {CargoBoxView} */\n                var boxView = this.previewTypes.get(entry.type);\n                if (boxView) {\n                    boxView.entry = entry;\n                } else {\n                    boxView = new _CargoBoxView2.default(entry);\n                    this.previewTypes.set(entry.type, boxView);\n\n                    boxView.mesh.material = boxView.mesh.material.clone();\n                    boxView.mesh.material.depthWrite = false;\n                }\n\n                boxView.mesh.renderOrder = Number.MAX_SAFE_INTEGER - 10;\n                this.preview.add(boxView.view);\n\n                this.preview.position.x = -Math.max(entry.dimensions.width, entry.dimensions.length) / 2 + offsetX;\n                this.preview.position.y = entry.dimensions.height / 2 + tempBox3.min.y;\n            }\n\n            this.Start();\n        }\n    }, {\n        key: 'Show',\n        value: function Show() {\n            this.view.visible = true;\n        }\n    }, {\n        key: 'Start',\n        value: function Start() {\n            if (this.previewing === false) {\n                this.rotate = false;\n                this.transition.controller = this.slideIn;\n                this.transition.Start();\n            }\n            this.Show();\n        }\n    }, {\n        key: 'Hide',\n        value: function Hide() {\n            this.view.visible = false;\n        }\n    }, {\n        key: 'End',\n        value: function End() {\n            if (this.previewing === true) {\n                this.transition.controller = this.slideOut;\n                this.transition.Start();\n            }\n        }\n    }, {\n        key: 'Update',\n\n\n        /** @param {Number} now @param {Number} deltaTime */\n        value: function Update(now, deltaTime) {\n            if (this.previewing) {\n                if (this.rotate) this.preview.rotateY(-Math.PI / 10 * deltaTime / 1000);\n                this.transition.Update();\n            }\n        }\n    }, {\n        key: 'scaleFigure',\n        set: function set(value) {\n            this[_scaleFigure] = value;\n            var refMesh = this.refMesh;\n            if (refMesh instanceof THREE.Mesh) {\n                /** @type {THREE.Texture} */\n                var alphaMap = refMesh.material.alphaMap;\n                if (value === scaleFigure.man) {\n                    alphaMap.offset.setX(0);\n                } else {\n                    alphaMap.offset.setX(.5);\n                }\n            }\n        },\n        get: function get() {\n            return this[_scaleFigure];\n        }\n    }, {\n        key: 'previewing',\n        get: function get() {\n            return this.view.visible;\n        }\n    }], [{\n        key: 'scaleFigure',\n        get: function get() {\n            return scaleFigure;\n        }\n    }]);\n\n    return EntryInputView;\n}();\n\nexports.default = EntryInputView;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///34\n");

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar TextField = function () {\n    /**\r\n     * @param {string} label \r\n     * @param {string} content \r\n     */\n    function TextField(label, content) {\n        _classCallCheck(this, TextField);\n\n        /**\r\n         * @type {string}\r\n         */\n        this.label = label;\n        /**\r\n         * @type {string}\r\n         */\n        this.content = content;\n    }\n\n    /**\r\n     * @param {TextField} field \r\n     */\n\n\n    _createClass(TextField, [{\n        key: 'Copy',\n        value: function Copy(field) {\n            this.label = field.label;\n            this.content = field.content;\n        }\n    }, {\n        key: 'Clone',\n        value: function Clone() {\n            var field = new TextField(this.label, this.content);\n            return field;\n        }\n    }], [{\n        key: 'defaultContent',\n        get: function get() {\n            return '-';\n        }\n    }]);\n\n    return TextField;\n}();\n\nexports.default = TextField;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXBpL2NvbXBvbmVudHMvY29tbW9uL1RleHRGaWVsZC5qcz8zMzM2Il0sIm5hbWVzIjpbIlRleHRGaWVsZCIsImxhYmVsIiwiY29udGVudCIsImZpZWxkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0lBQU1BLFM7QUFDRjs7OztBQUlBLHVCQUFZQyxLQUFaLEVBQW1CQyxPQUFuQixFQUEyQjtBQUFBOztBQUN2Qjs7O0FBR0EsYUFBS0QsS0FBTCxHQUFhQSxLQUFiO0FBQ0E7OztBQUdBLGFBQUtDLE9BQUwsR0FBZUEsT0FBZjtBQUNIOztBQUVEOzs7Ozs7OzZCQUdLQyxLLEVBQU07QUFDUCxpQkFBS0YsS0FBTCxHQUFhRSxNQUFNRixLQUFuQjtBQUNBLGlCQUFLQyxPQUFMLEdBQWVDLE1BQU1ELE9BQXJCO0FBQ0g7OztnQ0FFTTtBQUNILGdCQUFJQyxRQUFRLElBQUlILFNBQUosQ0FBYyxLQUFLQyxLQUFuQixFQUEwQixLQUFLQyxPQUEvQixDQUFaO0FBQ0EsbUJBQU9DLEtBQVA7QUFDSDs7OzRCQUUwQjtBQUN2QixtQkFBTyxHQUFQO0FBQ0g7Ozs7OztrQkFHVUgsUyIsImZpbGUiOiIzNS5qcyIsInNvdXJjZXNDb250ZW50IjpbImNsYXNzIFRleHRGaWVsZCB7XHJcbiAgICAvKipcclxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBsYWJlbCBcclxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBjb250ZW50IFxyXG4gICAgICovXHJcbiAgICBjb25zdHJ1Y3RvcihsYWJlbCwgY29udGVudCl7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogQHR5cGUge3N0cmluZ31cclxuICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLmxhYmVsID0gbGFiZWw7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogQHR5cGUge3N0cmluZ31cclxuICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLmNvbnRlbnQgPSBjb250ZW50O1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQHBhcmFtIHtUZXh0RmllbGR9IGZpZWxkIFxyXG4gICAgICovXHJcbiAgICBDb3B5KGZpZWxkKXtcclxuICAgICAgICB0aGlzLmxhYmVsID0gZmllbGQubGFiZWw7XHJcbiAgICAgICAgdGhpcy5jb250ZW50ID0gZmllbGQuY29udGVudDtcclxuICAgIH1cclxuXHJcbiAgICBDbG9uZSgpe1xyXG4gICAgICAgIHZhciBmaWVsZCA9IG5ldyBUZXh0RmllbGQodGhpcy5sYWJlbCwgdGhpcy5jb250ZW50KTtcclxuICAgICAgICByZXR1cm4gZmllbGQ7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGdldCBkZWZhdWx0Q29udGVudCgpe1xyXG4gICAgICAgIHJldHVybiAnLSc7XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFRleHRGaWVsZDtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvYXBpL2NvbXBvbmVudHMvY29tbW9uL1RleHRGaWVsZC5qcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///35\n");

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Signaler2 = __webpack_require__(1);\n\nvar _Signaler3 = _interopRequireDefault(_Signaler2);\n\nvar _Utils = __webpack_require__(0);\n\nvar _Utils2 = _interopRequireDefault(_Utils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar tlWatchTimer, tlWatchEntries;\nfunction tlWatchUpdater() {\n    for (var i = 0; i < tlWatchEntries.length; i++) {\n        var entry = tlWatchEntries[i];\n        var newValue = entry.owner[entry.propertyName];\n        if (newValue !== entry.savedValue) {\n            entry.savedValue = newValue;\n            entry.tl.value = newValue;\n        }\n    };\n}\nfunction addTLWatch(tl, owner, propertyName) {\n    if (tlWatchTimer === undefined) {\n        tlWatchEntries = [];\n        tlWatchTimer = setInterval(tlWatchUpdater, 200);\n    }\n    tlWatchEntries.push({ tl: tl, owner: owner, propertyName: propertyName, savedValue: null });\n}\n\nvar _value = Symbol('value');\nvar typeofString = 'string';\n\nvar signals = {\n    change: 'change'\n};\n\nvar TextLabel = function (_Signaler) {\n    _inherits(TextLabel, _Signaler);\n\n    function TextLabel() {\n        _classCallCheck(this, TextLabel);\n\n        var _this = _possibleConstructorReturn(this, (TextLabel.__proto__ || Object.getPrototypeOf(TextLabel)).call(this));\n\n        _this[_value] = '';\n        return _this;\n    }\n\n    _createClass(TextLabel, [{\n        key: \"GetString\",\n        value: function GetString(v) {\n            return v.ToString ? v.ToString() : v.toString();\n        }\n    }, {\n        key: \"Watch\",\n        value: function Watch(owner, propertyName) {\n            addTLWatch(this, owner, propertyName);\n        }\n    }, {\n        key: \"value\",\n        get: function get() {\n            return this[_value];\n        }\n\n        /** @param {string} v */\n        ,\n        set: function set(v) {\n            if (v !== typeofString) v = this.GetString(v);\n\n            var changed = this[_value] !== v;\n            this[_value] = v;\n            if (changed) this.Dispatch(signals.change, this);\n        }\n    }], [{\n        key: \"signals\",\n        get: function get() {\n            return signals;\n        }\n    }]);\n\n    return TextLabel;\n}(_Signaler3.default);\n\nvar defaultGeometry = new THREE.PlaneGeometry(1, 1, 1, 1);\n\n/**\r\n * @typedef TLVParams\r\n * @property {string} font css 32px sans-serif\r\n * @property {string} textAlign start, end, left, right or center\r\n * @property {string} sidePadding px\r\n * @property {Number} fontColor css\r\n * @property {Number} backColor css\r\n * @property {Number} width px\r\n * @property {Number} height px\r\n */\n/** @type {TLVParams} */\nvar defaultParams = {\n    font: '32px sans-serif',\n    textAlign: 'center',\n    sidePadding: 16,\n    fontColor: 0x000000,\n    backColor: 0xffffff,\n    width: 256,\n    height: 64\n};\n\nvar TextLabelView = function () {\n\n    /** @param {TLVParams} params */\n    function TextLabelView(params) {\n        _classCallCheck(this, TextLabelView);\n\n        this.params = _Utils2.default.AssignUndefined(params, defaultParams);\n\n        var material = new THREE.MeshBasicMaterial({ color: 0xffffff, side: THREE.DoubleSide });\n        this.view = new THREE.Mesh(defaultGeometry, material);\n    }\n\n    /** @param {TextLabel} value */\n\n\n    _createClass(TextLabelView, [{\n        key: \"OnChange\",\n\n\n        /** @param {TextLabel} textLabel */\n        value: function OnChange(textLabel) {\n            var text = textLabel.value;\n            this.UpdateText(text);\n        }\n\n        /** @param {string} text */\n\n    }, {\n        key: \"UpdateText\",\n        value: function UpdateText(text) {\n            if (this.canvas2d === undefined) this.canvas2d = document.createElement('canvas');\n\n            this.canvas2d.width = this.params.width;\n            this.canvas2d.height = this.params.height;\n\n            var context2d = this.canvas2d.getContext('2d');\n            context2d.fillStyle = this.params.backColor;\n            context2d.fillRect(0, 0, this.params.width + 2, this.params.height + 2);\n            context2d.fillStyle = this.params.fontColor;\n            context2d.font = this.params.font;\n            context2d.textAlign = this.params.textAlign;\n            context2d.textBaseline = 'middle';\n\n            var x = this.params.textAlign === 'start' || this.params.textAlign === 'left' ? this.params.sidePadding : this.params.textAlign === 'end' || this.params.textAlign === 'right' ? this.params.width - this.params.sidePadding : this.params.width / 2;\n            context2d.fillText(text, x, this.params.height / 2);\n\n            //\n            var mesh = this.view;\n            /** @type {THREE.MeshBasicMaterial} */\n            var material = mesh.material;\n            if (!material.map) {\n                material.map = new THREE.CanvasTexture(this.canvas2d);\n                material.map.minFilter = THREE.LinearFilter;\n                material.map.anisotropy = 1.4;\n            } else {\n                material.map.image = this.canvas2d;\n            }\n            material.map.needsUpdate = true;\n        }\n    }, {\n        key: \"textLabel\",\n        set: function set(value) {\n            value.On(TextLabel.signals.change, this.OnChange.bind(this));\n        }\n    }]);\n\n    return TextLabelView;\n}();\n\nTextLabelView.Label = TextLabel;\n\nexports.default = TextLabelView;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///36\n");

/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _EntryInputView = __webpack_require__(34);\n\nvar _EntryInputView2 = _interopRequireDefault(_EntryInputView);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Constants = function () {\n    function Constants() {\n        _classCallCheck(this, Constants);\n    }\n\n    _createClass(Constants, null, [{\n        key: \"scaleRefFigure\",\n        get: function get() {\n            return _EntryInputView2.default.scaleFigure;\n        }\n    }]);\n\n    return Constants;\n}();\n\nexports.default = Constants;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXBpL0NvbnN0YW50cy5qcz81M2U4Il0sIm5hbWVzIjpbIkNvbnN0YW50cyIsIkVudHJ5SW5wdXRWaWV3Iiwic2NhbGVGaWd1cmUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7Ozs7Ozs7O0lBRU1BLFM7QUFDRix5QkFBYTtBQUFBO0FBRVo7Ozs7NEJBRTBCO0FBQUUsbUJBQU9DLHlCQUFlQyxXQUF0QjtBQUFvQzs7Ozs7O2tCQUd0REYsUyIsImZpbGUiOiIzNy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBFbnRyeUlucHV0VmlldyBmcm9tIFwiLi92aWV3L0VudHJ5SW5wdXRWaWV3XCI7XHJcblxyXG5jbGFzcyBDb25zdGFudHN7XHJcbiAgICBjb25zdHJ1Y3Rvcigpe1xyXG5cclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgZ2V0IHNjYWxlUmVmRmlndXJlKCl7IHJldHVybiBFbnRyeUlucHV0Vmlldy5zY2FsZUZpZ3VyZTsgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBDb25zdGFudHM7XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2FwaS9Db25zdGFudHMuanMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///37\n");

/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _UIUtils = __webpack_require__(27);\n\nif (window.dat && !window.dat.guiExtensions) {\n\n    // Disabled\n    var blockEvent = function blockEvent(event) {\n        event.stopPropagation();\n    };\n\n    window.dat.guiExtensions = true;\n\n    _UIUtils.Element.CreateCSS(['.tooltip .tooltiptext {', '    visibility: hidden;', '    position: absolute;', '    width: 120px;', '    background-color: #111;', '    color: #fff;', '    text-align: center;', '    padding: 2px 0;', '    border-radius: 2px;', '    z-index: 1;', '    opacity: 0;', '    transition: opacity .6s;', '}', '.tooltip-top {', '    bottom: 125%;', '    left: 50%;', '    margin-left: -60px;', '}', '.tooltip:hover .tooltiptext {', '    visibility: visible;', '    opacity: 1;', '}']);\n\n    var styles = {\n        datDisabled: 'color: #606060 !important; cursor: not-allowed !important;'\n    };\n\n    Object.defineProperty((window.dat || __webpack_require__(3).default).GUI.prototype, 'onGUIEvent', {\n        get: function get() {\n            if (!this._onGUIEvent) this._onGUIEvent = [];\n            return this._onGUIEvent;\n        }\n    });\n\n    // update all\n\n    (window.dat || __webpack_require__(3).default).GUI.prototype.updateAll = function () {\n        var gui = this;\n        for (var i in gui.__controllers) {\n            var controller = gui.__controllers[i];\n            controller.updateDisplay();\n        }\n\n        var folders = Object.values(gui.__folders);\n        for (i = 0; i < folders.length; i++) {\n            folders[i].updateAll();\n        }\n    };\n\n    // find\n\n    (window.dat || __webpack_require__(3).default).GUI.prototype.find = function (object, property) {\n        var gui = this,\n            controller,\n            i;\n\n        if (property) {\n            // 2 arguments\n            for (i = 0; i < gui.__controllers.length; i++) {\n                controller = gui.__controllers[i];\n                if (controller.object == object && controller.property == property) return controller;\n            }\n\n            var folders = Object.values(gui.__folders);\n            for (i = 0; i < folders.length; i++) {\n                controller = folders[i].find(object, property);\n                if (controller) return controller;\n            }\n        } else {\n            property = object; // 1 argument\n\n            var folderKeys = Object.keys(gui.__folders);\n            for (i = 0; i < folderKeys.length; i++) {\n                var folderName = folderKeys[i];\n                var folder = gui.__folders[folderName];\n                if (folderName === property) return folder;\n            }\n        }\n        return undefined;\n    };\n\n    // On open event\n    //if(_this.opening !== undefined) _this.opening = _this.closed; // chadiik\n    Object.defineProperty((window.dat || __webpack_require__(3).default).GUI.prototype, 'opening', {\n        get: function get() {\n            return !this.closed;\n        },\n\n        set: function set(value) {\n            for (var i = 0; i < this.onGUIEvent.length; i++) {\n                this.onGUIEvent[i](value ? 'open' : 'close');\n            }\n        }\n    });\n\n    Object.defineProperty((window.dat || __webpack_require__(3).default).controllers.Controller.prototype, \"disabled\", {\n        get: function get() {\n            return this.domElement.hasAttribute(\"disabled\");\n        },\n\n        set: function set(value) {\n            if (value) {\n                this.domElement.setAttribute(\"disabled\", \"disabled\");\n                this.domElement.addEventListener(\"click\", blockEvent, true);\n                _UIUtils.Element.AddStyle(this.domElement.parentElement.parentElement, styles.datDisabled);\n            } else {\n                this.domElement.removeAttribute(\"disabled\");\n                this.domElement.removeEventListener(\"click\", blockEvent, true);\n                _UIUtils.Element.RemoveStyle(this.domElement.parentElement.parentElement, styles.datDisabled);\n            }\n        },\n\n        enumerable: true\n    });\n\n    (window.dat || __webpack_require__(3).default).GUI.prototype.enable = function (object, property, value) {\n        var controller = this.find(object, property);\n        controller.disabled = !value;\n    };\n\n    // Tooltip\n\n    Object.defineProperty((window.dat || __webpack_require__(3).default).controllers.Controller.prototype, \"tooltip\", {\n        get: function get() {\n            return this._tooltip.innerHTML;\n        },\n\n        set: function set(value) {\n            if (value) {\n                if (this._tooltip === undefined) {\n                    this._tooltip = crel('span', { class: 'tooltiptext' });\n\n                    /**\r\n                     * @type {HTMLElement}\r\n                     */\n                    var container = this.domElement.parentElement.parentElement;\n                    container.classList.add('tooltip');\n                    container.appendChild(this._tooltip);\n                }\n                this._tooltip.innerHTML = value;\n            }\n        },\n\n        enumerable: true\n    });\n\n    (window.dat || __webpack_require__(3).default).GUI.prototype.setTooltip = function (object, property, value) {\n        var controller = this.find(object, property);\n        controller.tooltip = value;\n    };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///38\n");

/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _AFitTest = __webpack_require__(65);\n\nvar _AFitTest2 = _interopRequireDefault(_AFitTest);\n\nvar _Asset = __webpack_require__(4);\n\nvar _Asset2 = _interopRequireDefault(_Asset);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction delay(time, callback) {\n    setTimeout(callback, time);\n}\n\nvar debugGeometry = new THREE.BoxBufferGeometry(1, 1, 1, 1, 1, 1);\nvar debugMaterial = new THREE.MeshStandardMaterial({ color: 0xff7f00, transparent: true, opacity: .35 });\n_Asset2.default.SetTextureMap('checkers.jpg', debugMaterial, 'map').then(function (map) {\n    map.wrapS = map.wrapT = THREE.RepeatWrapping;\n});\nvar debugBox = new THREE.Mesh(debugGeometry, debugMaterial);\n\nvar tempVec = new THREE.Vector3();\n\nvar DebugBox = function () {\n    function DebugBox() {\n        _classCallCheck(this, DebugBox);\n    }\n\n    _createClass(DebugBox, null, [{\n        key: \"FromCenterSize\",\n\n\n        /**\r\n         * @param {THREE.Vector3} center \r\n         * @param {Number|THREE.Vector3} size \r\n         */\n        value: function FromCenterSize(center, size) {\n            var box = debugBox.clone();\n            box.position.copy(center);\n\n            if (size instanceof THREE.Vector3) box.scale.copy(size);else box.scale.set(size, size, size);\n\n            return box;\n        }\n\n        /**\r\n         * @param {THREE.Box3} box3 \r\n         */\n\n    }, {\n        key: \"FromBox3\",\n        value: function FromBox3(box3) {\n            var box = debugBox.clone();\n\n            box3.getCenter(tempVec);\n            box.position.copy(tempVec);\n            box3.getSize(tempVec);\n            box.scale.copy(tempVec);\n\n            return box;\n        }\n    }]);\n\n    return DebugBox;\n}();\n\n/**\r\n * DebugViz\r\n */\n\nvar alphaHexMask = 256 * 256 * 256;\n\n/** @type {THREE.Object3D} */\nvar view;\n\n/** @type {Map<string, *>} */\nvar debugObjects = new Map();\n\nvar tVec3 = new THREE.Vector3(),\n    tPos = new THREE.Vector3(),\n    tScale = new THREE.Vector3();\n\nvar DebugViz = function () {\n    function DebugViz() {\n        _classCallCheck(this, DebugViz);\n    }\n\n    _createClass(DebugViz, null, [{\n        key: \"SetViewParent\",\n\n\n        /**\r\n         * @param {THREE.Object3D} parent\r\n         */\n        value: function SetViewParent(parent) {\n            view = new THREE.Object3D();\n            view.name = 'DebugViz view';\n            console.log(view.name + ' created...');\n            view.renderOrder = Number.MAX_SAFE_INTEGER - 10;\n            parent.add(view);\n        }\n    }, {\n        key: \"DrawVolume\",\n\n\n        /**\r\n         * @param {Number} x center x * @param {Number} y center y * @param {Number} z center z * @param {Number} w * @param {Number} h * @param {Number} l\r\n         * @param {Number} [color] hex color\r\n         * @param {Number} [duration] in milliseconds\r\n         * @param {Boolean} [checkered] checkers map\r\n         */\n        value: function DrawVolume(x, y, z, w, h, l, color, duration, wireframe, checkered) {\n            tPos.set(x, y, z);\n            tScale.set(w, h, l);\n\n            /** @type {THREE.Mesh} */\n            var volume = debugBox.clone();\n            view.add(volume);\n\n            volume.position.copy(tPos);\n            volume.scale.copy(tScale);\n\n            if (color) {\n                /** @type {THREE.MeshStandardMaterial} */\n                var material = volume.material.clone();\n                volume.material = material;\n                material.color.setHex(color && 0xffffff);\n                if (wireframe === true) {\n                    material.wireframe = true;\n                } else {\n                    material.opacity = Math.floor(color / alphaHexMask) / 256;\n                    material.transparent = material.opacity > 0 && material.opacity < .99;\n                }\n\n                if (!checkered) {\n                    material.map = null;\n                } else {\n                    material.map.repeat.set(10, 10);\n                }\n            }\n\n            var uid = THREE.Math.generateUUID();\n            debugObjects.set(uid, volume);\n\n            if (duration > 0) {\n                delay(duration, function () {\n                    DebugViz.RemoveObjectByUID(uid);\n                });\n            }\n\n            return uid;\n        }\n\n        /**\r\n         * @param {string} uid \r\n         */\n\n    }, {\n        key: \"RemoveObjectByUID\",\n        value: function RemoveObjectByUID(uid) {\n            var object = debugObjects.get(uid);\n            if (object instanceof THREE.Object3D && object.parent) {\n                object.parent.remove(object);\n            }\n        }\n    }, {\n        key: \"ClearAll\",\n        value: function ClearAll() {\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = debugObjects.keys()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var uid = _step.value;\n\n                    DebugViz.RemoveObjectByUID(uid);\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n        }\n\n        /** @param {Boolean} visible */\n\n    }, {\n        key: \"SetPackingSpaceVisibility\",\n        value: function SetPackingSpaceVisibility(visible) {\n            Debug.app.view.packingSpaceView.view.visible = visible;\n        }\n    }, {\n        key: \"view\",\n        get: function get() {\n            return view;\n        }\n    }]);\n\n    return DebugViz;\n}();\n\n/**\r\n * DebugViz\r\n */\n\nvar Debug = function () {\n    function Debug() {\n        _classCallCheck(this, Debug);\n    }\n\n    _createClass(Debug, null, [{\n        key: \"MaterialEdit\",\n        value: function MaterialEdit(callback) {\n            var objects = Debug.app.view.packResultView.cargoViews;\n            objects.forEach(function (o) {\n                var material = o.mesh.material;\n                callback(material);\n                material.needsUpdate = true;\n            });\n        }\n    }, {\n        key: \"AFitTest\",\n        get: function get() {\n            return _AFitTest2.default;\n        }\n    }]);\n\n    return Debug;\n}();\n\nDebug.Box = DebugBox;\nDebug.Viz = DebugViz;\n\n/** @type {import('../../FreightPacker').default} */\nDebug.api;\n/** @type {import('../App').default} */\nDebug.app;\n\nexports.default = Debug;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///39\n");

/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Container = __webpack_require__(8);\n\nvar _Container2 = _interopRequireDefault(_Container);\n\nvar _ContainerView = __webpack_require__(41);\n\nvar _ContainerView2 = _interopRequireDefault(_ContainerView);\n\nvar _Logger = __webpack_require__(2);\n\nvar _Logger2 = _interopRequireDefault(_Logger);\n\nvar _ContainingVolume = __webpack_require__(11);\n\nvar _ContainingVolume2 = _interopRequireDefault(_ContainingVolume);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar typeofString = 'string';\n\nvar yRotation = new THREE.Matrix4().makeRotationY(-Math.PI / 2);\nvar tempMatrix4 = new THREE.Matrix4();\n\nvar PackingSpaceView = function () {\n    function PackingSpaceView() {\n        _classCallCheck(this, PackingSpaceView);\n\n        this.view = new THREE.Object3D();\n\n        /**\r\n         * @type {Array<ContainerView>}\r\n         */\n        this.containerViews = [];\n    }\n\n    /** \r\n     * @param {Container} container\r\n     */\n\n\n    _createClass(PackingSpaceView, [{\n        key: \"Add\",\n        value: function Add(container) {\n            var containerView = _ContainerView2.default.Request(container);\n            this.view.add(containerView.view);\n            this.containerViews.push(containerView);\n        }\n    }, {\n        key: \"Clear\",\n        value: function Clear() {\n            for (var i = 0; i < this.containerViews.length; i++) {\n                var cv = this.containerViews[i];\n                this.view.remove(cv.view);\n            }\n            this.containerViews.length = 0;\n        }\n\n        /**\r\n         * @param {string} containingVolumeUID \r\n         */\n\n    }, {\n        key: \"FindContainingVolume\",\n        value: function FindContainingVolume(containingVolumeUID) {\n            for (var iCView = 0; iCView < this.containerViews.length; iCView++) {\n                var volumes = this.containerViews[iCView].container.volumes;\n                for (var iCVolume = 0; iCVolume < volumes.length; iCVolume++) {\n                    if (volumes[iCVolume].uid === containingVolumeUID) {\n                        return volumes[iCVolume];\n                    }\n                }\n            }\n        }\n\n        /**\r\n         * @param {ContainingVolume} containingVolume \r\n         */\n\n    }, {\n        key: \"GetMatrix\",\n        value: function GetMatrix(containingVolume) {\n            if ((typeof containingVolume === \"undefined\" ? \"undefined\" : _typeof(containingVolume)) === typeofString) containingVolume = this.FindContainingVolume(containingVolume);\n            tempMatrix4.identity();\n            tempMatrix4.makeTranslation(containingVolume.position.x - containingVolume.dimensions.width / 2, containingVolume.position.y, containingVolume.position.z - containingVolume.dimensions.length / 2);\n            //tempMatrix4.premultiply(yRotation);\n            return tempMatrix4;\n        }\n    }]);\n\n    return PackingSpaceView;\n}();\n\nexports.default = PackingSpaceView;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXBpL3ZpZXcvUGFja2luZ1NwYWNlVmlldy5qcz82OTI4Il0sIm5hbWVzIjpbInR5cGVvZlN0cmluZyIsInlSb3RhdGlvbiIsIlRIUkVFIiwiTWF0cml4NCIsIm1ha2VSb3RhdGlvblkiLCJNYXRoIiwiUEkiLCJ0ZW1wTWF0cml4NCIsIlBhY2tpbmdTcGFjZVZpZXciLCJ2aWV3IiwiT2JqZWN0M0QiLCJjb250YWluZXJWaWV3cyIsImNvbnRhaW5lciIsImNvbnRhaW5lclZpZXciLCJDb250YWluZXJWaWV3IiwiUmVxdWVzdCIsImFkZCIsInB1c2giLCJpIiwibGVuZ3RoIiwiY3YiLCJyZW1vdmUiLCJjb250YWluaW5nVm9sdW1lVUlEIiwiaUNWaWV3Iiwidm9sdW1lcyIsImlDVm9sdW1lIiwidWlkIiwiY29udGFpbmluZ1ZvbHVtZSIsIkZpbmRDb250YWluaW5nVm9sdW1lIiwiaWRlbnRpdHkiLCJtYWtlVHJhbnNsYXRpb24iLCJwb3NpdGlvbiIsIngiLCJkaW1lbnNpb25zIiwid2lkdGgiLCJ5IiwieiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7Ozs7OztBQUVBLElBQU1BLGVBQWUsUUFBckI7O0FBRUEsSUFBSUMsWUFBWSxJQUFJQyxNQUFNQyxPQUFWLEdBQW9CQyxhQUFwQixDQUFrQyxDQUFDQyxLQUFLQyxFQUFOLEdBQVcsQ0FBN0MsQ0FBaEI7QUFDQSxJQUFJQyxjQUFjLElBQUlMLE1BQU1DLE9BQVYsRUFBbEI7O0lBRU1LLGdCO0FBQ0YsZ0NBQWE7QUFBQTs7QUFDVCxhQUFLQyxJQUFMLEdBQVksSUFBSVAsTUFBTVEsUUFBVixFQUFaOztBQUVBOzs7QUFHQSxhQUFLQyxjQUFMLEdBQXNCLEVBQXRCO0FBQ0g7O0FBRUQ7Ozs7Ozs7NEJBR0lDLFMsRUFBVTtBQUNWLGdCQUFJQyxnQkFBZ0JDLHdCQUFjQyxPQUFkLENBQXNCSCxTQUF0QixDQUFwQjtBQUNBLGlCQUFLSCxJQUFMLENBQVVPLEdBQVYsQ0FBY0gsY0FBY0osSUFBNUI7QUFDQSxpQkFBS0UsY0FBTCxDQUFvQk0sSUFBcEIsQ0FBeUJKLGFBQXpCO0FBQ0g7OztnQ0FFTTtBQUNILGlCQUFJLElBQUlLLElBQUksQ0FBWixFQUFlQSxJQUFJLEtBQUtQLGNBQUwsQ0FBb0JRLE1BQXZDLEVBQStDRCxHQUEvQyxFQUFtRDtBQUMvQyxvQkFBSUUsS0FBSyxLQUFLVCxjQUFMLENBQW9CTyxDQUFwQixDQUFUO0FBQ0EscUJBQUtULElBQUwsQ0FBVVksTUFBVixDQUFpQkQsR0FBR1gsSUFBcEI7QUFDSDtBQUNELGlCQUFLRSxjQUFMLENBQW9CUSxNQUFwQixHQUE2QixDQUE3QjtBQUNIOztBQUVEOzs7Ozs7NkNBR3FCRyxtQixFQUFvQjtBQUNyQyxpQkFBSSxJQUFJQyxTQUFTLENBQWpCLEVBQW9CQSxTQUFTLEtBQUtaLGNBQUwsQ0FBb0JRLE1BQWpELEVBQXlESSxRQUF6RCxFQUFrRTtBQUM5RCxvQkFBSUMsVUFBVSxLQUFLYixjQUFMLENBQW9CWSxNQUFwQixFQUE0QlgsU0FBNUIsQ0FBc0NZLE9BQXBEO0FBQ0EscUJBQUksSUFBSUMsV0FBVyxDQUFuQixFQUFzQkEsV0FBV0QsUUFBUUwsTUFBekMsRUFBaURNLFVBQWpELEVBQTREO0FBQ3hELHdCQUFHRCxRQUFRQyxRQUFSLEVBQWtCQyxHQUFsQixLQUEwQkosbUJBQTdCLEVBQWlEO0FBQzdDLCtCQUFPRSxRQUFRQyxRQUFSLENBQVA7QUFDSDtBQUNKO0FBQ0o7QUFDSjs7QUFFRDs7Ozs7O2tDQUdVRSxnQixFQUFpQjtBQUN2QixnQkFBRyxRQUFPQSxnQkFBUCx5Q0FBT0EsZ0JBQVAsT0FBNEIzQixZQUEvQixFQUE2QzJCLG1CQUFtQixLQUFLQyxvQkFBTCxDQUEwQkQsZ0JBQTFCLENBQW5CO0FBQzdDcEIsd0JBQVlzQixRQUFaO0FBQ0F0Qix3QkFBWXVCLGVBQVosQ0FBNEJILGlCQUFpQkksUUFBakIsQ0FBMEJDLENBQTFCLEdBQThCTCxpQkFBaUJNLFVBQWpCLENBQTRCQyxLQUE1QixHQUFvQyxDQUE5RixFQUFpR1AsaUJBQWlCSSxRQUFqQixDQUEwQkksQ0FBM0gsRUFBOEhSLGlCQUFpQkksUUFBakIsQ0FBMEJLLENBQTFCLEdBQThCVCxpQkFBaUJNLFVBQWpCLENBQTRCZCxNQUE1QixHQUFxQyxDQUFqTTtBQUNBO0FBQ0EsbUJBQU9aLFdBQVA7QUFDSDs7Ozs7O2tCQUdVQyxnQiIsImZpbGUiOiI0MC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDb250YWluZXIgZnJvbSBcIi4uL3BhY2tlci9jb250YWluZXIvQ29udGFpbmVyXCI7XHJcbmltcG9ydCBDb250YWluZXJWaWV3IGZyb20gXCIuL0NvbnRhaW5lclZpZXdcIjtcclxuaW1wb3J0IExvZ2dlciBmcm9tIFwiLi4vdXRpbHMvY2lrL0xvZ2dlclwiO1xyXG5pbXBvcnQgQ29udGFpbmluZ1ZvbHVtZSBmcm9tIFwiLi4vcGFja2VyL2NvbnRhaW5lci9Db250YWluaW5nVm9sdW1lXCI7XHJcblxyXG5jb25zdCB0eXBlb2ZTdHJpbmcgPSAnc3RyaW5nJztcclxuXHJcbnZhciB5Um90YXRpb24gPSBuZXcgVEhSRUUuTWF0cml4NCgpLm1ha2VSb3RhdGlvblkoLU1hdGguUEkgLyAyKTtcclxudmFyIHRlbXBNYXRyaXg0ID0gbmV3IFRIUkVFLk1hdHJpeDQoKTtcclxuXHJcbmNsYXNzIFBhY2tpbmdTcGFjZVZpZXd7XHJcbiAgICBjb25zdHJ1Y3Rvcigpe1xyXG4gICAgICAgIHRoaXMudmlldyA9IG5ldyBUSFJFRS5PYmplY3QzRCgpO1xyXG5cclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBAdHlwZSB7QXJyYXk8Q29udGFpbmVyVmlldz59XHJcbiAgICAgICAgICovXHJcbiAgICAgICAgdGhpcy5jb250YWluZXJWaWV3cyA9IFtdO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKiBcclxuICAgICAqIEBwYXJhbSB7Q29udGFpbmVyfSBjb250YWluZXJcclxuICAgICAqL1xyXG4gICAgQWRkKGNvbnRhaW5lcil7XHJcbiAgICAgICAgbGV0IGNvbnRhaW5lclZpZXcgPSBDb250YWluZXJWaWV3LlJlcXVlc3QoY29udGFpbmVyKTtcclxuICAgICAgICB0aGlzLnZpZXcuYWRkKGNvbnRhaW5lclZpZXcudmlldyk7XHJcbiAgICAgICAgdGhpcy5jb250YWluZXJWaWV3cy5wdXNoKGNvbnRhaW5lclZpZXcpO1xyXG4gICAgfVxyXG5cclxuICAgIENsZWFyKCl7XHJcbiAgICAgICAgZm9yKGxldCBpID0gMDsgaSA8IHRoaXMuY29udGFpbmVyVmlld3MubGVuZ3RoOyBpKyspe1xyXG4gICAgICAgICAgICBsZXQgY3YgPSB0aGlzLmNvbnRhaW5lclZpZXdzW2ldO1xyXG4gICAgICAgICAgICB0aGlzLnZpZXcucmVtb3ZlKGN2LnZpZXcpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmNvbnRhaW5lclZpZXdzLmxlbmd0aCA9IDA7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gY29udGFpbmluZ1ZvbHVtZVVJRCBcclxuICAgICAqL1xyXG4gICAgRmluZENvbnRhaW5pbmdWb2x1bWUoY29udGFpbmluZ1ZvbHVtZVVJRCl7XHJcbiAgICAgICAgZm9yKGxldCBpQ1ZpZXcgPSAwOyBpQ1ZpZXcgPCB0aGlzLmNvbnRhaW5lclZpZXdzLmxlbmd0aDsgaUNWaWV3Kyspe1xyXG4gICAgICAgICAgICBsZXQgdm9sdW1lcyA9IHRoaXMuY29udGFpbmVyVmlld3NbaUNWaWV3XS5jb250YWluZXIudm9sdW1lcztcclxuICAgICAgICAgICAgZm9yKGxldCBpQ1ZvbHVtZSA9IDA7IGlDVm9sdW1lIDwgdm9sdW1lcy5sZW5ndGg7IGlDVm9sdW1lKyspe1xyXG4gICAgICAgICAgICAgICAgaWYodm9sdW1lc1tpQ1ZvbHVtZV0udWlkID09PSBjb250YWluaW5nVm9sdW1lVUlEKXtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdm9sdW1lc1tpQ1ZvbHVtZV07XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBAcGFyYW0ge0NvbnRhaW5pbmdWb2x1bWV9IGNvbnRhaW5pbmdWb2x1bWUgXHJcbiAgICAgKi9cclxuICAgIEdldE1hdHJpeChjb250YWluaW5nVm9sdW1lKXtcclxuICAgICAgICBpZih0eXBlb2YgY29udGFpbmluZ1ZvbHVtZSA9PT0gdHlwZW9mU3RyaW5nKSBjb250YWluaW5nVm9sdW1lID0gdGhpcy5GaW5kQ29udGFpbmluZ1ZvbHVtZShjb250YWluaW5nVm9sdW1lKTtcclxuICAgICAgICB0ZW1wTWF0cml4NC5pZGVudGl0eSgpO1xyXG4gICAgICAgIHRlbXBNYXRyaXg0Lm1ha2VUcmFuc2xhdGlvbihjb250YWluaW5nVm9sdW1lLnBvc2l0aW9uLnggLSBjb250YWluaW5nVm9sdW1lLmRpbWVuc2lvbnMud2lkdGggLyAyLCBjb250YWluaW5nVm9sdW1lLnBvc2l0aW9uLnksIGNvbnRhaW5pbmdWb2x1bWUucG9zaXRpb24ueiAtIGNvbnRhaW5pbmdWb2x1bWUuZGltZW5zaW9ucy5sZW5ndGggLyAyKTtcclxuICAgICAgICAvL3RlbXBNYXRyaXg0LnByZW11bHRpcGx5KHlSb3RhdGlvbik7XHJcbiAgICAgICAgcmV0dXJuIHRlbXBNYXRyaXg0O1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBQYWNraW5nU3BhY2VWaWV3O1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9hcGkvdmlldy9QYWNraW5nU3BhY2VWaWV3LmpzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///40\n");

/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Container = __webpack_require__(8);\n\nvar _Container2 = _interopRequireDefault(_Container);\n\nvar _Asset = __webpack_require__(4);\n\nvar _Asset2 = _interopRequireDefault(_Asset);\n\nvar _Logger = __webpack_require__(2);\n\nvar _Logger2 = _interopRequireDefault(_Logger);\n\nvar _ContainingVolume = __webpack_require__(11);\n\nvar _ContainingVolume2 = _interopRequireDefault(_ContainingVolume);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ContainerBox =\n/** @param {THREE.Mesh} mesh */\nfunction ContainerBox(mesh) {\n    _classCallCheck(this, ContainerBox);\n\n    this.mesh = mesh;\n};\n\n/**\r\n * \r\n * @param {Container} container \r\n */\n\n\nfunction createContainerBoxes(container) {\n    /**\r\n     * @type {Map<ContainingVolume, ContainerBox>}\r\n     */\n    var boxes = new Map();\n\n    container.volumes.forEach(function (cv) {\n        var mesh = _Asset2.default.CreateMesh();\n\n        var extent = cv.dimensions.vec3;\n        mesh.scale.copy(extent);\n        mesh.position.y += extent.y / 2;\n\n        mesh.material = mesh.material.clone();\n        mesh.material.color.setHex(0xffaaaa);\n        mesh.material.transparent = true;\n        mesh.material.opacity = .2;\n        mesh.material.side = THREE.BackSide;\n        mesh.material.polygonOffset = true;\n        mesh.material.polygonOffsetFactor = 1;\n        mesh.material.polygonOffsetUnits = 1;\n\n        boxes.set(cv, new ContainerBox(mesh));\n    });\n\n    return boxes;\n}\n\nvar tempVec3 = new THREE.Vector3();\n\n/** @type {WeakMap<Container, ContainerView>} */\nvar views = new WeakMap();\n\nvar ContainerView = function () {\n    /**\r\n     * \r\n     * @param {Container} container \r\n     * @param {THREE.Object3D} view\r\n     */\n    function ContainerView(container, view) {\n        _classCallCheck(this, ContainerView);\n\n        // Store original dimensions\n        this.initializationBox3 = new THREE.Box3();\n        this.initializationBox3.setFromObject(view);\n\n        views.set(container, this);\n\n        this.container = container;\n        this.view = new THREE.Object3D();\n        this.view.add(view);\n\n        _Asset2.default.StandardSceneObject(this.view);\n        _Asset2.default.ColorTemplates('Containers').Apply(this.view);\n\n        this.containerBoxes = createContainerBoxes(container);\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n            for (var _iterator = this.containerBoxes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var _step$value = _slicedToArray(_step.value, 2),\n                    cv = _step$value[0],\n                    box = _step$value[1];\n\n                box.mesh.position.add(cv.position);\n                this.view.add(box.mesh);\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                }\n            } finally {\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n    }\n\n    //** @param {Input} input @param {Camera} cameraController */\n    /*InitSliderBoxes(input, cameraController, changeCallback, stopCallback){\r\n        for(var box of this.containerBoxes.values()){\r\n            box.UseInput(input, cameraController);\r\n            box.On(sliderSignals.change, changeCallback);\r\n            box.On(sliderSignals.stop, stopCallback);\r\n        }\r\n    }*/\n\n    /**\r\n     * @param {Boolean} visible\r\n     * @param {THREE.Vector3} [padding]\r\n     */\n\n\n    _createClass(ContainerView, [{\n        key: \"PlatformVisibility\",\n        value: function PlatformVisibility(visible, padding) {\n\n            if (visible && this.platformMesh === undefined) {\n\n                if (padding === undefined) padding = new THREE.Vector3(0, .01, 0);\n\n                this.initializationBox3.getSize(tempVec3);\n\n                var planeGeom = new THREE.BoxGeometry(tempVec3.x + padding.x * 2, padding.y, tempVec3.z + padding.z * 2, 1, 1, 1);\n                var planeMaterial = new _Asset2.default.CreateSolidMaterialMatte(_Asset2.default.ColorTemplates('Containers').Apply(0xffffff));\n                this.platformMesh = new THREE.Mesh(planeGeom, planeMaterial);\n                _Asset2.default.ReceiveShadow(this.platformMesh);\n\n                this.platformMesh.position.y = .001;\n                this.view.add(this.platformMesh);\n            }\n\n            this.platformMesh.visible = visible;\n        }\n\n        /**\r\n         * @param {Container} container\r\n         * @returns {ContainerView}\r\n         */\n\n    }], [{\n        key: \"Request\",\n        value: function Request(container) {\n            var view = views.get(container);\n            if (!view) {\n                var boxes = createContainerBoxes(container);\n                var object3d = new THREE.Object3D();\n                var _iteratorNormalCompletion2 = true;\n                var _didIteratorError2 = false;\n                var _iteratorError2 = undefined;\n\n                try {\n                    for (var _iterator2 = boxes[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                        var _step2$value = _slicedToArray(_step2.value, 2),\n                            cv = _step2$value[0],\n                            box = _step2$value[1];\n\n                        box.mesh.position.add(cv.position);\n                        object3d.add(box.mesh);\n                    }\n                } catch (err) {\n                    _didIteratorError2 = true;\n                    _iteratorError2 = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                            _iterator2.return();\n                        }\n                    } finally {\n                        if (_didIteratorError2) {\n                            throw _iteratorError2;\n                        }\n                    }\n                }\n\n                view = new ContainerView(container, object3d);\n                views.set(container, view);\n                _Logger2.default.Warn('View not found for:', container);\n            }\n            return view;\n        }\n    }]);\n\n    return ContainerView;\n}();\n\nexports.default = ContainerView;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///41\n");

/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _UIUtils = __webpack_require__(27);\n\nvar _Signaler2 = __webpack_require__(1);\n\nvar _Signaler3 = _interopRequireDefault(_Signaler2);\n\nvar _Asset = __webpack_require__(4);\n\nvar _Asset2 = _interopRequireDefault(_Asset);\n\nvar _Utils = __webpack_require__(0);\n\nvar _Utils2 = _interopRequireDefault(_Utils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n//#region crel.js\n//Copyright (C) 2012 Kory Nunn\n\n//Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\n//The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n//THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n/*\r\n\r\n    This code is not formatted for readability, but rather run-speed and to assist compilers.\r\n\r\n    However, the code's intention should be transparent.\r\n\r\n\r\n*/\n\nvar fn = 'function',\n    obj = 'object',\n    nodeType = 'nodeType',\n    textContent = 'textContent',\n    setAttribute = 'setAttribute',\n    attrMapString = 'attrMap',\n    isNodeString = 'isNode',\n    isElementString = 'isElement',\n    d = (typeof document === \"undefined\" ? \"undefined\" : _typeof(document)) === obj ? document : {},\n    isType = function isType(a, type) {\n    return (typeof a === \"undefined\" ? \"undefined\" : _typeof(a)) === type;\n},\n    isNode = (typeof Node === \"undefined\" ? \"undefined\" : _typeof(Node)) === fn ? function (object) {\n    return object instanceof Node;\n} :\n// in IE <= 8 Node is an object, obviously..\nfunction (object) {\n    return object && isType(object, obj) && nodeType in object && isType(object.ownerDocument, obj);\n},\n    isElement = function isElement(object) {\n    return crel[isNodeString](object) && object[nodeType] === 1;\n},\n    isArray = function isArray(a) {\n    return a instanceof Array;\n},\n    appendChild = function appendChild(element, child) {\n    if (isArray(child)) {\n        child.map(function (subChild) {\n            appendChild(element, subChild);\n        });\n        return;\n    }\n    if (!crel[isNodeString](child)) {\n        child = d.createTextNode(child);\n    }\n    element.appendChild(child);\n};\nfunction crel() {\n    var args = arguments,\n        //Note: assigned to a variable to assist compilers. Saves about 40 bytes in closure compiler. Has negligable effect on performance.\n    element = args[0],\n        child,\n        settings = args[1],\n        childIndex = 2,\n        argumentsLength = args.length,\n        attributeMap = crel[attrMapString];\n    element = crel[isElementString](element) ? element : d.createElement(element);\n    // shortcut\n    if (argumentsLength === 1) {\n        return element;\n    }\n    if (!isType(settings, obj) || crel[isNodeString](settings) || isArray(settings)) {\n        --childIndex;\n        settings = null;\n    }\n    // shortcut if there is only one child that is a string\n    if (argumentsLength - childIndex === 1 && isType(args[childIndex], 'string') && element[textContent] !== undefined) {\n        element[textContent] = args[childIndex];\n    } else {\n        for (; childIndex < argumentsLength; ++childIndex) {\n            child = args[childIndex];\n            if (child == null) {\n                continue;\n            }\n            if (isArray(child)) {\n                for (var i = 0; i < child.length; ++i) {\n                    appendChild(element, child[i]);\n                }\n            } else {\n                appendChild(element, child);\n            }\n        }\n    }\n    for (var key in settings) {\n        if (!attributeMap[key]) {\n            if (isType(settings[key], fn)) {\n                element[key] = settings[key];\n            } else {\n                element[setAttribute](key, settings[key]);\n            }\n        } else {\n            var attr = attributeMap[key];\n            if ((typeof attr === \"undefined\" ? \"undefined\" : _typeof(attr)) === fn) {\n                attr(element, settings[key]);\n            } else {\n                element[setAttribute](attr, settings[key]);\n            }\n        }\n    }\n    return element;\n}\n// Used for mapping one kind of attribute to the supported version of that in bad browsers.\ncrel[attrMapString] = {};\ncrel[isElementString] = isElement;\ncrel[isNodeString] = isNode;\nif (typeof Proxy !== 'undefined') {\n    crel.proxy = new Proxy(crel, {\n        get: function get(target, key) {\n            !(key in crel) && (crel[key] = crel.bind(null, key));\n            return crel[key];\n        }\n    });\n}\n//#endregion\n\nfunction numberFormatDefault(n) {\n    return n;\n}\n\nfunction numberFormat(n, d) {\n    if (n > Number.MAX_SAFE_INTEGER - 2) return 'MAX';\n    var nStr = Math.round(n) !== n ? n.toFixed(d) : n;\n    return nStr;\n}\n\n/** @typedef FormatParams @property {Function} nf number formatting function */\n/** @type {FormatParams} */\nvar defaultFormatParams = {\n    nf: numberFormatDefault\n};\n\n/** @param {string} str string with (at) symbol an argument placeholder @param {FormatParams} params @param {Array<*>} args */\nfunction format(str, params) {\n    params = _Utils2.default.AssignUndefined(params, defaultFormatParams);\n    var index = 0;\n\n    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        args[_key - 2] = arguments[_key];\n    }\n\n    while ((index = str.indexOf('@', index)) !== -1) {\n        if (str[index - 1] !== '\\\\') {\n            var a = args.shift();\n            if (typeof a === 'number') a = params.nf(a);\n            str = str.replace('@', a);\n        }\n        index += 1;\n    }\n    return str;\n}\n\n_UIUtils.Element.CreateCSS([]);\n\nvar signals = {\n    orthoViewSelected: 'orthoViewSelected'\n};\n\nvar orthoviews = {\n    home: 'home',\n    top: 'top',\n    front: 'front',\n    side: 'side'\n};\n\nvar DomUI = function (_Signaler) {\n    _inherits(DomUI, _Signaler);\n\n    /**\r\n     * \r\n     * @param {HTMLDivElement} containerDiv \r\n     * @param {UX} ux \r\n     */\n    function DomUI(containerDiv, ux) {\n        _classCallCheck(this, DomUI);\n\n        /** @type {HTMLDivElement} */\n        //this.domElement = crel('div', {style: 'display: inline-block; position: absolute; left: 0px; top: 0px; width: 100%; height: 100%;'});\n        //containerDiv.appendChild(this.domElement);\n        var _this = _possibleConstructorReturn(this, (DomUI.__proto__ || Object.getPrototypeOf(DomUI)).call(this));\n\n        _this.domElement = containerDiv;\n        _this.ux = ux;\n\n        /** @type {HTMLDivElement} */\n        //this.sideBar = crel('div', {style: 'float: right; right: 0px; width: 50%; height: 100%;'});\n        //this.domElement.appendChild(this.sideBar);\n        return _this;\n    }\n\n    _createClass(DomUI, [{\n        key: \"CreateOrthoViewsIcons\",\n        value: function CreateOrthoViewsIcons() {\n            var _this2 = this;\n\n            var scope = this;\n            var texturesPath = _Asset2.default.resources.texturesPath;\n\n            var icons = [{ url: 'orthoviews-map.png', type: orthoviews.home }, { url: 'orthoviews-map.png', type: orthoviews.top }, { url: 'orthoviews-map.png', type: orthoviews.front }, { url: 'orthoviews-map.png', type: orthoviews.side }];\n\n            /** @type {HTMLDivElement} */\n            //this.orthoViewsIcons = crel('div', {style: 'display: inline-block; float: right; right: 0px; width: 100%; height: 100%;'});\n            //this.sideBar.appendChild(this.orthoViewsIcons);\n\n            var dimensions = { x: 52, y: 52 };\n            var margin = { x: 16, y: 16 };\n            var padding = 8;\n\n            function dispatch(icon) {\n                scope.Dispatch(signals.orthoViewSelected, icon.type);\n            }\n\n            var _loop = function _loop(i) {\n                var icon = icons[i];\n\n                var top = i * (dimensions.y + padding) + margin.y;\n                var right = margin.x;\n                var imageURL = texturesPath + icon.url;\n                var style = format('cursor: pointer; display: block; float: right; position: absolute; background-size: 200%; background-position: 0% @%; background-image: url(\"@\"); width: @px; height: @px; right: @px; top: @px;', {\n                    nf: function nf(n) {\n                        return Math.floor(n);\n                    }\n                }, i / (icons.length - 1) * 100, imageURL, dimensions.x, dimensions.y, right, top);\n\n                /** @type {HTMLDivElement} */\n                var div = crel('div', { style: style });\n                _this2.domElement.appendChild(div);\n\n                div.onmouseover = function () {\n                    div.style.backgroundPositionX = '100%';\n                };\n\n                div.onmouseout = function () {\n                    div.style.backgroundPositionX = '0%';\n                };\n\n                div.onclick = function (e) {\n                    e.preventDefault();\n                    dispatch(icon);\n                };\n            };\n\n            for (var i = 0; i < icons.length; i++) {\n                _loop(i);\n            }\n        }\n    }], [{\n        key: \"signals\",\n        get: function get() {\n            return signals;\n        }\n    }, {\n        key: \"orthoviews\",\n        get: function get() {\n            return orthoviews;\n        }\n    }]);\n\n    return DomUI;\n}(_Signaler3.default);\n\nexports.default = DomUI;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///42\n");

/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Logger = __webpack_require__(2);\n\nvar _Logger2 = _interopRequireDefault(_Logger);\n\nvar _BoxEntry = __webpack_require__(5);\n\nvar _BoxEntry2 = _interopRequireDefault(_BoxEntry);\n\nvar _Dimensions = __webpack_require__(24);\n\nvar _Dimensions2 = _interopRequireDefault(_Dimensions);\n\nvar _LightDispatcher2 = __webpack_require__(9);\n\nvar _LightDispatcher3 = _interopRequireDefault(_LightDispatcher2);\n\nvar _App = __webpack_require__(10);\n\nvar _App2 = _interopRequireDefault(_App);\n\nvar _CargoList = __webpack_require__(28);\n\nvar _CargoList2 = _interopRequireDefault(_CargoList);\n\nvar _CargoBoxView = __webpack_require__(16);\n\nvar _CargoBoxView2 = _interopRequireDefault(_CargoBoxView);\n\nvar _Pool = __webpack_require__(23);\n\nvar _Pool2 = _interopRequireDefault(_Pool);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar epsilon = Math.pow(2, -52);\nvar numberType = 'number';\n\nvar _cargoList = Symbol('cargoList');\n\nfunction poolNewFN() {\n    return new _BoxEntry2.default();\n}\n/** @param {BoxEntry} boxEntry */\nfunction poolResetFN(boxEntry) {\n    return boxEntry;\n}\nvar boxEntryPool = new _Pool2.default(poolNewFN, poolResetFN);\n\nvar signals = {\n    show: 'show',\n    hide: 'hide',\n    insert: 'insert',\n    modify: 'modify',\n    remove: 'remove'\n};\n\n/** Renews entry: modify uid and color\r\n * @param {BoxEntry} boxEntry */\nfunction renewBoxEntry(boxEntry) {\n    boxEntry.SetUID();\n    boxEntry.Description('color', _CargoBoxView2.default.GetNextColor().getHex());\n}\n\n/**\r\n * @typedef {Object} CargoInputParams\r\n * @property {import('../UX').default} ux\r\n */\n\n/**\r\n * Cubic volumes entry\r\n */\n\nvar CargoInput = function (_LightDispatcher) {\n    _inherits(CargoInput, _LightDispatcher);\n\n    /**\r\n     * @param {CargoInputParams} params \r\n     */\n    function CargoInput(params) {\n        _classCallCheck(this, CargoInput);\n\n        var _this = _possibleConstructorReturn(this, (CargoInput.__proto__ || Object.getPrototypeOf(CargoInput)).call(this));\n\n        _this.params = params;\n        return _this;\n    }\n\n    /** @ignore ignore */\n\n\n    _createClass(CargoInput, [{\n        key: '_Bind',\n        value: function _Bind(value) {\n            /** @type {App} */\n            var app = value;\n\n            this[_cargoList] = app.packer.cargoList;\n        }\n\n        /** Creates a new BoxEntry, required for inputs. (Can be reused) */\n\n    }, {\n        key: 'CreateBoxEntry',\n        value: function CreateBoxEntry() {\n            var boxEntry = new _BoxEntry2.default();\n            renewBoxEntry(boxEntry);\n            return boxEntry;\n        }\n\n        /** @param {string} entryUID @returns {BoxEntry} a copy of the entry if it exists */\n\n    }, {\n        key: 'GetEntry',\n        value: function GetEntry(entryUID) {\n            /** @type {CargoList} */\n            var cargoList = this[_cargoList];\n            var entry = cargoList.GetEntry(entryUID);\n            var entryMirror = boxEntryPool.Request();\n            entryMirror.Copy(entry);\n            return entry;\n        }\n\n        /** @returns {Array<BoxEntry>} an array of copies of all entries */\n\n    }, {\n        key: 'GetEntries',\n        value: function GetEntries() {\n            /** @type {CargoList} */\n            var cargoList = this[_cargoList];\n            var entries = [];\n            cargoList.groups.forEach(function (value) {\n                var entryMirror = boxEntryPool.Request();\n                entryMirror.Copy(value.entry);\n                entries.push(entryMirror);\n            });\n\n            return entries;\n        }\n\n        /**\r\n         * Return BoxEntry objects to object pool (less memory usage)\r\n         * @param {BoxEntry | Array<BoxEntry>} objects \r\n         */\n\n    }, {\n        key: 'Recycle',\n        value: function Recycle(objects) {\n            if (objects instanceof Array) {\n                objects.forEach(function (object) {\n                    if (object instanceof _BoxEntry2.default) boxEntryPool.Return(object);\n                });\n            } else if (objects instanceof _BoxEntry2.default) {\n                boxEntryPool.Return(objects);\n            }\n        }\n\n        /** Shows/updates entry 3D display\r\n         * @param {BoxEntry} entry \r\n         * @returns {Boolean}\r\n         */\n\n    }, {\n        key: 'Show',\n        value: function Show(entry) {\n            if (_BoxEntry2.default.Assert(entry)) {\n                try {\n                    this.Dispatch(signals.show, entry);\n                    return true;\n                } catch (error) {\n                    _Logger2.default.Warn('Error in CargoInput.Show, error/entry:', error, entry);\n                }\n\n                return false;\n            }\n\n            _Logger2.default.Warn('BoxEntry.Assert failed in CargoInput.Show, entry:', entry);\n            return false;\n        }\n\n        /** Hides entry 3D display */\n\n    }, {\n        key: 'Hide',\n        value: function Hide() {\n            this.Dispatch(signals.hide);\n        }\n\n        /** Adds a new entry and obtain its uid\r\n         * @param {BoxEntry} entry\r\n         * @returns {Number|Boolean} uid or false if error\r\n         */\n\n    }, {\n        key: 'Add',\n        value: function Add(entry) {\n            if (_BoxEntry2.default.Assert(entry)) {\n\n                if (_Dimensions2.default.IsVolume(entry.dimensions.Abs()) === false) {\n                    _Logger2.default.Warn('CargoInput.Add, entry rejected, dimensions != Volume:', entry.dimensions);\n                    return false;\n                }\n\n                try {\n                    var commitedEntry = entry.Clone();\n                    var uid = commitedEntry.SetUID();\n\n                    renewBoxEntry(entry);\n\n                    this.Dispatch(signals.insert, commitedEntry);\n                    return uid;\n                } catch (error) {\n                    _Logger2.default.Warn('Error in CargoInput.Add, error/entry:', error, entry);\n                }\n\n                return false;\n            }\n\n            _Logger2.default.Warn('BoxEntry.Assert failed in CargoInput.Add, entry:', entry);\n            return false;\n        }\n\n        /** Modify an existing BoxEntry, referenced by its uid, using a modifed template\r\n         * @param {string} entryUID\r\n         * @param {BoxEntry} boxEntry\r\n         * @returns {Boolean} success\r\n         */\n\n    }, {\n        key: 'Modify',\n        value: function Modify(entryUID, boxEntry) {\n            var existing = this.GetEntry(entryUID);\n            if (!existing) {\n                _Logger2.default.Warn('CargoInput.Modify, entry not found for:', entryUID);\n                return false;\n            }\n\n            if (_BoxEntry2.default.Assert(boxEntry)) {\n\n                if (_Dimensions2.default.IsVolume(boxEntry.dimensions.Abs()) === false) {\n                    _Logger2.default.Warn('CargoInput.Modify, entry rejected, dimensions != Volume:', boxEntry);\n                    return false;\n                }\n\n                try {\n                    existing.Copy(boxEntry);\n\n                    this.Dispatch(signals.modify, existing);\n                    return true;\n                } catch (error) {\n                    _Logger2.default.Warn('Error in CargoInput.Modify, error/entry:', error, boxEntry);\n                }\n\n                return false;\n            }\n\n            _Logger2.default.Warn('BoxEntry.Assert failed in CargoInput.Modify, entry:', boxEntry);\n            return false;\n        }\n\n        /** Removes an existing box entry\r\n         * @param {string} entryUID\r\n         * @returns {Boolean} success\r\n         */\n\n    }, {\n        key: 'Remove',\n        value: function Remove(entryUID) {\n\n            /** @type {CargoList} */\n            var cargoList = this[_cargoList];\n            var existing = cargoList.GetEntry(entryUID);\n\n            if (!existing) {\n                _Logger2.default.Warn('CargoInput.Remove, entry not found for:', entryUID);\n                return false;\n            }\n\n            this.Dispatch(signals.remove, existing);\n            return true;\n        }\n\n        /** Enumeration of dispatched types */\n\n    }], [{\n        key: 'signals',\n        get: function get() {\n            return signals;\n        }\n    }]);\n\n    return CargoInput;\n}(_LightDispatcher3.default);\n\nCargoInput.BoxEntry = _BoxEntry2.default;\n\nexports.default = CargoInput;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///43\n");

/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Container = __webpack_require__(8);\n\nvar _Container2 = _interopRequireDefault(_Container);\n\nvar _PackingSpace = __webpack_require__(29);\n\nvar _PackingSpace2 = _interopRequireDefault(_PackingSpace);\n\nvar _ContainerView = __webpack_require__(41);\n\nvar _ContainerView2 = _interopRequireDefault(_ContainerView);\n\nvar _Asset = __webpack_require__(4);\n\nvar _Asset2 = _interopRequireDefault(_Asset);\n\nvar _LightDispatcher2 = __webpack_require__(9);\n\nvar _LightDispatcher3 = _interopRequireDefault(_LightDispatcher2);\n\nvar _Logger = __webpack_require__(2);\n\nvar _Logger2 = _interopRequireDefault(_Logger);\n\nvar _ContainingVolume = __webpack_require__(11);\n\nvar _ContainingVolume2 = _interopRequireDefault(_ContainingVolume);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\r\n * @typedef PackingSpaceJSON\r\n * @property {*} jsonObject.view json data\r\n * @property {Container} jsonObject.container json data\r\n */\n\nvar signals = {\n    containerLoaded: 'containerLoaded',\n    sliderValueChange: 'sliderValueChange',\n    sliderValueStop: 'sliderValueStop'\n};\n\n/**\r\n * @typedef {Object} PackingSpaceInputParams\r\n * @property {import('../UX').default} ux\r\n */\n\n/** @param {Container} container @param {THREE.Object3D} model */\nfunction createContainerView(container, model, units) {\n    var containerView = void 0;\n    if (model) {\n        containerView = new _ContainerView2.default(container, model);\n    } else {\n        containerView = _ContainerView2.default.Request(container);\n    }\n\n    var padding = 60 * units;\n    var thickness = 2 * units;\n    containerView.PlatformVisibility(true, new THREE.Vector3(padding, thickness, padding));\n}\n\nvar PackingSpaceInput = function (_LightDispatcher) {\n    _inherits(PackingSpaceInput, _LightDispatcher);\n\n    /**\r\n     * @param {PackingSpaceInputParams} params \r\n     */\n    function PackingSpaceInput(params) {\n        _classCallCheck(this, PackingSpaceInput);\n\n        var _this = _possibleConstructorReturn(this, (PackingSpaceInput.__proto__ || Object.getPrototypeOf(PackingSpaceInput)).call(this));\n\n        _this.params = params;\n\n        _this.packingSpace = new _PackingSpace2.default();\n        return _this;\n    }\n\n    /** @ignore ignore */\n\n\n    _createClass(PackingSpaceInput, [{\n        key: \"_Bind\",\n        value: function _Bind(value) {\n            /** @type {App} */\n            var app = value;\n        }\n\n        /**\r\n         * Creates a dummy container, get an uid for later changes (or false on error)\r\n         * @param {Number} width\r\n         * @param {Number} length\r\n         * @param {Number} height\r\n         * @param {Number} weightCapacity\r\n         * @returns {Number|Boolean} uid or false if error\r\n         */\n\n    }, {\n        key: \"FromInput\",\n        value: function FromInput(width, length, height, weightCapacity) {\n            var container = new _Container2.default();\n\n            var containingVolume = new _ContainingVolume2.default(container);\n            containingVolume.dimensions.Set(width, length, height);\n            containingVolume.weightCapacity = weightCapacity;\n\n            container.Add(containingVolume);\n\n            var units = this.params.ux.params.units;\n            createContainerView(container, null, units);\n\n            this.packingSpace.AddContainer(container);\n\n            this.Dispatch(signals.containerLoaded, container);\n            return container.uid;\n        }\n\n        /**\r\n         * Load packing config, get an uid for later changes (or false on error)\r\n         * @param {PackingSpaceJSON} jsonObject \r\n         * @returns {Number|Boolean} uid or false if error\r\n         */\n\n    }, {\n        key: \"Load\",\n        value: function Load(jsonObject) {\n\n            /** @type {PackingSpaceJSON} jsonObject */\n            var data = void 0;\n            try {\n                data = typeof jsonObject === 'string' ? JSON.parse(jsonObject) : jsonObject;\n            } catch (error) {\n                _Logger2.default.Warn('Error in PackingSpaceInput.Load, error/jsonObject:', error, jsonObject);\n                return false;\n            }\n\n            if (data.container) {\n                var container = void 0;\n                try {\n                    container = _Container2.default.FromJSON(data.container);\n                } catch (error) {\n                    _Logger2.default.Warn('Error in PackingSpaceInput.Load, error/jsonObject.container:', error, data.container);\n                    return false;\n                }\n\n                if (!container.uid) container.SetUID();\n                var uid = container.uid;\n\n                var model = void 0;\n                if (data.view) {\n                    try {\n                        model = _Asset2.default.FromJSON(data.view);\n                    } catch (error) {\n                        _Logger2.default.Warn('Error in PackingSpaceInput.Load, error/jsonObject.view:', error, data.view);\n                        return false;\n                    }\n                }\n\n                var units = this.params.ux.params.units;\n                createContainerView(container, model, units);\n\n                this.packingSpace.AddContainer(container);\n\n                this.Dispatch(signals.containerLoaded, container);\n                return uid;\n            }\n\n            return false;\n        }\n\n        /** Enumeration of dispatched types */\n\n    }], [{\n        key: \"signals\",\n        get: function get() {\n            return signals;\n        }\n    }]);\n\n    return PackingSpaceInput;\n}(_LightDispatcher3.default);\n\nexports.default = PackingSpaceInput;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXBpL2NvbXBvbmVudHMvUGFja2luZ1NwYWNlSW5wdXQuanM/ZDgzYyJdLCJuYW1lcyI6WyJzaWduYWxzIiwiY29udGFpbmVyTG9hZGVkIiwic2xpZGVyVmFsdWVDaGFuZ2UiLCJzbGlkZXJWYWx1ZVN0b3AiLCJjcmVhdGVDb250YWluZXJWaWV3IiwiY29udGFpbmVyIiwibW9kZWwiLCJ1bml0cyIsImNvbnRhaW5lclZpZXciLCJDb250YWluZXJWaWV3IiwiUmVxdWVzdCIsInBhZGRpbmciLCJ0aGlja25lc3MiLCJQbGF0Zm9ybVZpc2liaWxpdHkiLCJUSFJFRSIsIlZlY3RvcjMiLCJQYWNraW5nU3BhY2VJbnB1dCIsInBhcmFtcyIsInBhY2tpbmdTcGFjZSIsIlBhY2tpbmdTcGFjZSIsInZhbHVlIiwiYXBwIiwid2lkdGgiLCJsZW5ndGgiLCJoZWlnaHQiLCJ3ZWlnaHRDYXBhY2l0eSIsIkNvbnRhaW5lciIsImNvbnRhaW5pbmdWb2x1bWUiLCJDb250YWluaW5nVm9sdW1lIiwiZGltZW5zaW9ucyIsIlNldCIsIkFkZCIsInV4IiwiQWRkQ29udGFpbmVyIiwiRGlzcGF0Y2giLCJ1aWQiLCJqc29uT2JqZWN0IiwiZGF0YSIsIkpTT04iLCJwYXJzZSIsImVycm9yIiwiTG9nZ2VyIiwiV2FybiIsIkZyb21KU09OIiwiU2V0VUlEIiwidmlldyIsIkFzc2V0IiwiTGlnaHREaXNwYXRjaGVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7Ozs7Ozs7Ozs7QUFFQTs7Ozs7O0FBTUEsSUFBTUEsVUFBVTtBQUNaQyxxQkFBaUIsaUJBREw7QUFFWkMsdUJBQW1CLG1CQUZQO0FBR1pDLHFCQUFpQjtBQUhMLENBQWhCOztBQU1BOzs7OztBQUtBO0FBQ0EsU0FBU0MsbUJBQVQsQ0FBNkJDLFNBQTdCLEVBQXdDQyxLQUF4QyxFQUErQ0MsS0FBL0MsRUFBcUQ7QUFDakQsUUFBSUMsc0JBQUo7QUFDQSxRQUFHRixLQUFILEVBQVM7QUFDTEUsd0JBQWdCLElBQUlDLHVCQUFKLENBQWtCSixTQUFsQixFQUE2QkMsS0FBN0IsQ0FBaEI7QUFDSCxLQUZELE1BR0k7QUFDQUUsd0JBQWdCQyx3QkFBY0MsT0FBZCxDQUFzQkwsU0FBdEIsQ0FBaEI7QUFDSDs7QUFFRCxRQUFJTSxVQUFVLEtBQUtKLEtBQW5CO0FBQ0EsUUFBSUssWUFBWSxJQUFJTCxLQUFwQjtBQUNBQyxrQkFBY0ssa0JBQWQsQ0FBaUMsSUFBakMsRUFBdUMsSUFBSUMsTUFBTUMsT0FBVixDQUFrQkosT0FBbEIsRUFBMkJDLFNBQTNCLEVBQXNDRCxPQUF0QyxDQUF2QztBQUNIOztJQUVLSyxpQjs7O0FBQ0Y7OztBQUdBLCtCQUFZQyxNQUFaLEVBQW1CO0FBQUE7O0FBQUE7O0FBR2YsY0FBS0EsTUFBTCxHQUFjQSxNQUFkOztBQUVBLGNBQUtDLFlBQUwsR0FBb0IsSUFBSUMsc0JBQUosRUFBcEI7QUFMZTtBQU1sQjs7QUFFRDs7Ozs7OEJBQ01DLEssRUFBTTtBQUNSO0FBQ0EsZ0JBQUlDLE1BQU1ELEtBQVY7QUFDSDs7QUFFRDs7Ozs7Ozs7Ozs7a0NBUVVFLEssRUFBT0MsTSxFQUFRQyxNLEVBQVFDLGMsRUFBZTtBQUM1QyxnQkFBSXBCLFlBQVksSUFBSXFCLG1CQUFKLEVBQWhCOztBQUVBLGdCQUFJQyxtQkFBbUIsSUFBSUMsMEJBQUosQ0FBcUJ2QixTQUFyQixDQUF2QjtBQUNJc0IsNkJBQWlCRSxVQUFqQixDQUE0QkMsR0FBNUIsQ0FBZ0NSLEtBQWhDLEVBQXVDQyxNQUF2QyxFQUErQ0MsTUFBL0M7QUFDQUcsNkJBQWlCRixjQUFqQixHQUFrQ0EsY0FBbEM7O0FBRUpwQixzQkFBVTBCLEdBQVYsQ0FBY0osZ0JBQWQ7O0FBRUEsZ0JBQUlwQixRQUFRLEtBQUtVLE1BQUwsQ0FBWWUsRUFBWixDQUFlZixNQUFmLENBQXNCVixLQUFsQztBQUNBSCxnQ0FBb0JDLFNBQXBCLEVBQStCLElBQS9CLEVBQXFDRSxLQUFyQzs7QUFFQSxpQkFBS1csWUFBTCxDQUFrQmUsWUFBbEIsQ0FBK0I1QixTQUEvQjs7QUFFQSxpQkFBSzZCLFFBQUwsQ0FBY2xDLFFBQVFDLGVBQXRCLEVBQXVDSSxTQUF2QztBQUNBLG1CQUFPQSxVQUFVOEIsR0FBakI7QUFDSDs7QUFFRDs7Ozs7Ozs7NkJBS0tDLFUsRUFBVzs7QUFFWjtBQUNBLGdCQUFJQyxhQUFKO0FBQ0EsZ0JBQUc7QUFDQ0EsdUJBQU8sT0FBT0QsVUFBUCxLQUFzQixRQUF0QixHQUFpQ0UsS0FBS0MsS0FBTCxDQUFXSCxVQUFYLENBQWpDLEdBQTBEQSxVQUFqRTtBQUNILGFBRkQsQ0FHQSxPQUFNSSxLQUFOLEVBQVk7QUFDUkMsaUNBQU9DLElBQVAsQ0FBWSxvREFBWixFQUFrRUYsS0FBbEUsRUFBeUVKLFVBQXpFO0FBQ0EsdUJBQU8sS0FBUDtBQUNIOztBQUVELGdCQUFHQyxLQUFLaEMsU0FBUixFQUFrQjtBQUNkLG9CQUFJQSxrQkFBSjtBQUNBLG9CQUFHO0FBQ0NBLGdDQUFZcUIsb0JBQVVpQixRQUFWLENBQW1CTixLQUFLaEMsU0FBeEIsQ0FBWjtBQUNILGlCQUZELENBR0EsT0FBTW1DLEtBQU4sRUFBWTtBQUNSQyxxQ0FBT0MsSUFBUCxDQUFZLDhEQUFaLEVBQTRFRixLQUE1RSxFQUFtRkgsS0FBS2hDLFNBQXhGO0FBQ0EsMkJBQU8sS0FBUDtBQUNIOztBQUVELG9CQUFHLENBQUNBLFVBQVU4QixHQUFkLEVBQW1COUIsVUFBVXVDLE1BQVY7QUFDbkIsb0JBQUlULE1BQU05QixVQUFVOEIsR0FBcEI7O0FBRUEsb0JBQUk3QixjQUFKO0FBQ0Esb0JBQUcrQixLQUFLUSxJQUFSLEVBQWE7QUFDVCx3QkFBRztBQUNDdkMsZ0NBQVF3QyxnQkFBTUgsUUFBTixDQUFlTixLQUFLUSxJQUFwQixDQUFSO0FBQ0gscUJBRkQsQ0FHQSxPQUFNTCxLQUFOLEVBQVk7QUFDUkMseUNBQU9DLElBQVAsQ0FBWSx5REFBWixFQUF1RUYsS0FBdkUsRUFBOEVILEtBQUtRLElBQW5GO0FBQ0EsK0JBQU8sS0FBUDtBQUNIO0FBQ0o7O0FBRUQsb0JBQUl0QyxRQUFRLEtBQUtVLE1BQUwsQ0FBWWUsRUFBWixDQUFlZixNQUFmLENBQXNCVixLQUFsQztBQUNBSCxvQ0FBb0JDLFNBQXBCLEVBQStCQyxLQUEvQixFQUFzQ0MsS0FBdEM7O0FBRUEscUJBQUtXLFlBQUwsQ0FBa0JlLFlBQWxCLENBQStCNUIsU0FBL0I7O0FBRUEscUJBQUs2QixRQUFMLENBQWNsQyxRQUFRQyxlQUF0QixFQUF1Q0ksU0FBdkM7QUFDQSx1QkFBTzhCLEdBQVA7QUFDSDs7QUFFRCxtQkFBTyxLQUFQO0FBQ0g7O0FBRUQ7Ozs7NEJBQ29CO0FBQ2hCLG1CQUFPbkMsT0FBUDtBQUNIOzs7O0VBcEcyQitDLHlCOztrQkF3R2pCL0IsaUIiLCJmaWxlIjoiNDQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ29udGFpbmVyIGZyb20gXCIuLi9wYWNrZXIvY29udGFpbmVyL0NvbnRhaW5lclwiO1xyXG5pbXBvcnQgUGFja2luZ1NwYWNlIGZyb20gXCIuLi9wYWNrZXIvUGFja2luZ1NwYWNlXCI7XHJcbmltcG9ydCBDb250YWluZXJWaWV3IGZyb20gXCIuLi92aWV3L0NvbnRhaW5lclZpZXdcIjtcclxuaW1wb3J0IEFzc2V0IGZyb20gXCIuL2Fzc2V0cy9Bc3NldFwiO1xyXG5pbXBvcnQgTGlnaHREaXNwYXRjaGVyIGZyb20gXCIuL0xpZ2h0RGlzcGF0Y2hlclwiO1xyXG5pbXBvcnQgTG9nZ2VyIGZyb20gXCIuLi91dGlscy9jaWsvTG9nZ2VyXCI7XHJcbmltcG9ydCBDb250YWluaW5nVm9sdW1lIGZyb20gXCIuLi9wYWNrZXIvY29udGFpbmVyL0NvbnRhaW5pbmdWb2x1bWVcIjtcclxuXHJcbi8qKlxyXG4gKiBAdHlwZWRlZiBQYWNraW5nU3BhY2VKU09OXHJcbiAqIEBwcm9wZXJ0eSB7Kn0ganNvbk9iamVjdC52aWV3IGpzb24gZGF0YVxyXG4gKiBAcHJvcGVydHkge0NvbnRhaW5lcn0ganNvbk9iamVjdC5jb250YWluZXIganNvbiBkYXRhXHJcbiAqL1xyXG5cclxuY29uc3Qgc2lnbmFscyA9IHtcclxuICAgIGNvbnRhaW5lckxvYWRlZDogJ2NvbnRhaW5lckxvYWRlZCcsXHJcbiAgICBzbGlkZXJWYWx1ZUNoYW5nZTogJ3NsaWRlclZhbHVlQ2hhbmdlJyxcclxuICAgIHNsaWRlclZhbHVlU3RvcDogJ3NsaWRlclZhbHVlU3RvcCdcclxufTtcclxuXHJcbi8qKlxyXG4gKiBAdHlwZWRlZiB7T2JqZWN0fSBQYWNraW5nU3BhY2VJbnB1dFBhcmFtc1xyXG4gKiBAcHJvcGVydHkge2ltcG9ydCgnLi4vVVgnKS5kZWZhdWx0fSB1eFxyXG4gKi9cclxuXHJcbi8qKiBAcGFyYW0ge0NvbnRhaW5lcn0gY29udGFpbmVyIEBwYXJhbSB7VEhSRUUuT2JqZWN0M0R9IG1vZGVsICovXHJcbmZ1bmN0aW9uIGNyZWF0ZUNvbnRhaW5lclZpZXcoY29udGFpbmVyLCBtb2RlbCwgdW5pdHMpe1xyXG4gICAgbGV0IGNvbnRhaW5lclZpZXc7XHJcbiAgICBpZihtb2RlbCl7XHJcbiAgICAgICAgY29udGFpbmVyVmlldyA9IG5ldyBDb250YWluZXJWaWV3KGNvbnRhaW5lciwgbW9kZWwpO1xyXG4gICAgfVxyXG4gICAgZWxzZXtcclxuICAgICAgICBjb250YWluZXJWaWV3ID0gQ29udGFpbmVyVmlldy5SZXF1ZXN0KGNvbnRhaW5lcik7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIGxldCBwYWRkaW5nID0gNjAgKiB1bml0cztcclxuICAgIGxldCB0aGlja25lc3MgPSAyICogdW5pdHM7XHJcbiAgICBjb250YWluZXJWaWV3LlBsYXRmb3JtVmlzaWJpbGl0eSh0cnVlLCBuZXcgVEhSRUUuVmVjdG9yMyhwYWRkaW5nLCB0aGlja25lc3MsIHBhZGRpbmcpKTtcclxufVxyXG5cclxuY2xhc3MgUGFja2luZ1NwYWNlSW5wdXQgZXh0ZW5kcyBMaWdodERpc3BhdGNoZXIge1xyXG4gICAgLyoqXHJcbiAgICAgKiBAcGFyYW0ge1BhY2tpbmdTcGFjZUlucHV0UGFyYW1zfSBwYXJhbXMgXHJcbiAgICAgKi9cclxuICAgIGNvbnN0cnVjdG9yKHBhcmFtcyl7XHJcbiAgICAgICAgc3VwZXIoKTtcclxuXHJcbiAgICAgICAgdGhpcy5wYXJhbXMgPSBwYXJhbXM7XHJcblxyXG4gICAgICAgIHRoaXMucGFja2luZ1NwYWNlID0gbmV3IFBhY2tpbmdTcGFjZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKiBAaWdub3JlIGlnbm9yZSAqL1xyXG4gICAgX0JpbmQodmFsdWUpe1xyXG4gICAgICAgIC8qKiBAdHlwZSB7QXBwfSAqL1xyXG4gICAgICAgIGxldCBhcHAgPSB2YWx1ZTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIENyZWF0ZXMgYSBkdW1teSBjb250YWluZXIsIGdldCBhbiB1aWQgZm9yIGxhdGVyIGNoYW5nZXMgKG9yIGZhbHNlIG9uIGVycm9yKVxyXG4gICAgICogQHBhcmFtIHtOdW1iZXJ9IHdpZHRoXHJcbiAgICAgKiBAcGFyYW0ge051bWJlcn0gbGVuZ3RoXHJcbiAgICAgKiBAcGFyYW0ge051bWJlcn0gaGVpZ2h0XHJcbiAgICAgKiBAcGFyYW0ge051bWJlcn0gd2VpZ2h0Q2FwYWNpdHlcclxuICAgICAqIEByZXR1cm5zIHtOdW1iZXJ8Qm9vbGVhbn0gdWlkIG9yIGZhbHNlIGlmIGVycm9yXHJcbiAgICAgKi9cclxuICAgIEZyb21JbnB1dCh3aWR0aCwgbGVuZ3RoLCBoZWlnaHQsIHdlaWdodENhcGFjaXR5KXtcclxuICAgICAgICBsZXQgY29udGFpbmVyID0gbmV3IENvbnRhaW5lcigpO1xyXG5cclxuICAgICAgICBsZXQgY29udGFpbmluZ1ZvbHVtZSA9IG5ldyBDb250YWluaW5nVm9sdW1lKGNvbnRhaW5lcik7XHJcbiAgICAgICAgICAgIGNvbnRhaW5pbmdWb2x1bWUuZGltZW5zaW9ucy5TZXQod2lkdGgsIGxlbmd0aCwgaGVpZ2h0KTtcclxuICAgICAgICAgICAgY29udGFpbmluZ1ZvbHVtZS53ZWlnaHRDYXBhY2l0eSA9IHdlaWdodENhcGFjaXR5O1xyXG5cclxuICAgICAgICBjb250YWluZXIuQWRkKGNvbnRhaW5pbmdWb2x1bWUpO1xyXG5cclxuICAgICAgICBsZXQgdW5pdHMgPSB0aGlzLnBhcmFtcy51eC5wYXJhbXMudW5pdHM7XHJcbiAgICAgICAgY3JlYXRlQ29udGFpbmVyVmlldyhjb250YWluZXIsIG51bGwsIHVuaXRzKTtcclxuXHJcbiAgICAgICAgdGhpcy5wYWNraW5nU3BhY2UuQWRkQ29udGFpbmVyKGNvbnRhaW5lcik7XHJcbiAgICAgICAgXHJcbiAgICAgICAgdGhpcy5EaXNwYXRjaChzaWduYWxzLmNvbnRhaW5lckxvYWRlZCwgY29udGFpbmVyKTtcclxuICAgICAgICByZXR1cm4gY29udGFpbmVyLnVpZDtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIExvYWQgcGFja2luZyBjb25maWcsIGdldCBhbiB1aWQgZm9yIGxhdGVyIGNoYW5nZXMgKG9yIGZhbHNlIG9uIGVycm9yKVxyXG4gICAgICogQHBhcmFtIHtQYWNraW5nU3BhY2VKU09OfSBqc29uT2JqZWN0IFxyXG4gICAgICogQHJldHVybnMge051bWJlcnxCb29sZWFufSB1aWQgb3IgZmFsc2UgaWYgZXJyb3JcclxuICAgICAqL1xyXG4gICAgTG9hZChqc29uT2JqZWN0KXtcclxuXHJcbiAgICAgICAgLyoqIEB0eXBlIHtQYWNraW5nU3BhY2VKU09OfSBqc29uT2JqZWN0ICovXHJcbiAgICAgICAgbGV0IGRhdGE7XHJcbiAgICAgICAgdHJ5e1xyXG4gICAgICAgICAgICBkYXRhID0gdHlwZW9mIGpzb25PYmplY3QgPT09ICdzdHJpbmcnID8gSlNPTi5wYXJzZShqc29uT2JqZWN0KSA6IGpzb25PYmplY3Q7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNhdGNoKGVycm9yKXtcclxuICAgICAgICAgICAgTG9nZ2VyLldhcm4oJ0Vycm9yIGluIFBhY2tpbmdTcGFjZUlucHV0LkxvYWQsIGVycm9yL2pzb25PYmplY3Q6JywgZXJyb3IsIGpzb25PYmplY3QpO1xyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZihkYXRhLmNvbnRhaW5lcil7XHJcbiAgICAgICAgICAgIGxldCBjb250YWluZXI7XHJcbiAgICAgICAgICAgIHRyeXtcclxuICAgICAgICAgICAgICAgIGNvbnRhaW5lciA9IENvbnRhaW5lci5Gcm9tSlNPTihkYXRhLmNvbnRhaW5lcik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY2F0Y2goZXJyb3Ipe1xyXG4gICAgICAgICAgICAgICAgTG9nZ2VyLldhcm4oJ0Vycm9yIGluIFBhY2tpbmdTcGFjZUlucHV0LkxvYWQsIGVycm9yL2pzb25PYmplY3QuY29udGFpbmVyOicsIGVycm9yLCBkYXRhLmNvbnRhaW5lcik7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGlmKCFjb250YWluZXIudWlkKSBjb250YWluZXIuU2V0VUlEKCk7XHJcbiAgICAgICAgICAgIGxldCB1aWQgPSBjb250YWluZXIudWlkO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgbGV0IG1vZGVsO1xyXG4gICAgICAgICAgICBpZihkYXRhLnZpZXcpe1xyXG4gICAgICAgICAgICAgICAgdHJ5e1xyXG4gICAgICAgICAgICAgICAgICAgIG1vZGVsID0gQXNzZXQuRnJvbUpTT04oZGF0YS52aWV3KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGNhdGNoKGVycm9yKXtcclxuICAgICAgICAgICAgICAgICAgICBMb2dnZXIuV2FybignRXJyb3IgaW4gUGFja2luZ1NwYWNlSW5wdXQuTG9hZCwgZXJyb3IvanNvbk9iamVjdC52aWV3OicsIGVycm9yLCBkYXRhLnZpZXcpO1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgbGV0IHVuaXRzID0gdGhpcy5wYXJhbXMudXgucGFyYW1zLnVuaXRzO1xyXG4gICAgICAgICAgICBjcmVhdGVDb250YWluZXJWaWV3KGNvbnRhaW5lciwgbW9kZWwsIHVuaXRzKTtcclxuXHJcbiAgICAgICAgICAgIHRoaXMucGFja2luZ1NwYWNlLkFkZENvbnRhaW5lcihjb250YWluZXIpO1xyXG5cclxuICAgICAgICAgICAgdGhpcy5EaXNwYXRjaChzaWduYWxzLmNvbnRhaW5lckxvYWRlZCwgY29udGFpbmVyKTtcclxuICAgICAgICAgICAgcmV0dXJuIHVpZDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICAvKiogRW51bWVyYXRpb24gb2YgZGlzcGF0Y2hlZCB0eXBlcyAqL1xyXG4gICAgc3RhdGljIGdldCBzaWduYWxzKCl7XHJcbiAgICAgICAgcmV0dXJuIHNpZ25hbHM7XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBQYWNraW5nU3BhY2VJbnB1dDtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvYXBpL2NvbXBvbmVudHMvUGFja2luZ1NwYWNlSW5wdXQuanMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///44\n");

/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _LightDispatcher2 = __webpack_require__(9);\n\nvar _LightDispatcher3 = _interopRequireDefault(_LightDispatcher2);\n\nvar _Packer = __webpack_require__(22);\n\nvar _Packer2 = _interopRequireDefault(_Packer);\n\nvar _Utils = __webpack_require__(0);\n\nvar _Utils2 = _interopRequireDefault(_Utils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/** @typedef {import('../packer/Packer').SolverParams} SolverParams */\n\n/** @typedef {import('../packer/cub/CUB').CUBParams} CUBParams */\n\nvar ResultSpace =\n/** @param {string} uid */\nfunction ResultSpace(uid) {\n    _classCallCheck(this, ResultSpace);\n\n    this.uid = uid;\n};\n\nvar ResultEntry =\n/** @param {string} uid @param {ResultSpace} space @param {Number} quantity */\nfunction ResultEntry(uid, space, quantity) {\n    _classCallCheck(this, ResultEntry);\n\n    this.uid = uid;\n    this.space = space;\n    this.quantity = quantity || 0;\n};\n\nvar PackingResult = function PackingResult() {\n    _classCallCheck(this, PackingResult);\n\n    /** @type {Array<ResultSpace>} */\n    this.packingSpaces = [];\n    /** @type {Array<ResultEntry>} */\n    this.packed = [];\n    /** @type {Array<ResultEntry>} */\n    this.unpacked = [];\n\n    this.totalPacked = 0;\n    this.totalUnpacked = 0;\n    /** algorithm runtime in seconds */\n    this.solveDuration = 1;\n};\n\n/** @param {Packer.PackingResult} packingResult */\n\n\nfunction toInterfaceResults(packingResult) {\n    var result = new PackingResult();\n\n    /** @param {string} containerUID */\n    function getSpace(containerUID) {\n        for (var i = 0; i < result.packingSpaces.length; i++) {\n            if (result.packingSpaces[i].uid === containerUID) {\n                return result.packingSpaces[i];\n            }\n        }\n\n        var ps = new ResultSpace(containerUID);\n        result.packingSpaces.push(ps);\n        return ps;\n    }\n\n    var totalPacked = 0,\n        totalUnpacked = 0;\n\n    /** @param {ResultEntry} resultEntry @param {Array<ResultEntry>} list */\n    function packEntry(resultEntry, list) {\n        var isFirst = true;\n        for (var i = 0; i < list.length; i++) {\n            if (list[i].uid === resultEntry.uid) {\n                isFirst = false;\n                list[i].quantity++;\n                break;\n            }\n        }\n\n        if (isFirst) {\n            resultEntry.quantity = 1;\n            list.push(resultEntry);\n        }\n    }\n\n    packingResult.packed.forEach(function (p) {\n        var uid = p.entry.uid;\n        var space = getSpace(p.containingVolume.container.uid);\n        packEntry(new ResultEntry(uid, space), result.packed);\n        totalPacked++;\n    });\n\n    packingResult.unpacked.forEach(function (p) {\n        var uid = p.entry.uid;\n        var space = null;\n        var unpackedQuantity = p.unpackedQuantity;\n        result.unpacked.push(new ResultEntry(uid, space, unpackedQuantity));\n        totalUnpacked += unpackedQuantity;\n    });\n\n    result.totalPacked = totalPacked;\n    result.totalUnpacked = totalUnpacked;\n    result.solveDuration = packingResult.runtime;\n\n    return result;\n}\n\nvar signals = {\n    solveRequest: 'solveRequest',\n    solved: 'solved',\n    failed: 'failed'\n};\n\n/** @typedef PackerParams \r\n * @property {Number} defaultStackingFactor default = 10, multiplier for stacking capacity (capacity = weight * defaultStackingFactor) if stackingProperty is not enabled */\nvar defaultParams = {\n    defaultStackingFactor: 10\n};\n\n/** @type {SolverParams} */\nvar defaultSolverParams = {\n    algorithm: 'cub'\n};\n\nvar PackerInterface = function (_LightDispatcher) {\n    _inherits(PackerInterface, _LightDispatcher);\n\n    /** @param {PackerParams} params */\n    function PackerInterface(params) {\n        _classCallCheck(this, PackerInterface);\n\n        var _this = _possibleConstructorReturn(this, (PackerInterface.__proto__ || Object.getPrototypeOf(PackerInterface)).call(this));\n\n        _this.params = _Utils2.default.AssignUndefined(params, defaultParams);\n        return _this;\n    }\n\n    /** Solve packing for current cargo list in loaded packing space \r\n     * @param {SolverParams} params */\n\n\n    _createClass(PackerInterface, [{\n        key: \"Solve\",\n        value: function Solve(params) {\n            params = _Utils2.default.AssignUndefined(params, defaultSolverParams);\n            this.Dispatch(signals.solveRequest, params);\n        }\n\n        /** @ignore ignore */\n\n    }, {\n        key: \"_Notify\",\n        value: function _Notify() {\n            var value = arguments.length <= 0 ? undefined : arguments[0];\n            switch (value) {\n                case signals.solved:\n                    var packingResult = arguments.length <= 1 ? undefined : arguments[1];\n                    var result = toInterfaceResults(packingResult);\n                    this.Dispatch(signals.solved, result);\n                    break;\n                case signals.failed:\n                    var error = arguments.length <= 1 ? undefined : arguments[1];\n                    this.Dispatch(signals.failed, error);\n                    break;\n            }\n        }\n\n        /** Enumeration of dispatched types */\n\n    }], [{\n        key: \"signals\",\n        get: function get() {\n            return signals;\n        }\n    }]);\n\n    return PackerInterface;\n}(_LightDispatcher3.default);\n\nexports.default = PackerInterface;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///45\n");

/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(47);


/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\nvar _FreightPacker = __webpack_require__(48);\n\nvar _FreightPacker2 = _interopRequireDefault(_FreightPacker);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nglobal.FreightPacker = _FreightPacker2.default;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(12)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbWFpbi5qcz8zNDc5Il0sIm5hbWVzIjpbImdsb2JhbCIsIkZyZWlnaHRQYWNrZXIiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7OztBQUNBQSxPQUFPQyxhQUFQLEdBQXVCQSx1QkFBdkIsQyIsImZpbGUiOiI0Ny5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBGcmVpZ2h0UGFja2VyIGZyb20gJy4vRnJlaWdodFBhY2tlcic7XHJcbmdsb2JhbC5GcmVpZ2h0UGFja2VyID0gRnJlaWdodFBhY2tlcjtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvbWFpbi5qcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///47\n");

/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Capabilities = __webpack_require__(49);\n\nvar _Capabilities2 = _interopRequireDefault(_Capabilities);\n\nvar _App = __webpack_require__(10);\n\nvar _App2 = _interopRequireDefault(_App);\n\nvar _CargoInput = __webpack_require__(43);\n\nvar _CargoInput2 = _interopRequireDefault(_CargoInput);\n\nvar _Logger = __webpack_require__(2);\n\nvar _Logger2 = _interopRequireDefault(_Logger);\n\nvar _Utils = __webpack_require__(0);\n\nvar _Utils2 = _interopRequireDefault(_Utils);\n\nvar _PackingSpaceInput = __webpack_require__(44);\n\nvar _PackingSpaceInput2 = _interopRequireDefault(_PackingSpaceInput);\n\nvar _UX = __webpack_require__(18);\n\nvar _UX2 = _interopRequireDefault(_UX);\n\nvar _PackerInterface = __webpack_require__(45);\n\nvar _PackerInterface2 = _interopRequireDefault(_PackerInterface);\n\nvar _LightDispatcher2 = __webpack_require__(9);\n\nvar _LightDispatcher3 = _interopRequireDefault(_LightDispatcher2);\n\nvar _Constants = __webpack_require__(37);\n\nvar _Constants2 = _interopRequireDefault(_Constants);\n\nvar _Resources = __webpack_require__(25);\n\nvar _Resources2 = _interopRequireDefault(_Resources);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n//#region dev\nvar utils = {\n\tTHREE: THREE,\n\tdat: window.dat || __webpack_require__(3).default,\n\tSignaler: __webpack_require__(1).default,\n\tUtils: __webpack_require__(0).default,\n\tDebug: __webpack_require__(39).default,\n\tConfig: __webpack_require__(7).default\n};\n\n/** @param {FreightPacker|App} domain */\nfunction devSetup(domain) {\n\tif (domain instanceof FreightPacker) {\n\t\tvar fp = domain;\n\t\tglobal.fp = fp;\n\t\tFreightPacker.utils.Debug.api = fp;\n\t\tvar params = fp.params;\n\t\tif (params.debug) {\n\t\t\t_Logger2.default.active = true;\n\t\t\t_Logger2.default.toConsole = true;\n\t\t\t_Logger2.default.traceToConsole = true;\n\t\t}\n\n\t\t//require('./api/debug/Tester').testPool();\n\t\t//utils.Debug.CLPTest.Test1();\n\t}\n\n\tif (domain instanceof _App2.default) {\n\t\tvar SceneSetup = __webpack_require__(13).default;\n\t\tvar app = domain;\n\t\tFreightPacker.utils.Debug.app = app;\n\t\tapp.sceneSetup.OnIncludingPrior(SceneSetup.signals.init, function () {\n\t\t\tFreightPacker.utils.Debug.Viz.SetViewParent(app.sceneSetup.sceneController.scene);\n\t\t});\n\t}\n}\n\n/** @param {FreightPacker} fp */\nfunction auto(fp) {}\n\n//#endregion\n\n/**\r\n * @typedef InitializationParams\r\n * @property {Boolean} debug set to false for deployment\r\n * @property {string} texturesPath url to textures directory\r\n * @property {UXParams} uxParams UX parameters\r\n * @property {PackerParams} packerParams Packer general parameters\r\n */\n\n/**\r\n * @type {InitializationParams}\r\n */\nvar defaultParams = {\n\tdebug: false\n};\n\nvar signals = {\n\tready: 'ready'\n};\n\nvar FreightPacker = function (_LightDispatcher) {\n\t_inherits(FreightPacker, _LightDispatcher);\n\n\t/**\r\n  * Freight Packer API instance\r\n  * @param {HTMLDivElement} containerDiv\r\n  * @param {InitializationParams} params\r\n  */\n\tfunction FreightPacker(containerDiv, params) {\n\t\t_classCallCheck(this, FreightPacker);\n\n\t\tvar _this = _possibleConstructorReturn(this, (FreightPacker.__proto__ || Object.getPrototypeOf(FreightPacker)).call(this));\n\n\t\tvar scope = _this;\n\n\t\t_this.params = _Utils2.default.AssignUndefined(params, defaultParams);\n\t\tdevSetup(_this);\n\n\t\t_this.ux = new _UX2.default(_this.params.uxParams);\n\n\t\t/** @type {CargoInputParams} */\n\t\tvar cargoInputParams = { ux: _this.ux };\n\n\t\t/** Handles input of: description fields (label, etc.), dimensions and constraints */\n\t\t_this.cargoInput = new _CargoInput2.default(cargoInputParams);\n\n\t\t/** @type {PackingSpaceInputParams} */\n\t\tvar packingSpaceInputParams = { ux: _this.ux };\n\n\t\t/** Handles input of: packing spaces configurations and assets */\n\t\t_this.packingSpaceInput = new _PackingSpaceInput2.default(packingSpaceInputParams);\n\n\t\t/** Manual solving and notification */\n\t\t_this.packer = new _PackerInterface2.default(_this.params.packerParams);\n\n\t\tvar resources = new _Resources2.default();\n\t\tresources.texturesPath = _this.params.texturesPath;\n\n\t\t/** @type {AppParams} */\n\t\tvar appParams = { ux: _this.ux, cargoInput: _this.cargoInput, packingSpaceInput: _this.packingSpaceInput, packerInterface: _this.packer, resources: resources };\n\t\tvar app = new _App2.default(containerDiv, appParams);\n\t\tapp.On(_App2.default.signals.start, function () {\n\t\t\tscope.Dispatch(signals.ready);\n\t\t});\n\n\t\tdevSetup(app);\n\n\t\tif (_this.params.debug) {\n\t\t\tauto(_this);\n\t\t}\n\t\treturn _this;\n\t}\n\n\t/**\r\n  * Check that webgl, etc are supported in this browser.\r\n  * Will resolve if requirements are met, otherwise rejects with an error message\r\n  * @return {Promise<Void>|Promise<string>} \r\n  */\n\n\n\t_createClass(FreightPacker, null, [{\n\t\tkey: 'CheckRequirements',\n\t\tvalue: function CheckRequirements() {\n\t\t\tvar webgl = _Capabilities2.default.IsWebGLReady();\n\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\tif (webgl) {\n\t\t\t\t\tresolve();\n\t\t\t\t} else {\n\t\t\t\t\tvar message = 'WebGL not supported.';\n\t\t\t\t\treject(message);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t/** Enumeration of dispatched types */\n\n\t}, {\n\t\tkey: 'signals',\n\t\tget: function get() {\n\t\t\treturn signals;\n\t\t}\n\t}, {\n\t\tkey: 'utils',\n\t\tget: function get() {\n\t\t\treturn utils;\n\t\t}\n\t}]);\n\n\treturn FreightPacker;\n}(_LightDispatcher3.default);\n\nFreightPacker.UX = _UX2.default;\nFreightPacker.CargoInput = _CargoInput2.default;\nFreightPacker.PackingSpaceInput = _PackingSpaceInput2.default;\nFreightPacker.Packer = _PackerInterface2.default;\nFreightPacker.Constants = _Constants2.default;\n\nexports.default = FreightPacker;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(12)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///48\n");

/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Capabilities = function () {\n  function Capabilities() {\n    _classCallCheck(this, Capabilities);\n  }\n\n  _createClass(Capabilities, null, [{\n    key: 'IsWebGLReady',\n    value: function IsWebGLReady() {\n      var canvas = document.createElement('canvas');\n      var gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\n      return gl && gl instanceof WebGLRenderingContext;\n    }\n  }]);\n\n  return Capabilities;\n}();\n\nexports.default = Capabilities;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXBpL3V0aWxzL0NhcGFiaWxpdGllcy5qcz9jYjYwIl0sIm5hbWVzIjpbIkNhcGFiaWxpdGllcyIsImNhbnZhcyIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImdsIiwiZ2V0Q29udGV4dCIsIldlYkdMUmVuZGVyaW5nQ29udGV4dCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztJQUNNQSxZO0FBQ0YsMEJBQWM7QUFBQTtBQUViOzs7O21DQUVvQjtBQUNqQixVQUFJQyxTQUFTQyxTQUFTQyxhQUFULENBQXVCLFFBQXZCLENBQWI7QUFDQSxVQUFJQyxLQUFLSCxPQUFPSSxVQUFQLENBQWtCLE9BQWxCLEtBQThCSixPQUFPSSxVQUFQLENBQWtCLG9CQUFsQixDQUF2QztBQUNBLGFBQU9ELE1BQU1BLGNBQWNFLHFCQUEzQjtBQUNIOzs7Ozs7a0JBR1VOLFkiLCJmaWxlIjoiNDkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuY2xhc3MgQ2FwYWJpbGl0aWVzIHtcclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICBcclxuICAgIH1cclxuICBcclxuICAgIHN0YXRpYyBJc1dlYkdMUmVhZHkoKXtcclxuICAgICAgICB2YXIgY2FudmFzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnY2FudmFzJyk7XHJcbiAgICAgICAgdmFyIGdsID0gY2FudmFzLmdldENvbnRleHQoJ3dlYmdsJykgfHwgY2FudmFzLmdldENvbnRleHQoJ2V4cGVyaW1lbnRhbC13ZWJnbCcpO1xyXG4gICAgICAgIHJldHVybiBnbCAmJiBnbCBpbnN0YW5jZW9mIFdlYkdMUmVuZGVyaW5nQ29udGV4dDtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQ2FwYWJpbGl0aWVzO1xyXG4gIFxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9hcGkvdXRpbHMvQ2FwYWJpbGl0aWVzLmpzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///49\n");

/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _UpdateComponent = __webpack_require__(31);\n\nvar _UpdateComponent2 = _interopRequireDefault(_UpdateComponent);\n\nvar _RaycastGroup = __webpack_require__(32);\n\nvar _RaycastGroup2 = _interopRequireDefault(_RaycastGroup);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * @typedef {Object} IScreen\r\n * @property {Number} x\r\n * @property {Number} y\r\n * @property {Number} width\r\n * @property {Number} height\r\n * @property {Number} left\r\n * @property {Number} right\r\n * @property {Number} bottom\r\n * @property {Number} top\r\n */\n\n/**\r\n * @typedef {Object} DragEvent\r\n * @property {MouseEvent} mouseEvent\r\n * @property {Number} sx - Start screen x\r\n * @property {Number} sy - Start screen y\r\n * @property {Number} x - Current screen x\r\n * @property {Number} y - Current screen y\r\n * @property {Number} dx - Delta x\r\n * @property {Number} dy - Delta y\r\n * @property {Number} distance - Distance (current - start)\r\n * @property {Number} minDist - Minimum distance to raise onDrag\r\n */\n\n/** keyboard api (http://dmauro.github.io/Keypress/)\r\n* @typedef keyboard\r\n* @property {function} on\r\n* @property {function} unregister\r\n*/\n\nvar epsilon = Math.pow(2, -52);\nvar defaultKeysListen = 'abcdefghijklmnopqrtsuvwxyz'.split('').concat(['ctlr', 'shift', 'alt']);\n\nvar Input = function () {\n\n    /**\r\n     * \r\n     * @param {HTMLElement} domContainer \r\n     */\n    function Input(domContainer) {\n        _classCallCheck(this, Input);\n\n        this.enabled = true;\n\n        var scope = this;\n        Object.defineProperty(this, 'camera', {\n            get: function get() {\n                return scope._camera;\n            },\n            set: function set(camera) {\n                scope._camera = camera;\n                scope.fov = { min: 40, max: camera.fov, target: camera.fov };\n            }\n        });\n\n        this.domContainer = domContainer;\n\n        this._mouse = { x: 0, y: 0 };\n        this.mouseScreen = new THREE.Vector2();\n        this.mouseViewport = new THREE.Vector2();\n        this.mouseDelta = new THREE.Vector2();\n        this.lastMouseDownTime = 0;\n        /**\r\n         * @type {IScreen}\r\n         */\n        this.screen = {};\n        this.ComputeScreen();\n\n        this.raycaster = new THREE.Raycaster();\n\n        this.clock = new THREE.Clock();\n        this.clock.start();\n\n        this._raycastGroups = { Update: {}, Update25: {}, Update10: {}, OnMouseDown: {}, OnDoubleClick: {}, OnMouseUp: {}, OnRightClick: {}, OnClick: {} };\n        this.updateComponents = [new _UpdateComponent2.default(true, 1 / 25, this.Update25.bind(this)), new _UpdateComponent2.default(true, 1 / 10, this.Update10.bind(this))];\n\n        this.fireOnce = [];\n\n        this.onMouseDown = [];\n        this.onMouseUp = [];\n        this.onRightClick = [];\n        this.onDoubleClick = [];\n        this.onClick = [];\n        this.onDrag = [];\n\n        /**\r\n         * @type {DragEvent}\r\n         */\n        this.onDragEvent = {\n            mouseEvent: undefined,\n            sx: undefined, sy: undefined,\n            x: 0, y: 0,\n            dx: 0, dy: 0,\n            distance: 0,\n            minDist: 4 // pixels \n        };\n        var onDragStatus = false;\n        Object.defineProperty(this.onDragEvent, '_status', {\n            get: function get() {\n                return onDragStatus;\n            },\n            set: function set(value) {\n                onDragStatus = value;\n                this.sx = this.sy = undefined;\n                this.dx = this.dy = 0;\n            }\n        });\n\n        this.doubleClickTime = .2;\n\n        this.domContainer.addEventListener('mousedown', this.OnMouseDown.bind(this));\n        this.domContainer.addEventListener('mouseup', this.OnMouseUp.bind(this));\n        this.domContainer.addEventListener('contextmenu', this.OnRightClick.bind(this));\n        this.domContainer.addEventListener('mousemove', this.OnMouseMove.bind(this), false);\n\n        var thisOnMouseWheel = this.OnMouseWheel.bind(this);\n        if (this.domContainer.addEventListener) {\n            this.domContainer.addEventListener(\"mousewheel\", thisOnMouseWheel, false);\n            this.domContainer.addEventListener(\"DOMMouseScroll\", thisOnMouseWheel, false);\n        } else this.domContainer.attachEvent(\"onmousewheel\", thisOnMouseWheel);\n\n        this.screenNeedsUpdate = true;\n        window.addEventListener('scroll', this.OnScroll.bind(this));\n\n        this.cameraNeedsUpdate = true;\n        this.onResize = [];\n        window.addEventListener('resize', this.OnResize.bind(this));\n\n        /**\r\n         * @type {keyboard}\r\n         */\n        this.keyboard = new window.keypress.Listener();\n        this.keyboard.on = this.keyboard.simple_combo;\n        this.keyboard.unregister = this.keyboard.unregister_combo;\n        this.keys = {};\n\n        //\n    }\n\n    _createClass(Input, [{\n        key: \"Dispose\",\n        value: function Dispose() {\n            // remove listeners\n        }\n    }, {\n        key: \"ListenKeys\",\n        value: function ListenKeys(keys) {\n            if (keys === undefined) {\n                keys = defaultKeysListen;\n            }\n\n            var scope = this;\n            keys.forEach(function (key) {\n                scope.keys[key] = false;\n                scope.keyboard.register_combo({\n                    keys: key,\n                    prevent_repeat: true,\n                    on_keydown: function on_keydown() {\n                        scope.keys[key] = true;\n                    },\n                    on_keyup: function on_keyup() {\n                        scope.keys[key] = false;\n                    }\n                });\n            });\n        }\n    }, {\n        key: \"ComputeScreen\",\n        value: function ComputeScreen() {\n            var screen = this.domContainer.getBoundingClientRect();\n            this.screen.x = screen.x;\n            this.screen.y = screen.y;\n            this.screen.width = screen.width;\n            this.screen.height = screen.height;\n            this.screen.left = screen.left;\n            this.screen.right = screen.right;\n            this.screen.bottom = screen.bottom;\n            this.screen.top = screen.top;\n\n            /*\r\n            var rectOffset = Utils.GetRectOffset(this.domContainer);\r\n            this.screen.x += rectOffset.x;\r\n            this.screen.left += rectOffset.x;\r\n            this.screen.y += rectOffset.y;\r\n            this.screen.top += rectOffset.y;\r\n            */\n        }\n    }, {\n        key: \"OnMouseDown\",\n        value: function OnMouseDown(mouseEvent) {\n            if (mouseEvent.button === 0) {\n                this.UpdateScreenAndMouse(mouseEvent);\n                var now = this.clock.getElapsedTime();\n                if (now - this.lastMouseDownTime < this.doubleClickTime) {\n                    if (this._dridMouseDown !== undefined) {\n                        this.AbortDelayedAction(this._dridMouseDown);\n                        this._dridMouseDown = undefined;\n                    }\n                    this.OnDoubleClick(mouseEvent);\n                    return;\n                }\n\n                this.lastMouseDownTime = now;\n                this.onDragEvent._status = true;\n\n                var scope = this;\n                this._dridMouseDown = this.DelayedAction(this._mouseDownDelayed = function () {\n                    scope._dridMouseDown = undefined;\n                    for (var i = 0; i < scope.onMouseDown.length; i++) {\n                        scope.onMouseDown[i](mouseEvent);\n                    }\n                    scope.UpdateRaycast('OnMouseDown');\n                    scope.mouseDelta.copy(scope.mouseScreen);\n                }, this.doubleClickTime * 1000);\n            }\n        }\n    }, {\n        key: \"OnDoubleClick\",\n        value: function OnDoubleClick(mouseEvent) {\n            for (var i = 0; i < this.onDoubleClick.length; i++) {\n                this.onDoubleClick[i](mouseEvent);\n            }\n\n            this.UpdateRaycast('OnDoubleClick');\n        }\n    }, {\n        key: \"ExecuteDelayedMD\",\n        value: function ExecuteDelayedMD(mouseEvent) {\n            if (this._dridMouseDown !== undefined) {\n                this.AbortDelayedAction(this._dridMouseDown);\n                this._dridMouseDown = undefined;\n                this._mouseDownDelayed();\n            }\n        }\n    }, {\n        key: \"OnMouseUp\",\n        value: function OnMouseUp(mouseEvent) {\n            if (mouseEvent.button === 0) {\n                var now = this.clock.getElapsedTime();\n                if (now - this.lastMouseDownTime < this.doubleClickTime) {\n                    this.ExecuteDelayedMD(mouseEvent);\n                }\n\n                this.UpdateScreenAndMouse(mouseEvent);\n                for (var i = 0; i < this.onMouseUp.length; i++) {\n                    this.onMouseUp[i](mouseEvent);\n                }\n\n                this.UpdateRaycast('OnMouseUp');\n                var d = this.mouseDelta.distanceToSquared(this.mouseScreen);\n                var noMouseDrag = d < 10; // pixels squared\n                if (noMouseDrag) {\n                    this.OnClick(mouseEvent);\n                }\n\n                this.onDragEvent._status = false;\n            }\n        }\n    }, {\n        key: \"OnMouseDrag\",\n        value: function OnMouseDrag() {\n            var p = this.onDragEvent;\n            if (p._status) {\n                var m = this.mouseScreen;\n                if (p.sx === undefined) p.sx = p.x = m.x;\n                if (p.sy === undefined) p.sy = p.y = m.y;\n\n                var vx = p.x - p.sx,\n                    vy = p.y - p.sy;\n                p.distance = Math.sqrt(vx * vx + vy * vy);\n                if (p.distance > p.minDist && (Math.abs(p.dx) > epsilon || Math.abs(p.dy) > epsilon)) {\n                    for (var i = 0; i < this.onDrag.length; i++) {\n                        this.onDrag[i](p);\n                    }\n                }\n\n                p.dx = p.x - m.x;\n                p.dy = p.y - m.y;\n\n                p.x = m.x;\n                p.y = m.y;\n            }\n        }\n    }, {\n        key: \"OnClick\",\n        value: function OnClick(mouseEvent) {\n            for (var i = 0; i < this.onClick.length; i++) {\n                this.onClick[i](mouseEvent);\n            }\n\n            this.UpdateRaycast('OnClick');\n        }\n    }, {\n        key: \"OnRightClick\",\n        value: function OnRightClick(mouseEvent) {\n            //mouseEvent.preventDefault();\n            this.UpdateScreenAndMouse(mouseEvent);\n            for (var i = 0; i < this.onRightClick.length; i++) {\n                this.onRightClick[i](mouseEvent);\n            }\n\n            this.UpdateRaycast('OnRightClick');\n        }\n    }, {\n        key: \"OnMouseMove\",\n        value: function OnMouseMove(mouseEvent) {\n            this._mouse.x = THREE.Math.clamp(mouseEvent.clientX - this.screen.left, 0, this.screen.width);\n            this._mouse.y = THREE.Math.clamp(mouseEvent.clientY - this.screen.top, 0, this.screen.height);\n            this.onDragEvent.mouseEvent = mouseEvent;\n            this.ExecuteDelayedMD(mouseEvent);\n        }\n    }, {\n        key: \"OnScroll\",\n        value: function OnScroll(event) {\n            this.screenNeedsUpdate = true;\n        }\n    }, {\n        key: \"OnMouseWheel\",\n        value: function OnMouseWheel(mouseEvent) {\n            mouseEvent.preventDefault();\n            var delta = THREE.Math.clamp(mouseEvent.wheelDelta || -mouseEvent.detail, -1, 1);\n            this.fov.target = THREE.Math.clamp(this.fov.target - delta * 2., this.fov.min, this.fov.max);\n            this.fov.lerp = 0;\n        }\n    }, {\n        key: \"LerpZoom\",\n        value: function LerpZoom() {\n            this.fov.lerp += .1;\n            if (this.fov.lerp >= 1 || Number.isNaN(this.fov.lerp)) {\n                return;\n            }\n            this.camera.fov += (this.fov.target - this.camera.fov) * this.fov.lerp;\n            this.camera.updateProjectionMatrix();\n        }\n    }, {\n        key: \"OnResize\",\n        value: function OnResize(event) {\n            this.screenNeedsUpdate = true;\n            this.cameraNeedsUpdate = true;\n        }\n    }, {\n        key: \"RemoveEventCallback\",\n        value: function RemoveEventCallback(eventType, callback) {\n            var callbacks = this[eventType];\n            for (var iCallback = 0; iCallback < callbacks.length; iCallback++) {\n                if (callbacks[iCallback] === callback) {\n                    callbacks.splice(iCallback, 1);\n                }\n            }\n        }\n    }, {\n        key: \"Update\",\n        value: function Update() {\n            this.UpdateScreenAndMouse();\n\n            this.FireOnce();\n\n            // Raycasts\n            this.UpdateRaycaster();\n            this.UpdateRaycast('Update');\n\n            var now = this.clock.getElapsedTime();\n            for (var iUpdate = 0; iUpdate < this.updateComponents.length; iUpdate++) {\n                var updateComponent = this.updateComponents[iUpdate];\n                if (updateComponent.active && now - updateComponent.lastUpdateTime > updateComponent.interval) {\n                    updateComponent.Update(now);\n                }\n            }\n\n            this.OnMouseDrag();\n        }\n    }, {\n        key: \"Update25\",\n        value: function Update25() {\n            this.LerpZoom();\n            this.UpdateRaycast('Update25');\n        }\n    }, {\n        key: \"Update10\",\n        value: function Update10() {\n            this.UpdateRaycast('Update10');\n        }\n    }, {\n        key: \"FireOnce\",\n        value: function FireOnce() {\n            for (var iCallback = this.fireOnce.length; iCallback-- > 0;) {\n                this.fireOnce[iCallback]();\n            }\n            this.fireOnce.length = 0;\n        }\n    }, {\n        key: \"DelayedAction\",\n        value: function DelayedAction(action, delay) {\n            var drid = window.setTimeout(function () {\n                action();\n            }, delay);\n            return drid;\n        }\n    }, {\n        key: \"AbortDelayedAction\",\n        value: function AbortDelayedAction(drid) {\n            window.clearTimeout(drid);\n            return;\n        }\n    }, {\n        key: \"Repeat\",\n        value: function Repeat(action, interval) {\n            if (this._repeats === undefined) this._repeats = [];\n            var drid = window.setInterval(function () {\n                action();\n            }, interval);\n            this._repeats.push({ action: action, drid: drid });\n            return drid;\n        }\n    }, {\n        key: \"StopRepeat\",\n        value: function StopRepeat(action) {\n            if (this._repeats === undefined) return;\n            if (typeof action === 'number') {\n                window.clearInterval(action);\n                return;\n            }\n            for (var i = 0; i < this._repeats.length; i++) {\n                if (this._repeats[i].action === action) {\n                    window.clearInterval(this._repeats[i].drid);\n                    this._repeats.splice(i, 1);\n                    return;\n                }\n            }\n        }\n    }, {\n        key: \"UpdateScreenAndMouse\",\n        value: function UpdateScreenAndMouse(mouseEvent) {\n            if (this.screenNeedsUpdate) {\n                this.ComputeScreen();\n                this.screenNeedsUpdate = false;\n            }\n            if (this.cameraNeedsUpdate) {\n                for (var i = 0; i < this.onResize.length; i++) {\n                    this.onResize[i](this.screen);\n                }\n                this.cameraNeedsUpdate = false;\n            }\n\n            if (mouseEvent !== undefined) {\n                this._mouse.x = THREE.Math.clamp(mouseEvent.clientX - this.screen.left, 0, this.screen.width);\n                this._mouse.y = THREE.Math.clamp(mouseEvent.clientY - this.screen.top, 0, this.screen.height);\n            }\n\n            this.mouseScreen.x = this._mouse.x;\n            this.mouseScreen.y = this._mouse.y;\n\n            this.mouseViewport.x = this._mouse.x / this.screen.width * 2 - 1;\n            this.mouseViewport.y = -this._mouse.y / this.screen.height * 2 + 1;\n        }\n    }, {\n        key: \"RaycastTest\",\n        value: function RaycastTest(objects, recursive) {\n            this.UpdateRaycaster();\n            recursive = recursive !== undefined ? recursive : false;\n            var intersects = objects instanceof Array ? this.raycaster.intersectObjects(objects, recursive) : this.raycaster.intersectObject(objects, recursive);\n            if (intersects.length > 0) {\n                return intersects[0];\n            }\n            return undefined;\n        }\n\n        /**\r\n         * @param {string} event Update Update25 Update10 OnMouseDown OnDoubleClick OnMouseUp OnRightClick OnClick\r\n         * @param {string} groupID \r\n         * @param {RaycastGroup} group \r\n         */\n\n    }, {\n        key: \"AddRaycastGroup\",\n        value: function AddRaycastGroup(event, groupID, group) {\n            if (this._raycastGroups[event][groupID] !== undefined) console.log('RaycastGroup ' + groupID + ' is being overwritten.');\n            this._raycastGroups[event][groupID] = group;\n        }\n    }, {\n        key: \"RemoveRaycastGroup\",\n        value: function RemoveRaycastGroup(event, groupID) {\n            delete this._raycastGroups[event][groupID];\n        }\n    }, {\n        key: \"UpdateRaycaster\",\n        value: function UpdateRaycaster() {\n            this.camera.updateMatrixWorld();\n            this.raycaster.setFromCamera(this.mouseViewport, this.camera);\n        }\n    }, {\n        key: \"UpdateRaycast\",\n        value: function UpdateRaycast(event) {\n            var raycastGroupsKeys = Object.keys(this._raycastGroups[event]);\n            var numRaycastGroups = raycastGroupsKeys.length;\n            if (numRaycastGroups > 0) {\n                if (numRaycastGroups > 1) raycastGroupsKeys.sort().reverse();\n\n                for (var iGroup = 0; iGroup < numRaycastGroups; iGroup++) {\n                    var key = raycastGroupsKeys[iGroup];\n                    this._raycastGroups[event][key].Raycast(this.raycaster);\n                }\n            }\n        }\n    }]);\n\n    return Input;\n}();\n\nexports.default = Input;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///50\n");

/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Quality = function () {\n    function Quality(callback) {\n        _classCallCheck(this, Quality);\n\n        this.testCallback = callback;\n    }\n\n    _createClass(Quality, [{\n        key: \"Common\",\n        value: function Common(quality) {\n            //                      0       1       2       3\n            var composer = [0, 0, 0, 1];\n            var antialias = [0, 1, 1, 0];\n            var shadows = [0, 0, 1, 1];\n            var renderSizeMul = [.5, 1, 1, 1];\n\n            var result = {\n                composer: Boolean(composer[quality]),\n                antialias: Boolean(antialias[quality]),\n                shadows: Boolean(shadows[quality]),\n                renderSizeMul: renderSizeMul[quality]\n            };\n            return result;\n        }\n    }, {\n        key: \"OnTestComplete\",\n        value: function OnTestComplete(quality) {\n            var result = this.Common(quality);\n            this.testCallback(result);\n        }\n    }, {\n        key: \"PerformanceTest1\",\n        value: function PerformanceTest1() {\n            var quality = 2;\n            // Test webgl supported shader precision, see WebGLRenderer, https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/WebGL_best_practices\n            this.OnTestComplete(quality);\n        }\n    }]);\n\n    return Quality;\n}();\n\nexports.default = Quality;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXBpL3V0aWxzL2Npay9RdWFsaXR5LmpzP2U5ZDkiXSwibmFtZXMiOlsiUXVhbGl0eSIsImNhbGxiYWNrIiwidGVzdENhbGxiYWNrIiwicXVhbGl0eSIsImNvbXBvc2VyIiwiYW50aWFsaWFzIiwic2hhZG93cyIsInJlbmRlclNpemVNdWwiLCJyZXN1bHQiLCJCb29sZWFuIiwiQ29tbW9uIiwiT25UZXN0Q29tcGxldGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7SUFBTUEsTztBQUNGLHFCQUFZQyxRQUFaLEVBQXFCO0FBQUE7O0FBQ2pCLGFBQUtDLFlBQUwsR0FBb0JELFFBQXBCO0FBQ0g7Ozs7K0JBRU1FLE8sRUFBUTtBQUNYO0FBQ0EsZ0JBQUlDLFdBQWtCLENBQUUsQ0FBRixFQUFVLENBQVYsRUFBa0IsQ0FBbEIsRUFBMEIsQ0FBMUIsQ0FBdEI7QUFDQSxnQkFBSUMsWUFBa0IsQ0FBRSxDQUFGLEVBQVUsQ0FBVixFQUFrQixDQUFsQixFQUEwQixDQUExQixDQUF0QjtBQUNBLGdCQUFJQyxVQUFrQixDQUFFLENBQUYsRUFBVSxDQUFWLEVBQWtCLENBQWxCLEVBQTBCLENBQTFCLENBQXRCO0FBQ0EsZ0JBQUlDLGdCQUFrQixDQUFFLEVBQUYsRUFBVSxDQUFWLEVBQWtCLENBQWxCLEVBQTBCLENBQTFCLENBQXRCOztBQUVBLGdCQUFJQyxTQUFTO0FBQ1RKLDBCQUFVSyxRQUFRTCxTQUFTRCxPQUFULENBQVIsQ0FERDtBQUVURSwyQkFBV0ksUUFBUUosVUFBVUYsT0FBVixDQUFSLENBRkY7QUFHVEcseUJBQVNHLFFBQVFILFFBQVFILE9BQVIsQ0FBUixDQUhBO0FBSVRJLCtCQUFlQSxjQUFjSixPQUFkO0FBSk4sYUFBYjtBQU1BLG1CQUFPSyxNQUFQO0FBQ0g7Ozt1Q0FFY0wsTyxFQUFRO0FBQ25CLGdCQUFJSyxTQUFTLEtBQUtFLE1BQUwsQ0FBWVAsT0FBWixDQUFiO0FBQ0EsaUJBQUtELFlBQUwsQ0FBa0JNLE1BQWxCO0FBQ0g7OzsyQ0FFaUI7QUFDZCxnQkFBSUwsVUFBVSxDQUFkO0FBQ0E7QUFDQSxpQkFBS1EsY0FBTCxDQUFvQlIsT0FBcEI7QUFDSDs7Ozs7O2tCQUlVSCxPIiwiZmlsZSI6IjUxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgUXVhbGl0eSB7XHJcbiAgICBjb25zdHJ1Y3RvcihjYWxsYmFjayl7XHJcbiAgICAgICAgdGhpcy50ZXN0Q2FsbGJhY2sgPSBjYWxsYmFjaztcclxuICAgIH1cclxuXHJcbiAgICBDb21tb24ocXVhbGl0eSl7XHJcbiAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICAgMCAgICAgICAxICAgICAgIDIgICAgICAgM1xyXG4gICAgICAgIHZhciBjb21wb3NlciAgICAgICAgPSBbIDAsICAgICAgMCwgICAgICAwLCAgICAgIDEgICAgICAgXTtcclxuICAgICAgICB2YXIgYW50aWFsaWFzICAgICAgID0gWyAwLCAgICAgIDEsICAgICAgMSwgICAgICAwICAgICAgIF07XHJcbiAgICAgICAgdmFyIHNoYWRvd3MgICAgICAgICA9IFsgMCwgICAgICAwLCAgICAgIDEsICAgICAgMSAgICAgICBdO1xyXG4gICAgICAgIHZhciByZW5kZXJTaXplTXVsICAgPSBbIC41LCAgICAgMSwgICAgICAxLCAgICAgIDEgICAgICAgXTtcclxuICAgICAgICBcclxuICAgICAgICB2YXIgcmVzdWx0ID0ge1xyXG4gICAgICAgICAgICBjb21wb3NlcjogQm9vbGVhbihjb21wb3NlcltxdWFsaXR5XSksIFxyXG4gICAgICAgICAgICBhbnRpYWxpYXM6IEJvb2xlYW4oYW50aWFsaWFzW3F1YWxpdHldKSxcclxuICAgICAgICAgICAgc2hhZG93czogQm9vbGVhbihzaGFkb3dzW3F1YWxpdHldKSxcclxuICAgICAgICAgICAgcmVuZGVyU2l6ZU11bDogcmVuZGVyU2l6ZU11bFtxdWFsaXR5XVxyXG4gICAgICAgIH07XHJcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcclxuICAgIH1cclxuXHJcbiAgICBPblRlc3RDb21wbGV0ZShxdWFsaXR5KXtcclxuICAgICAgICB2YXIgcmVzdWx0ID0gdGhpcy5Db21tb24ocXVhbGl0eSk7XHJcbiAgICAgICAgdGhpcy50ZXN0Q2FsbGJhY2socmVzdWx0KTtcclxuICAgIH1cclxuXHJcbiAgICBQZXJmb3JtYW5jZVRlc3QxKCl7XHJcbiAgICAgICAgdmFyIHF1YWxpdHkgPSAyO1xyXG4gICAgICAgIC8vIFRlc3Qgd2ViZ2wgc3VwcG9ydGVkIHNoYWRlciBwcmVjaXNpb24sIHNlZSBXZWJHTFJlbmRlcmVyLCBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvV2ViR0xfQVBJL1dlYkdMX2Jlc3RfcHJhY3RpY2VzXHJcbiAgICAgICAgdGhpcy5PblRlc3RDb21wbGV0ZShxdWFsaXR5KTtcclxuICAgIH1cclxuXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFF1YWxpdHk7XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2FwaS91dGlscy9jaWsvUXVhbGl0eS5qcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///51\n");

/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Utils = __webpack_require__(0);\n\nvar _Utils2 = _interopRequireDefault(_Utils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * @typedef RendererParams\r\n * @property {Boolean} antialias\r\n * @property {Boolean} shadows\r\n * @property {Boolean} shadowsAutoUpdate\r\n * @property {Number} clearColor - hex color 0xff7f00\r\n * @property {Number} renderSizeMul\r\n * @property {Boolean} composer\r\n */\n\n/** @type {RendererParams} */\nvar defaultParams = {\n    antialias: true,\n    shadows: true,\n    shadowMapType: THREE.PCFSoftShadowMap,\n    shadowsAutoUpdate: true,\n    clearColor: 0xcfcfcf,\n    renderSizeMul: 1,\n    composer: false\n};\n\nvar Renderer = function () {\n    /**\r\n     * @param {RendererParams} params \r\n     */\n    function Renderer(params) {\n        _classCallCheck(this, Renderer);\n\n        this.params = _Utils2.default.AssignUndefined(params, defaultParams);\n        this.renderer = new THREE.WebGLRenderer({ antialias: this.params.antialias });\n\n        this.renderer.shadowMap.enabled = this.params.shadows;\n        this.renderer.shadowMap.type = this.params.shadowMapType;\n        this.renderer.shadowMap.autoUpdate = this.params.shadowsAutoUpdate;\n\n        this.renderer.physicallyCorrectLights = true;\n        this.renderer.gammaInput = true;\n        this.renderer.gammaOutput = true;\n        this.renderer.toneMapping = THREE.Uncharted2ToneMapping;\n        this.renderer.toneMappingExposure = 1.4;\n        //this.renderer.toneMappingExposure = ;\n\n        this.maxTextureSize = this.renderer.context.getParameter(this.renderer.context.MAX_TEXTURE_SIZE);\n        this.pixelRatio = window.devicePixelRatio !== undefined ? window.devicePixelRatio : 1;\n        this.renderer.setPixelRatio(this.pixelRatio);\n        this.renderer.setClearColor(new THREE.Color(this.params.clearColor), 1);\n\n        this.ResizeRenderer = function (screen) {\n            var newWidth = screen.width * this.params.renderSizeMul;\n            var newHeight = screen.height * this.params.renderSizeMul;\n            this.renderer.setSize(newWidth, newHeight);\n        };\n\n        this.Render = function (scene, camera) {\n            this.renderer.render(scene, camera);\n        };\n\n        this.UpdateShadowMaps = function () {\n            this.renderer.shadowMap.needsUpdate = true;\n        };\n\n        this.ResizeDomElement = function (screen) {\n            this.renderer.domElement.style.width = Math.floor(screen.width) + 'px';\n            this.renderer.domElement.style.height = Math.floor(screen.height) + 'px';\n        };\n\n        this.AdjustCamera = function (screen, camera) {\n            camera.aspect = screen.width / screen.height;\n            camera.updateProjectionMatrix();\n        };\n\n        this.ReconfigureViewport = function (screen, camera) {\n            this.AdjustCamera(screen, camera);\n\n            this.ResizeRenderer(screen);\n            this.ResizeDomElement(screen);\n        };\n\n        if (this.params.composer) {\n            Renderer.UseComposer(this);\n        }\n    }\n\n    _createClass(Renderer, [{\n        key: 'Dispose',\n        value: function Dispose() {\n            this.renderer.dispose();\n        }\n    }], [{\n        key: 'UseComposer',\n        value: function UseComposer(sceneRenderer) {\n            sceneRenderer.composer = new THREE.EffectComposer(sceneRenderer.renderer);\n            sceneRenderer.renderPass = new THREE.RenderPass(undefined, undefined);\n            sceneRenderer.renderPass.renderToScreen = true;\n            sceneRenderer.composer.addPass(sceneRenderer.renderPass);\n            sceneRenderer.renderPasses = [sceneRenderer.renderPass];\n\n            sceneRenderer.UseCamera = function (camera) {\n                sceneRenderer.camera = camera;\n                sceneRenderer.renderPass.camera = camera;\n            };\n\n            sceneRenderer.ResizeRenderer = function (screen) {\n                var newWidth = screen.width * sceneRenderer.params.renderSizeMul;\n                var newHeight = screen.height * sceneRenderer.params.renderSizeMul;\n                sceneRenderer.renderer.setSize(newWidth, newHeight);\n\n                newWidth = Math.floor(newWidth / sceneRenderer.pixelRatio) || 1;\n                newHeight = Math.floor(newWidth / sceneRenderer.pixelRatio) || 1;\n                sceneRenderer.composer.setSize(newWidth, newHeight);\n            };\n\n            sceneRenderer.Render = function (scene) {\n                sceneRenderer.renderPass.scene = scene;\n                sceneRenderer.composer.render();\n            };\n        }\n    }]);\n\n    return Renderer;\n}();\n\nexports.default = Renderer;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXBpL3NjZW5lL1JlbmRlcmVyLmpzP2M1ZTkiXSwibmFtZXMiOlsiZGVmYXVsdFBhcmFtcyIsImFudGlhbGlhcyIsInNoYWRvd3MiLCJzaGFkb3dNYXBUeXBlIiwiVEhSRUUiLCJQQ0ZTb2Z0U2hhZG93TWFwIiwic2hhZG93c0F1dG9VcGRhdGUiLCJjbGVhckNvbG9yIiwicmVuZGVyU2l6ZU11bCIsImNvbXBvc2VyIiwiUmVuZGVyZXIiLCJwYXJhbXMiLCJVdGlscyIsIkFzc2lnblVuZGVmaW5lZCIsInJlbmRlcmVyIiwiV2ViR0xSZW5kZXJlciIsInNoYWRvd01hcCIsImVuYWJsZWQiLCJ0eXBlIiwiYXV0b1VwZGF0ZSIsInBoeXNpY2FsbHlDb3JyZWN0TGlnaHRzIiwiZ2FtbWFJbnB1dCIsImdhbW1hT3V0cHV0IiwidG9uZU1hcHBpbmciLCJVbmNoYXJ0ZWQyVG9uZU1hcHBpbmciLCJ0b25lTWFwcGluZ0V4cG9zdXJlIiwibWF4VGV4dHVyZVNpemUiLCJjb250ZXh0IiwiZ2V0UGFyYW1ldGVyIiwiTUFYX1RFWFRVUkVfU0laRSIsInBpeGVsUmF0aW8iLCJ3aW5kb3ciLCJkZXZpY2VQaXhlbFJhdGlvIiwidW5kZWZpbmVkIiwic2V0UGl4ZWxSYXRpbyIsInNldENsZWFyQ29sb3IiLCJDb2xvciIsIlJlc2l6ZVJlbmRlcmVyIiwic2NyZWVuIiwibmV3V2lkdGgiLCJ3aWR0aCIsIm5ld0hlaWdodCIsImhlaWdodCIsInNldFNpemUiLCJSZW5kZXIiLCJzY2VuZSIsImNhbWVyYSIsInJlbmRlciIsIlVwZGF0ZVNoYWRvd01hcHMiLCJuZWVkc1VwZGF0ZSIsIlJlc2l6ZURvbUVsZW1lbnQiLCJkb21FbGVtZW50Iiwic3R5bGUiLCJNYXRoIiwiZmxvb3IiLCJBZGp1c3RDYW1lcmEiLCJhc3BlY3QiLCJ1cGRhdGVQcm9qZWN0aW9uTWF0cml4IiwiUmVjb25maWd1cmVWaWV3cG9ydCIsIlVzZUNvbXBvc2VyIiwiZGlzcG9zZSIsInNjZW5lUmVuZGVyZXIiLCJFZmZlY3RDb21wb3NlciIsInJlbmRlclBhc3MiLCJSZW5kZXJQYXNzIiwicmVuZGVyVG9TY3JlZW4iLCJhZGRQYXNzIiwicmVuZGVyUGFzc2VzIiwiVXNlQ2FtZXJhIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOzs7Ozs7OztBQUVBOzs7Ozs7Ozs7O0FBVUE7QUFDQSxJQUFNQSxnQkFBZ0I7QUFDbEJDLGVBQVcsSUFETztBQUVsQkMsYUFBUyxJQUZTO0FBR2xCQyxtQkFBZUMsTUFBTUMsZ0JBSEg7QUFJbEJDLHVCQUFtQixJQUpEO0FBS2xCQyxnQkFBWSxRQUxNO0FBTWxCQyxtQkFBZSxDQU5HO0FBT2xCQyxjQUFVO0FBUFEsQ0FBdEI7O0lBVU1DLFE7QUFDRjs7O0FBR0Esc0JBQVlDLE1BQVosRUFBb0I7QUFBQTs7QUFFaEIsYUFBS0EsTUFBTCxHQUFjQyxnQkFBTUMsZUFBTixDQUFzQkYsTUFBdEIsRUFBOEJYLGFBQTlCLENBQWQ7QUFDQSxhQUFLYyxRQUFMLEdBQWdCLElBQUlWLE1BQU1XLGFBQVYsQ0FBd0IsRUFBQ2QsV0FBVyxLQUFLVSxNQUFMLENBQVlWLFNBQXhCLEVBQXhCLENBQWhCOztBQUVBLGFBQUthLFFBQUwsQ0FBY0UsU0FBZCxDQUF3QkMsT0FBeEIsR0FBa0MsS0FBS04sTUFBTCxDQUFZVCxPQUE5QztBQUNBLGFBQUtZLFFBQUwsQ0FBY0UsU0FBZCxDQUF3QkUsSUFBeEIsR0FBK0IsS0FBS1AsTUFBTCxDQUFZUixhQUEzQztBQUNBLGFBQUtXLFFBQUwsQ0FBY0UsU0FBZCxDQUF3QkcsVUFBeEIsR0FBcUMsS0FBS1IsTUFBTCxDQUFZTCxpQkFBakQ7O0FBRUEsYUFBS1EsUUFBTCxDQUFjTSx1QkFBZCxHQUF3QyxJQUF4QztBQUNBLGFBQUtOLFFBQUwsQ0FBY08sVUFBZCxHQUEyQixJQUEzQjtBQUNBLGFBQUtQLFFBQUwsQ0FBY1EsV0FBZCxHQUE0QixJQUE1QjtBQUNBLGFBQUtSLFFBQUwsQ0FBY1MsV0FBZCxHQUE0Qm5CLE1BQU1vQixxQkFBbEM7QUFDQSxhQUFLVixRQUFMLENBQWNXLG1CQUFkLEdBQW9DLEdBQXBDO0FBQ0E7O0FBRUEsYUFBS0MsY0FBTCxHQUFzQixLQUFLWixRQUFMLENBQWNhLE9BQWQsQ0FBc0JDLFlBQXRCLENBQW1DLEtBQUtkLFFBQUwsQ0FBY2EsT0FBZCxDQUFzQkUsZ0JBQXpELENBQXRCO0FBQ0EsYUFBS0MsVUFBTCxHQUFrQkMsT0FBT0MsZ0JBQVAsS0FBNEJDLFNBQTVCLEdBQXdDRixPQUFPQyxnQkFBL0MsR0FBa0UsQ0FBcEY7QUFDQSxhQUFLbEIsUUFBTCxDQUFjb0IsYUFBZCxDQUE0QixLQUFLSixVQUFqQztBQUNBLGFBQUtoQixRQUFMLENBQWNxQixhQUFkLENBQTRCLElBQUkvQixNQUFNZ0MsS0FBVixDQUFnQixLQUFLekIsTUFBTCxDQUFZSixVQUE1QixDQUE1QixFQUFxRSxDQUFyRTs7QUFFQSxhQUFLOEIsY0FBTCxHQUFzQixVQUFTQyxNQUFULEVBQWdCO0FBQ2xDLGdCQUFJQyxXQUFXRCxPQUFPRSxLQUFQLEdBQWUsS0FBSzdCLE1BQUwsQ0FBWUgsYUFBMUM7QUFDQSxnQkFBSWlDLFlBQVlILE9BQU9JLE1BQVAsR0FBZ0IsS0FBSy9CLE1BQUwsQ0FBWUgsYUFBNUM7QUFDQSxpQkFBS00sUUFBTCxDQUFjNkIsT0FBZCxDQUFzQkosUUFBdEIsRUFBZ0NFLFNBQWhDO0FBQ0gsU0FKRDs7QUFNQSxhQUFLRyxNQUFMLEdBQWMsVUFBU0MsS0FBVCxFQUFnQkMsTUFBaEIsRUFBdUI7QUFDakMsaUJBQUtoQyxRQUFMLENBQWNpQyxNQUFkLENBQXFCRixLQUFyQixFQUE0QkMsTUFBNUI7QUFDSCxTQUZEOztBQUlBLGFBQUtFLGdCQUFMLEdBQXdCLFlBQVU7QUFDOUIsaUJBQUtsQyxRQUFMLENBQWNFLFNBQWQsQ0FBd0JpQyxXQUF4QixHQUFzQyxJQUF0QztBQUNILFNBRkQ7O0FBSUEsYUFBS0MsZ0JBQUwsR0FBd0IsVUFBU1osTUFBVCxFQUFnQjtBQUNwQyxpQkFBS3hCLFFBQUwsQ0FBY3FDLFVBQWQsQ0FBeUJDLEtBQXpCLENBQStCWixLQUEvQixHQUF1Q2EsS0FBS0MsS0FBTCxDQUFXaEIsT0FBT0UsS0FBbEIsSUFBMkIsSUFBbEU7QUFDQSxpQkFBSzFCLFFBQUwsQ0FBY3FDLFVBQWQsQ0FBeUJDLEtBQXpCLENBQStCVixNQUEvQixHQUF3Q1csS0FBS0MsS0FBTCxDQUFXaEIsT0FBT0ksTUFBbEIsSUFBNEIsSUFBcEU7QUFDSCxTQUhEOztBQUtBLGFBQUthLFlBQUwsR0FBb0IsVUFBU2pCLE1BQVQsRUFBaUJRLE1BQWpCLEVBQXdCO0FBQ3hDQSxtQkFBT1UsTUFBUCxHQUFnQmxCLE9BQU9FLEtBQVAsR0FBZUYsT0FBT0ksTUFBdEM7QUFDQUksbUJBQU9XLHNCQUFQO0FBQ0gsU0FIRDs7QUFLQSxhQUFLQyxtQkFBTCxHQUEyQixVQUFTcEIsTUFBVCxFQUFpQlEsTUFBakIsRUFBd0I7QUFDL0MsaUJBQUtTLFlBQUwsQ0FBa0JqQixNQUFsQixFQUEwQlEsTUFBMUI7O0FBRUEsaUJBQUtULGNBQUwsQ0FBb0JDLE1BQXBCO0FBQ0EsaUJBQUtZLGdCQUFMLENBQXNCWixNQUF0QjtBQUNILFNBTEQ7O0FBT0EsWUFBRyxLQUFLM0IsTUFBTCxDQUFZRixRQUFmLEVBQXdCO0FBQ3BCQyxxQkFBU2lELFdBQVQsQ0FBcUIsSUFBckI7QUFDSDtBQUNKOzs7O2tDQUVRO0FBQ0wsaUJBQUs3QyxRQUFMLENBQWM4QyxPQUFkO0FBQ0g7OztvQ0FFbUJDLGEsRUFBYztBQUM5QkEsMEJBQWNwRCxRQUFkLEdBQXlCLElBQUlMLE1BQU0wRCxjQUFWLENBQXlCRCxjQUFjL0MsUUFBdkMsQ0FBekI7QUFDQStDLDBCQUFjRSxVQUFkLEdBQTJCLElBQUkzRCxNQUFNNEQsVUFBVixDQUFxQi9CLFNBQXJCLEVBQWdDQSxTQUFoQyxDQUEzQjtBQUNBNEIsMEJBQWNFLFVBQWQsQ0FBeUJFLGNBQXpCLEdBQTBDLElBQTFDO0FBQ0FKLDBCQUFjcEQsUUFBZCxDQUF1QnlELE9BQXZCLENBQStCTCxjQUFjRSxVQUE3QztBQUNBRiwwQkFBY00sWUFBZCxHQUE2QixDQUFDTixjQUFjRSxVQUFmLENBQTdCOztBQUVBRiwwQkFBY08sU0FBZCxHQUEwQixVQUFTdEIsTUFBVCxFQUFnQjtBQUN0Q2UsOEJBQWNmLE1BQWQsR0FBdUJBLE1BQXZCO0FBQ0FlLDhCQUFjRSxVQUFkLENBQXlCakIsTUFBekIsR0FBa0NBLE1BQWxDO0FBQ0gsYUFIRDs7QUFLQWUsMEJBQWN4QixjQUFkLEdBQStCLFVBQVNDLE1BQVQsRUFBZ0I7QUFDM0Msb0JBQUlDLFdBQVdELE9BQU9FLEtBQVAsR0FBZXFCLGNBQWNsRCxNQUFkLENBQXFCSCxhQUFuRDtBQUNBLG9CQUFJaUMsWUFBWUgsT0FBT0ksTUFBUCxHQUFnQm1CLGNBQWNsRCxNQUFkLENBQXFCSCxhQUFyRDtBQUNBcUQsOEJBQWMvQyxRQUFkLENBQXVCNkIsT0FBdkIsQ0FBK0JKLFFBQS9CLEVBQXlDRSxTQUF6Qzs7QUFFQUYsMkJBQVljLEtBQUtDLEtBQUwsQ0FBWWYsV0FBV3NCLGNBQWMvQixVQUFyQyxLQUFxRCxDQUFqRTtBQUNUVyw0QkFBWVksS0FBS0MsS0FBTCxDQUFZZixXQUFXc0IsY0FBYy9CLFVBQXJDLEtBQXFELENBQWpFO0FBQ0ErQiw4QkFBY3BELFFBQWQsQ0FBdUJrQyxPQUF2QixDQUFnQ0osUUFBaEMsRUFBMENFLFNBQTFDO0FBQ00sYUFSRDs7QUFVQW9CLDBCQUFjakIsTUFBZCxHQUF1QixVQUFTQyxLQUFULEVBQWU7QUFDbENnQiw4QkFBY0UsVUFBZCxDQUF5QmxCLEtBQXpCLEdBQWlDQSxLQUFqQztBQUNBZ0IsOEJBQWNwRCxRQUFkLENBQXVCc0MsTUFBdkI7QUFDSCxhQUhEO0FBSUg7Ozs7OztrQkFHVXJDLFEiLCJmaWxlIjoiNTIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVXRpbHMgZnJvbSBcIi4uL3V0aWxzL2Npay9VdGlsc1wiO1xyXG5cclxuLyoqXHJcbiAqIEB0eXBlZGVmIFJlbmRlcmVyUGFyYW1zXHJcbiAqIEBwcm9wZXJ0eSB7Qm9vbGVhbn0gYW50aWFsaWFzXHJcbiAqIEBwcm9wZXJ0eSB7Qm9vbGVhbn0gc2hhZG93c1xyXG4gKiBAcHJvcGVydHkge0Jvb2xlYW59IHNoYWRvd3NBdXRvVXBkYXRlXHJcbiAqIEBwcm9wZXJ0eSB7TnVtYmVyfSBjbGVhckNvbG9yIC0gaGV4IGNvbG9yIDB4ZmY3ZjAwXHJcbiAqIEBwcm9wZXJ0eSB7TnVtYmVyfSByZW5kZXJTaXplTXVsXHJcbiAqIEBwcm9wZXJ0eSB7Qm9vbGVhbn0gY29tcG9zZXJcclxuICovXHJcblxyXG4vKiogQHR5cGUge1JlbmRlcmVyUGFyYW1zfSAqL1xyXG5jb25zdCBkZWZhdWx0UGFyYW1zID0ge1xyXG4gICAgYW50aWFsaWFzOiB0cnVlLFxyXG4gICAgc2hhZG93czogdHJ1ZSxcclxuICAgIHNoYWRvd01hcFR5cGU6IFRIUkVFLlBDRlNvZnRTaGFkb3dNYXAsXHJcbiAgICBzaGFkb3dzQXV0b1VwZGF0ZTogdHJ1ZSxcclxuICAgIGNsZWFyQ29sb3I6IDB4Y2ZjZmNmLFxyXG4gICAgcmVuZGVyU2l6ZU11bDogMSxcclxuICAgIGNvbXBvc2VyOiBmYWxzZVxyXG59O1xyXG5cclxuY2xhc3MgUmVuZGVyZXIge1xyXG4gICAgLyoqXHJcbiAgICAgKiBAcGFyYW0ge1JlbmRlcmVyUGFyYW1zfSBwYXJhbXMgXHJcbiAgICAgKi9cclxuICAgIGNvbnN0cnVjdG9yKHBhcmFtcykge1xyXG5cclxuICAgICAgICB0aGlzLnBhcmFtcyA9IFV0aWxzLkFzc2lnblVuZGVmaW5lZChwYXJhbXMsIGRlZmF1bHRQYXJhbXMpO1xyXG4gICAgICAgIHRoaXMucmVuZGVyZXIgPSBuZXcgVEhSRUUuV2ViR0xSZW5kZXJlcih7YW50aWFsaWFzOiB0aGlzLnBhcmFtcy5hbnRpYWxpYXN9KTtcclxuXHJcbiAgICAgICAgdGhpcy5yZW5kZXJlci5zaGFkb3dNYXAuZW5hYmxlZCA9IHRoaXMucGFyYW1zLnNoYWRvd3M7XHJcbiAgICAgICAgdGhpcy5yZW5kZXJlci5zaGFkb3dNYXAudHlwZSA9IHRoaXMucGFyYW1zLnNoYWRvd01hcFR5cGU7XHJcbiAgICAgICAgdGhpcy5yZW5kZXJlci5zaGFkb3dNYXAuYXV0b1VwZGF0ZSA9IHRoaXMucGFyYW1zLnNoYWRvd3NBdXRvVXBkYXRlO1xyXG5cclxuICAgICAgICB0aGlzLnJlbmRlcmVyLnBoeXNpY2FsbHlDb3JyZWN0TGlnaHRzID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLnJlbmRlcmVyLmdhbW1hSW5wdXQgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMucmVuZGVyZXIuZ2FtbWFPdXRwdXQgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMucmVuZGVyZXIudG9uZU1hcHBpbmcgPSBUSFJFRS5VbmNoYXJ0ZWQyVG9uZU1hcHBpbmc7XHJcbiAgICAgICAgdGhpcy5yZW5kZXJlci50b25lTWFwcGluZ0V4cG9zdXJlID0gMS40O1xyXG4gICAgICAgIC8vdGhpcy5yZW5kZXJlci50b25lTWFwcGluZ0V4cG9zdXJlID0gO1xyXG4gICAgICAgIFxyXG4gICAgICAgIHRoaXMubWF4VGV4dHVyZVNpemUgPSB0aGlzLnJlbmRlcmVyLmNvbnRleHQuZ2V0UGFyYW1ldGVyKHRoaXMucmVuZGVyZXIuY29udGV4dC5NQVhfVEVYVFVSRV9TSVpFKTtcclxuICAgICAgICB0aGlzLnBpeGVsUmF0aW8gPSB3aW5kb3cuZGV2aWNlUGl4ZWxSYXRpbyAhPT0gdW5kZWZpbmVkID8gd2luZG93LmRldmljZVBpeGVsUmF0aW8gOiAxO1xyXG4gICAgICAgIHRoaXMucmVuZGVyZXIuc2V0UGl4ZWxSYXRpbyh0aGlzLnBpeGVsUmF0aW8pO1xyXG4gICAgICAgIHRoaXMucmVuZGVyZXIuc2V0Q2xlYXJDb2xvcihuZXcgVEhSRUUuQ29sb3IodGhpcy5wYXJhbXMuY2xlYXJDb2xvciksIDEpO1xyXG5cclxuICAgICAgICB0aGlzLlJlc2l6ZVJlbmRlcmVyID0gZnVuY3Rpb24oc2NyZWVuKXtcclxuICAgICAgICAgICAgdmFyIG5ld1dpZHRoID0gc2NyZWVuLndpZHRoICogdGhpcy5wYXJhbXMucmVuZGVyU2l6ZU11bDtcclxuICAgICAgICAgICAgdmFyIG5ld0hlaWdodCA9IHNjcmVlbi5oZWlnaHQgKiB0aGlzLnBhcmFtcy5yZW5kZXJTaXplTXVsO1xyXG4gICAgICAgICAgICB0aGlzLnJlbmRlcmVyLnNldFNpemUobmV3V2lkdGgsIG5ld0hlaWdodCk7XHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgdGhpcy5SZW5kZXIgPSBmdW5jdGlvbihzY2VuZSwgY2FtZXJhKXtcclxuICAgICAgICAgICAgdGhpcy5yZW5kZXJlci5yZW5kZXIoc2NlbmUsIGNhbWVyYSk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICBcclxuICAgICAgICB0aGlzLlVwZGF0ZVNoYWRvd01hcHMgPSBmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICB0aGlzLnJlbmRlcmVyLnNoYWRvd01hcC5uZWVkc1VwZGF0ZSA9IHRydWU7XHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgdGhpcy5SZXNpemVEb21FbGVtZW50ID0gZnVuY3Rpb24oc2NyZWVuKXtcclxuICAgICAgICAgICAgdGhpcy5yZW5kZXJlci5kb21FbGVtZW50LnN0eWxlLndpZHRoID0gTWF0aC5mbG9vcihzY3JlZW4ud2lkdGgpICsgJ3B4JztcclxuICAgICAgICAgICAgdGhpcy5yZW5kZXJlci5kb21FbGVtZW50LnN0eWxlLmhlaWdodCA9IE1hdGguZmxvb3Ioc2NyZWVuLmhlaWdodCkgKyAncHgnO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHRoaXMuQWRqdXN0Q2FtZXJhID0gZnVuY3Rpb24oc2NyZWVuLCBjYW1lcmEpe1xyXG4gICAgICAgICAgICBjYW1lcmEuYXNwZWN0ID0gc2NyZWVuLndpZHRoIC8gc2NyZWVuLmhlaWdodDtcclxuICAgICAgICAgICAgY2FtZXJhLnVwZGF0ZVByb2plY3Rpb25NYXRyaXgoKTtcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICB0aGlzLlJlY29uZmlndXJlVmlld3BvcnQgPSBmdW5jdGlvbihzY3JlZW4sIGNhbWVyYSl7XHJcbiAgICAgICAgICAgIHRoaXMuQWRqdXN0Q2FtZXJhKHNjcmVlbiwgY2FtZXJhKTtcclxuXHJcbiAgICAgICAgICAgIHRoaXMuUmVzaXplUmVuZGVyZXIoc2NyZWVuKTtcclxuICAgICAgICAgICAgdGhpcy5SZXNpemVEb21FbGVtZW50KHNjcmVlbik7XHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgaWYodGhpcy5wYXJhbXMuY29tcG9zZXIpe1xyXG4gICAgICAgICAgICBSZW5kZXJlci5Vc2VDb21wb3Nlcih0aGlzKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgRGlzcG9zZSgpe1xyXG4gICAgICAgIHRoaXMucmVuZGVyZXIuZGlzcG9zZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBVc2VDb21wb3NlciAoc2NlbmVSZW5kZXJlcil7XHJcbiAgICAgICAgc2NlbmVSZW5kZXJlci5jb21wb3NlciA9IG5ldyBUSFJFRS5FZmZlY3RDb21wb3NlcihzY2VuZVJlbmRlcmVyLnJlbmRlcmVyKTtcclxuICAgICAgICBzY2VuZVJlbmRlcmVyLnJlbmRlclBhc3MgPSBuZXcgVEhSRUUuUmVuZGVyUGFzcyh1bmRlZmluZWQsIHVuZGVmaW5lZCk7XHJcbiAgICAgICAgc2NlbmVSZW5kZXJlci5yZW5kZXJQYXNzLnJlbmRlclRvU2NyZWVuID0gdHJ1ZTtcclxuICAgICAgICBzY2VuZVJlbmRlcmVyLmNvbXBvc2VyLmFkZFBhc3Moc2NlbmVSZW5kZXJlci5yZW5kZXJQYXNzKTtcclxuICAgICAgICBzY2VuZVJlbmRlcmVyLnJlbmRlclBhc3NlcyA9IFtzY2VuZVJlbmRlcmVyLnJlbmRlclBhc3NdO1xyXG5cclxuICAgICAgICBzY2VuZVJlbmRlcmVyLlVzZUNhbWVyYSA9IGZ1bmN0aW9uKGNhbWVyYSl7XHJcbiAgICAgICAgICAgIHNjZW5lUmVuZGVyZXIuY2FtZXJhID0gY2FtZXJhO1xyXG4gICAgICAgICAgICBzY2VuZVJlbmRlcmVyLnJlbmRlclBhc3MuY2FtZXJhID0gY2FtZXJhO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHNjZW5lUmVuZGVyZXIuUmVzaXplUmVuZGVyZXIgPSBmdW5jdGlvbihzY3JlZW4pe1xyXG4gICAgICAgICAgICB2YXIgbmV3V2lkdGggPSBzY3JlZW4ud2lkdGggKiBzY2VuZVJlbmRlcmVyLnBhcmFtcy5yZW5kZXJTaXplTXVsO1xyXG4gICAgICAgICAgICB2YXIgbmV3SGVpZ2h0ID0gc2NyZWVuLmhlaWdodCAqIHNjZW5lUmVuZGVyZXIucGFyYW1zLnJlbmRlclNpemVNdWw7XHJcbiAgICAgICAgICAgIHNjZW5lUmVuZGVyZXIucmVuZGVyZXIuc2V0U2l6ZShuZXdXaWR0aCwgbmV3SGVpZ2h0KTtcclxuXHJcbiAgICAgICAgICAgIG5ld1dpZHRoICA9IE1hdGguZmxvb3IoIG5ld1dpZHRoIC8gc2NlbmVSZW5kZXJlci5waXhlbFJhdGlvICkgfHwgMTtcclxuXHRcdFx0bmV3SGVpZ2h0ID0gTWF0aC5mbG9vciggbmV3V2lkdGggLyBzY2VuZVJlbmRlcmVyLnBpeGVsUmF0aW8gKSB8fCAxO1xyXG5cdFx0XHRzY2VuZVJlbmRlcmVyLmNvbXBvc2VyLnNldFNpemUoIG5ld1dpZHRoLCBuZXdIZWlnaHQgKTtcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICBzY2VuZVJlbmRlcmVyLlJlbmRlciA9IGZ1bmN0aW9uKHNjZW5lKXtcclxuICAgICAgICAgICAgc2NlbmVSZW5kZXJlci5yZW5kZXJQYXNzLnNjZW5lID0gc2NlbmU7XHJcbiAgICAgICAgICAgIHNjZW5lUmVuZGVyZXIuY29tcG9zZXIucmVuZGVyKCk7XHJcbiAgICAgICAgfTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgUmVuZGVyZXI7XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2FwaS9zY2VuZS9SZW5kZXJlci5qcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///52\n");

/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Controller2 = __webpack_require__(33);\n\nvar _Controller3 = _interopRequireDefault(_Controller2);\n\nvar _Camera = __webpack_require__(14);\n\nvar _Camera2 = _interopRequireDefault(_Camera);\n\nvar _Transform = __webpack_require__(54);\n\nvar _Transform2 = _interopRequireDefault(_Transform);\n\nvar _Utils = __webpack_require__(0);\n\nvar _Utils2 = _interopRequireDefault(_Utils);\n\nvar _EntryInputView = __webpack_require__(34);\n\nvar _EntryInputView2 = _interopRequireDefault(_EntryInputView);\n\nvar _CargoEntry = __webpack_require__(6);\n\nvar _CargoEntry2 = _interopRequireDefault(_CargoEntry);\n\nvar _SceneSetup = __webpack_require__(13);\n\nvar _SceneSetup2 = _interopRequireDefault(_SceneSetup);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\r\n * @typedef {Object} HUDViewParams\r\n * @property {import('../UX').default} ux\r\n * @property {SceneSetup} sceneSetup\r\n * @property {HTMLElement} container\r\n */\n\n/** @type {HUDViewParams} */\nvar defaultParams = {};\n\n// -11.3, 23.9, 215.5\nvar defaultCamTRS = new _Transform2.default(new THREE.Vector3(0, 100, 800), new THREE.Euler(0, Math.PI, 0));\n\nvar HUDView = function (_Controller) {\n    _inherits(HUDView, _Controller);\n\n    /**\r\n     * @param {HUDViewParams} params \r\n     * @param {import('../scene/Camera').CameraParams} cameraParams \r\n     */\n    function HUDView(params, cameraParams) {\n        _classCallCheck(this, HUDView);\n\n        var _this = _possibleConstructorReturn(this, (HUDView.__proto__ || Object.getPrototypeOf(HUDView)).call(this, params));\n\n        _this.params = _Utils2.default.AssignUndefined(params, defaultParams);\n\n        var units = _this.params.ux.params.units;\n\n        _this.cameraController = new _Camera2.default(cameraParams);\n\n        _this.cameraTransform = defaultCamTRS.Clone();\n        _this.cameraTransform.position.multiplyScalar(units);\n        _this.cameraTransform.Apply(_this.cameraController);\n        _this.cameraController.camera.updateMatrixWorld();\n        _this.cameraController.OrbitControls(_this.params.container);\n        _this.cameraController.SetTarget(new THREE.Vector3());\n        _this.cameraController.Hold();\n\n        //var gridHelper = new THREE.GridHelper(100 * units, 20);\n        //this.AddDefault(gridHelper);\n\n        /** @type {EntryInputViewParams} */\n        var entryInputViewParams = { ux: _this.params.ux, sceneSetup: _this.params.sceneSetup, scaleFigure: _this.params.ux.params.scaleRefFigure };\n        _this.entryInputView = new _EntryInputView2.default(entryInputViewParams);\n        _this.AddDefault(_this.entryInputView.view);\n\n        _this.lastUpdateTime = 0;\n\n        _this.params.sceneSetup.input.onMouseUp.push(_this.OnMouseUp.bind(_this));\n        return _this;\n    }\n\n    _createClass(HUDView, [{\n        key: \"OnMouseUp\",\n        value: function OnMouseUp() {\n            if (this.entryInputView.previewing) {\n                this.entryInputView.Preview(false);\n            }\n        }\n\n        /**\r\n         * @param {CargoEntry} entry \r\n         */\n\n    }, {\n        key: \"Preview\",\n        value: function Preview(entry) {\n            this.entryInputView.Preview(entry);\n        }\n\n        /** @param {Number} now */\n\n    }, {\n        key: \"Update\",\n        value: function Update(now) {\n            var deltaTime = now - this.lastUpdateTime;\n            this.lastUpdateTime = now;\n            this.cameraController.Update();\n\n            this.entryInputView.Update(now, deltaTime);\n        }\n    }]);\n\n    return HUDView;\n}(_Controller3.default);\n\nexports.default = HUDView;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXBpL3ZpZXcvSFVEVmlldy5qcz82M2U3Il0sIm5hbWVzIjpbImRlZmF1bHRQYXJhbXMiLCJkZWZhdWx0Q2FtVFJTIiwiVHJhbnNmb3JtIiwiVEhSRUUiLCJWZWN0b3IzIiwiRXVsZXIiLCJNYXRoIiwiUEkiLCJIVURWaWV3IiwicGFyYW1zIiwiY2FtZXJhUGFyYW1zIiwiVXRpbHMiLCJBc3NpZ25VbmRlZmluZWQiLCJ1bml0cyIsInV4IiwiY2FtZXJhQ29udHJvbGxlciIsIkNhbWVyYSIsImNhbWVyYVRyYW5zZm9ybSIsIkNsb25lIiwicG9zaXRpb24iLCJtdWx0aXBseVNjYWxhciIsIkFwcGx5IiwiY2FtZXJhIiwidXBkYXRlTWF0cml4V29ybGQiLCJPcmJpdENvbnRyb2xzIiwiY29udGFpbmVyIiwiU2V0VGFyZ2V0IiwiSG9sZCIsImVudHJ5SW5wdXRWaWV3UGFyYW1zIiwic2NlbmVTZXR1cCIsInNjYWxlRmlndXJlIiwic2NhbGVSZWZGaWd1cmUiLCJlbnRyeUlucHV0VmlldyIsIkVudHJ5SW5wdXRWaWV3IiwiQWRkRGVmYXVsdCIsInZpZXciLCJsYXN0VXBkYXRlVGltZSIsImlucHV0Iiwib25Nb3VzZVVwIiwicHVzaCIsIk9uTW91c2VVcCIsImJpbmQiLCJwcmV2aWV3aW5nIiwiUHJldmlldyIsImVudHJ5Iiwibm93IiwiZGVsdGFUaW1lIiwiVXBkYXRlIiwiQ29udHJvbGxlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7Ozs7Ozs7Ozs7O0FBRUE7Ozs7Ozs7QUFPQTtBQUNBLElBQU1BLGdCQUFnQixFQUF0Qjs7QUFFQTtBQUNBLElBQU1DLGdCQUFnQixJQUFJQyxtQkFBSixDQUFlLElBQUlDLE1BQU1DLE9BQVYsQ0FBa0IsQ0FBbEIsRUFBcUIsR0FBckIsRUFBMEIsR0FBMUIsQ0FBZixFQUErQyxJQUFJRCxNQUFNRSxLQUFWLENBQWdCLENBQWhCLEVBQW1CQyxLQUFLQyxFQUF4QixFQUE0QixDQUE1QixDQUEvQyxDQUF0Qjs7SUFFTUMsTzs7O0FBQ0Y7Ozs7QUFJQSxxQkFBWUMsTUFBWixFQUFvQkMsWUFBcEIsRUFBaUM7QUFBQTs7QUFBQSxzSEFDdkJELE1BRHVCOztBQUc3QixjQUFLQSxNQUFMLEdBQWNFLGdCQUFNQyxlQUFOLENBQXNCSCxNQUF0QixFQUE4QlQsYUFBOUIsQ0FBZDs7QUFFQSxZQUFJYSxRQUFRLE1BQUtKLE1BQUwsQ0FBWUssRUFBWixDQUFlTCxNQUFmLENBQXNCSSxLQUFsQzs7QUFFQSxjQUFLRSxnQkFBTCxHQUF3QixJQUFJQyxnQkFBSixDQUFXTixZQUFYLENBQXhCOztBQUVBLGNBQUtPLGVBQUwsR0FBdUJoQixjQUFjaUIsS0FBZCxFQUF2QjtBQUNBLGNBQUtELGVBQUwsQ0FBcUJFLFFBQXJCLENBQThCQyxjQUE5QixDQUE2Q1AsS0FBN0M7QUFDQSxjQUFLSSxlQUFMLENBQXFCSSxLQUFyQixDQUEyQixNQUFLTixnQkFBaEM7QUFDQSxjQUFLQSxnQkFBTCxDQUFzQk8sTUFBdEIsQ0FBNkJDLGlCQUE3QjtBQUNBLGNBQUtSLGdCQUFMLENBQXNCUyxhQUF0QixDQUFvQyxNQUFLZixNQUFMLENBQVlnQixTQUFoRDtBQUNBLGNBQUtWLGdCQUFMLENBQXNCVyxTQUF0QixDQUFnQyxJQUFJdkIsTUFBTUMsT0FBVixFQUFoQztBQUNBLGNBQUtXLGdCQUFMLENBQXNCWSxJQUF0Qjs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsWUFBSUMsdUJBQXVCLEVBQUNkLElBQUksTUFBS0wsTUFBTCxDQUFZSyxFQUFqQixFQUFxQmUsWUFBWSxNQUFLcEIsTUFBTCxDQUFZb0IsVUFBN0MsRUFBeURDLGFBQWEsTUFBS3JCLE1BQUwsQ0FBWUssRUFBWixDQUFlTCxNQUFmLENBQXNCc0IsY0FBNUYsRUFBM0I7QUFDQSxjQUFLQyxjQUFMLEdBQXNCLElBQUlDLHdCQUFKLENBQW1CTCxvQkFBbkIsQ0FBdEI7QUFDQSxjQUFLTSxVQUFMLENBQWdCLE1BQUtGLGNBQUwsQ0FBb0JHLElBQXBDOztBQUVBLGNBQUtDLGNBQUwsR0FBc0IsQ0FBdEI7O0FBRUEsY0FBSzNCLE1BQUwsQ0FBWW9CLFVBQVosQ0FBdUJRLEtBQXZCLENBQTZCQyxTQUE3QixDQUF1Q0MsSUFBdkMsQ0FBNEMsTUFBS0MsU0FBTCxDQUFlQyxJQUFmLE9BQTVDO0FBM0I2QjtBQTRCaEM7Ozs7b0NBRVU7QUFDUCxnQkFBRyxLQUFLVCxjQUFMLENBQW9CVSxVQUF2QixFQUFrQztBQUM5QixxQkFBS1YsY0FBTCxDQUFvQlcsT0FBcEIsQ0FBNEIsS0FBNUI7QUFDSDtBQUNKOztBQUVEOzs7Ozs7Z0NBR1FDLEssRUFBTTtBQUNWLGlCQUFLWixjQUFMLENBQW9CVyxPQUFwQixDQUE0QkMsS0FBNUI7QUFDSDs7QUFFRDs7OzsrQkFDT0MsRyxFQUFJO0FBQ1AsZ0JBQUlDLFlBQVlELE1BQU0sS0FBS1QsY0FBM0I7QUFDQSxpQkFBS0EsY0FBTCxHQUFzQlMsR0FBdEI7QUFDQSxpQkFBSzlCLGdCQUFMLENBQXNCZ0MsTUFBdEI7O0FBRUEsaUJBQUtmLGNBQUwsQ0FBb0JlLE1BQXBCLENBQTJCRixHQUEzQixFQUFnQ0MsU0FBaEM7QUFDSDs7OztFQXZEaUJFLG9COztrQkEwRFB4QyxPIiwiZmlsZSI6IjUzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENvbnRyb2xsZXIgZnJvbSBcIi4uL3NjZW5lL0NvbnRyb2xsZXJcIjtcclxuaW1wb3J0IENhbWVyYSBmcm9tIFwiLi4vc2NlbmUvQ2FtZXJhXCI7XHJcbmltcG9ydCBUcmFuc2Zvcm0gZnJvbSBcIi4uL3NjZW5lL1RyYW5zZm9ybVwiO1xyXG5pbXBvcnQgVXRpbHMgZnJvbSBcIi4uL3V0aWxzL2Npay9VdGlsc1wiO1xyXG5pbXBvcnQgRW50cnlJbnB1dFZpZXcsIHsgRW50cnlJbnB1dFZpZXdQYXJhbXMgfSBmcm9tIFwiLi9FbnRyeUlucHV0Vmlld1wiO1xyXG5pbXBvcnQgQ2FyZ29FbnRyeSBmcm9tIFwiLi4vY29tcG9uZW50cy9jb21tb24vQ2FyZ29FbnRyeVwiO1xyXG5pbXBvcnQgU2NlbmVTZXR1cCBmcm9tIFwiLi9TY2VuZVNldHVwXCI7XHJcblxyXG4vKipcclxuICogQHR5cGVkZWYge09iamVjdH0gSFVEVmlld1BhcmFtc1xyXG4gKiBAcHJvcGVydHkge2ltcG9ydCgnLi4vVVgnKS5kZWZhdWx0fSB1eFxyXG4gKiBAcHJvcGVydHkge1NjZW5lU2V0dXB9IHNjZW5lU2V0dXBcclxuICogQHByb3BlcnR5IHtIVE1MRWxlbWVudH0gY29udGFpbmVyXHJcbiAqL1xyXG5cclxuLyoqIEB0eXBlIHtIVURWaWV3UGFyYW1zfSAqL1xyXG5jb25zdCBkZWZhdWx0UGFyYW1zID0ge307XHJcblxyXG4vLyAtMTEuMywgMjMuOSwgMjE1LjVcclxuY29uc3QgZGVmYXVsdENhbVRSUyA9IG5ldyBUcmFuc2Zvcm0oIG5ldyBUSFJFRS5WZWN0b3IzKDAsIDEwMCwgODAwKSwgbmV3IFRIUkVFLkV1bGVyKDAsIE1hdGguUEksIDApICk7XHJcblxyXG5jbGFzcyBIVURWaWV3IGV4dGVuZHMgQ29udHJvbGxlciB7XHJcbiAgICAvKipcclxuICAgICAqIEBwYXJhbSB7SFVEVmlld1BhcmFtc30gcGFyYW1zIFxyXG4gICAgICogQHBhcmFtIHtpbXBvcnQoJy4uL3NjZW5lL0NhbWVyYScpLkNhbWVyYVBhcmFtc30gY2FtZXJhUGFyYW1zIFxyXG4gICAgICovXHJcbiAgICBjb25zdHJ1Y3RvcihwYXJhbXMsIGNhbWVyYVBhcmFtcyl7XHJcbiAgICAgICAgc3VwZXIocGFyYW1zKTtcclxuXHJcbiAgICAgICAgdGhpcy5wYXJhbXMgPSBVdGlscy5Bc3NpZ25VbmRlZmluZWQocGFyYW1zLCBkZWZhdWx0UGFyYW1zKTtcclxuXHJcbiAgICAgICAgbGV0IHVuaXRzID0gdGhpcy5wYXJhbXMudXgucGFyYW1zLnVuaXRzO1xyXG5cclxuICAgICAgICB0aGlzLmNhbWVyYUNvbnRyb2xsZXIgPSBuZXcgQ2FtZXJhKGNhbWVyYVBhcmFtcyk7XHJcblxyXG4gICAgICAgIHRoaXMuY2FtZXJhVHJhbnNmb3JtID0gZGVmYXVsdENhbVRSUy5DbG9uZSgpO1xyXG4gICAgICAgIHRoaXMuY2FtZXJhVHJhbnNmb3JtLnBvc2l0aW9uLm11bHRpcGx5U2NhbGFyKHVuaXRzKTtcclxuICAgICAgICB0aGlzLmNhbWVyYVRyYW5zZm9ybS5BcHBseSh0aGlzLmNhbWVyYUNvbnRyb2xsZXIpO1xyXG4gICAgICAgIHRoaXMuY2FtZXJhQ29udHJvbGxlci5jYW1lcmEudXBkYXRlTWF0cml4V29ybGQoKTtcclxuICAgICAgICB0aGlzLmNhbWVyYUNvbnRyb2xsZXIuT3JiaXRDb250cm9scyh0aGlzLnBhcmFtcy5jb250YWluZXIpO1xyXG4gICAgICAgIHRoaXMuY2FtZXJhQ29udHJvbGxlci5TZXRUYXJnZXQobmV3IFRIUkVFLlZlY3RvcjMoKSk7XHJcbiAgICAgICAgdGhpcy5jYW1lcmFDb250cm9sbGVyLkhvbGQoKTtcclxuXHJcbiAgICAgICAgLy92YXIgZ3JpZEhlbHBlciA9IG5ldyBUSFJFRS5HcmlkSGVscGVyKDEwMCAqIHVuaXRzLCAyMCk7XHJcbiAgICAgICAgLy90aGlzLkFkZERlZmF1bHQoZ3JpZEhlbHBlcik7XHJcblxyXG4gICAgICAgIC8qKiBAdHlwZSB7RW50cnlJbnB1dFZpZXdQYXJhbXN9ICovXHJcbiAgICAgICAgbGV0IGVudHJ5SW5wdXRWaWV3UGFyYW1zID0ge3V4OiB0aGlzLnBhcmFtcy51eCwgc2NlbmVTZXR1cDogdGhpcy5wYXJhbXMuc2NlbmVTZXR1cCwgc2NhbGVGaWd1cmU6IHRoaXMucGFyYW1zLnV4LnBhcmFtcy5zY2FsZVJlZkZpZ3VyZX07XHJcbiAgICAgICAgdGhpcy5lbnRyeUlucHV0VmlldyA9IG5ldyBFbnRyeUlucHV0VmlldyhlbnRyeUlucHV0Vmlld1BhcmFtcyk7XHJcbiAgICAgICAgdGhpcy5BZGREZWZhdWx0KHRoaXMuZW50cnlJbnB1dFZpZXcudmlldyk7XHJcblxyXG4gICAgICAgIHRoaXMubGFzdFVwZGF0ZVRpbWUgPSAwO1xyXG5cclxuICAgICAgICB0aGlzLnBhcmFtcy5zY2VuZVNldHVwLmlucHV0Lm9uTW91c2VVcC5wdXNoKHRoaXMuT25Nb3VzZVVwLmJpbmQodGhpcykpO1xyXG4gICAgfVxyXG5cclxuICAgIE9uTW91c2VVcCgpe1xyXG4gICAgICAgIGlmKHRoaXMuZW50cnlJbnB1dFZpZXcucHJldmlld2luZyl7XHJcbiAgICAgICAgICAgIHRoaXMuZW50cnlJbnB1dFZpZXcuUHJldmlldyhmYWxzZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQHBhcmFtIHtDYXJnb0VudHJ5fSBlbnRyeSBcclxuICAgICAqL1xyXG4gICAgUHJldmlldyhlbnRyeSl7XHJcbiAgICAgICAgdGhpcy5lbnRyeUlucHV0Vmlldy5QcmV2aWV3KGVudHJ5KTtcclxuICAgIH1cclxuXHJcbiAgICAvKiogQHBhcmFtIHtOdW1iZXJ9IG5vdyAqL1xyXG4gICAgVXBkYXRlKG5vdyl7XHJcbiAgICAgICAgbGV0IGRlbHRhVGltZSA9IG5vdyAtIHRoaXMubGFzdFVwZGF0ZVRpbWU7XHJcbiAgICAgICAgdGhpcy5sYXN0VXBkYXRlVGltZSA9IG5vdztcclxuICAgICAgICB0aGlzLmNhbWVyYUNvbnRyb2xsZXIuVXBkYXRlKCk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgdGhpcy5lbnRyeUlucHV0Vmlldy5VcGRhdGUobm93LCBkZWx0YVRpbWUpO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBIVURWaWV3O1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9hcGkvdmlldy9IVURWaWV3LmpzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///53\n");

/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _position = Symbol('position');\nvar _rotation = Symbol('rotation');\n\nvar Transform = function () {\n\n    /**\r\n     * @param {THREE.Vector3} position \r\n     * @param {THREE.Euler} rotation \r\n     */\n    function Transform(position, rotation) {\n        _classCallCheck(this, Transform);\n\n        this[_position] = position || new THREE.Vector3();\n        this[_rotation] = rotation || new THREE.Euler();\n    }\n\n    /**\r\n     * @returns {THREE.Vector3}\r\n     */\n\n\n    _createClass(Transform, [{\n        key: 'Apply',\n\n\n        /**\r\n         * \r\n         * @param {THREE.Object3D} target \r\n         */\n        value: function Apply(target) {\n            target.position.copy(this[_position]);\n            target.rotation.copy(this[_rotation]);\n        }\n    }, {\n        key: 'Clone',\n        value: function Clone() {\n            var transform = new Transform(this[_position].clone(), this[_rotation].clone());\n            return transform;\n        }\n    }, {\n        key: 'position',\n        get: function get() {\n            return this[_position];\n        },\n        set: function set(value) {\n            this[_position] = value;\n        }\n\n        /**\r\n         * @returns {THREE.Euler}\r\n         */\n\n    }, {\n        key: 'rotation',\n        get: function get() {\n            return this[_rotation];\n        },\n        set: function set(value) {\n            this[_rotation] = value;\n        }\n    }]);\n\n    return Transform;\n}();\n\nexports.default = Transform;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXBpL3NjZW5lL1RyYW5zZm9ybS5qcz9lMDgwIl0sIm5hbWVzIjpbIl9wb3NpdGlvbiIsIlN5bWJvbCIsIl9yb3RhdGlvbiIsIlRyYW5zZm9ybSIsInBvc2l0aW9uIiwicm90YXRpb24iLCJUSFJFRSIsIlZlY3RvcjMiLCJFdWxlciIsInRhcmdldCIsImNvcHkiLCJ0cmFuc2Zvcm0iLCJjbG9uZSIsInZhbHVlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQ0EsSUFBTUEsWUFBWUMsT0FBTyxVQUFQLENBQWxCO0FBQ0EsSUFBTUMsWUFBWUQsT0FBTyxVQUFQLENBQWxCOztJQUVNRSxTOztBQUVGOzs7O0FBSUEsdUJBQVlDLFFBQVosRUFBc0JDLFFBQXRCLEVBQStCO0FBQUE7O0FBQzNCLGFBQUtMLFNBQUwsSUFBa0JJLFlBQVksSUFBSUUsTUFBTUMsT0FBVixFQUE5QjtBQUNBLGFBQUtMLFNBQUwsSUFBa0JHLFlBQVksSUFBSUMsTUFBTUUsS0FBVixFQUE5QjtBQUNIOztBQUVEOzs7Ozs7Ozs7QUFzQkE7Ozs7OEJBSU1DLE0sRUFBTztBQUNUQSxtQkFBT0wsUUFBUCxDQUFnQk0sSUFBaEIsQ0FBcUIsS0FBS1YsU0FBTCxDQUFyQjtBQUNBUyxtQkFBT0osUUFBUCxDQUFnQkssSUFBaEIsQ0FBcUIsS0FBS1IsU0FBTCxDQUFyQjtBQUNIOzs7Z0NBRU07QUFDSCxnQkFBSVMsWUFBWSxJQUFJUixTQUFKLENBQWMsS0FBS0gsU0FBTCxFQUFnQlksS0FBaEIsRUFBZCxFQUF1QyxLQUFLVixTQUFMLEVBQWdCVSxLQUFoQixFQUF2QyxDQUFoQjtBQUNBLG1CQUFPRCxTQUFQO0FBQ0g7Ozs0QkEvQmE7QUFDVixtQkFBTyxLQUFLWCxTQUFMLENBQVA7QUFDSCxTOzBCQUVZYSxLLEVBQU07QUFDZixpQkFBS2IsU0FBTCxJQUFrQmEsS0FBbEI7QUFDSDs7QUFFRDs7Ozs7OzRCQUdjO0FBQ1YsbUJBQU8sS0FBS1gsU0FBTCxDQUFQO0FBQ0gsUzswQkFFWVcsSyxFQUFNO0FBQ2YsaUJBQUtYLFNBQUwsSUFBa0JXLEtBQWxCO0FBQ0g7Ozs7OztrQkFpQlVWLFMiLCJmaWxlIjoiNTQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuY29uc3QgX3Bvc2l0aW9uID0gU3ltYm9sKCdwb3NpdGlvbicpO1xyXG5jb25zdCBfcm90YXRpb24gPSBTeW1ib2woJ3JvdGF0aW9uJyk7XHJcblxyXG5jbGFzcyBUcmFuc2Zvcm0ge1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogQHBhcmFtIHtUSFJFRS5WZWN0b3IzfSBwb3NpdGlvbiBcclxuICAgICAqIEBwYXJhbSB7VEhSRUUuRXVsZXJ9IHJvdGF0aW9uIFxyXG4gICAgICovXHJcbiAgICBjb25zdHJ1Y3Rvcihwb3NpdGlvbiwgcm90YXRpb24pe1xyXG4gICAgICAgIHRoaXNbX3Bvc2l0aW9uXSA9IHBvc2l0aW9uIHx8IG5ldyBUSFJFRS5WZWN0b3IzKCk7XHJcbiAgICAgICAgdGhpc1tfcm90YXRpb25dID0gcm90YXRpb24gfHwgbmV3IFRIUkVFLkV1bGVyKCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBAcmV0dXJucyB7VEhSRUUuVmVjdG9yM31cclxuICAgICAqL1xyXG4gICAgZ2V0IHBvc2l0aW9uKCl7XHJcbiAgICAgICAgcmV0dXJuIHRoaXNbX3Bvc2l0aW9uXTtcclxuICAgIH1cclxuXHJcbiAgICBzZXQgcG9zaXRpb24odmFsdWUpe1xyXG4gICAgICAgIHRoaXNbX3Bvc2l0aW9uXSA9IHZhbHVlO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQHJldHVybnMge1RIUkVFLkV1bGVyfVxyXG4gICAgICovXHJcbiAgICBnZXQgcm90YXRpb24oKXtcclxuICAgICAgICByZXR1cm4gdGhpc1tfcm90YXRpb25dO1xyXG4gICAgfVxyXG5cclxuICAgIHNldCByb3RhdGlvbih2YWx1ZSl7XHJcbiAgICAgICAgdGhpc1tfcm90YXRpb25dID0gdmFsdWU7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBcclxuICAgICAqIEBwYXJhbSB7VEhSRUUuT2JqZWN0M0R9IHRhcmdldCBcclxuICAgICAqL1xyXG4gICAgQXBwbHkodGFyZ2V0KXtcclxuICAgICAgICB0YXJnZXQucG9zaXRpb24uY29weSh0aGlzW19wb3NpdGlvbl0pO1xyXG4gICAgICAgIHRhcmdldC5yb3RhdGlvbi5jb3B5KHRoaXNbX3JvdGF0aW9uXSk7XHJcbiAgICB9XHJcblxyXG4gICAgQ2xvbmUoKXtcclxuICAgICAgICB2YXIgdHJhbnNmb3JtID0gbmV3IFRyYW5zZm9ybSh0aGlzW19wb3NpdGlvbl0uY2xvbmUoKSwgdGhpc1tfcm90YXRpb25dLmNsb25lKCkpO1xyXG4gICAgICAgIHJldHVybiB0cmFuc2Zvcm07XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFRyYW5zZm9ybTtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvYXBpL3NjZW5lL1RyYW5zZm9ybS5qcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///54\n");

/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TranslationConstraint = exports.RotationConstraint = exports.StackingProperty = exports.PackingProperty = undefined;\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Logger = __webpack_require__(2);\n\nvar _Logger2 = _interopRequireDefault(_Logger);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _enabled = Symbol('enabled');\n\nvar PackingProperty = function () {\n    function PackingProperty() {\n        _classCallCheck(this, PackingProperty);\n\n        this[_enabled] = false;\n    }\n\n    /** @returns {Boolean} Is property enabled */\n\n\n    _createClass(PackingProperty, [{\n        key: 'Reset',\n        value: function Reset() {\n            this.enabled = false;\n        }\n\n        /**\r\n         * @param {PackingProperty} prop \r\n         */\n\n    }, {\n        key: 'Copy',\n        value: function Copy(prop) {\n            this.enabled = prop.enabled;\n        }\n    }, {\n        key: 'Clone',\n        value: function Clone() {\n            _Logger2.default.Warn('PackingProperty.Clone is not implemented');\n        }\n    }, {\n        key: 'enabled',\n        get: function get() {\n            return this[_enabled];\n        },\n        set: function set(value) {\n            this[_enabled] = value;\n        }\n    }], [{\n        key: 'Assert',\n        value: function Assert(prop) {\n            return prop instanceof PackingProperty;\n        }\n    }]);\n\n    return PackingProperty;\n}();\n\nvar StackingProperty = function (_PackingProperty) {\n    _inherits(StackingProperty, _PackingProperty);\n\n    function StackingProperty() {\n        _classCallCheck(this, StackingProperty);\n\n        /** Maximum stacking capacity (weight) */\n        var _this = _possibleConstructorReturn(this, (StackingProperty.__proto__ || Object.getPrototypeOf(StackingProperty)).call(this));\n\n        _this.capacity = Number.MAX_SAFE_INTEGER;\n        return _this;\n    }\n\n    _createClass(StackingProperty, [{\n        key: 'Reset',\n        value: function Reset() {\n            _get(StackingProperty.prototype.__proto__ || Object.getPrototypeOf(StackingProperty.prototype), 'Reset', this).call(this);\n            this.capacity = Number.MAX_SAFE_INTEGER;\n        }\n\n        /**\r\n         * @param {StackingProperty} prop \r\n         */\n\n    }, {\n        key: 'Copy',\n        value: function Copy(prop) {\n            _get(StackingProperty.prototype.__proto__ || Object.getPrototypeOf(StackingProperty.prototype), 'Copy', this).call(this, prop);\n            this.capacity = prop.capacity;\n        }\n    }, {\n        key: 'Clone',\n        value: function Clone() {\n            var prop = new StackingProperty();\n            prop.Copy(this);\n            return prop;\n        }\n    }]);\n\n    return StackingProperty;\n}(PackingProperty);\n\nvar Constraint = function (_PackingProperty2) {\n    _inherits(Constraint, _PackingProperty2);\n\n    function Constraint() {\n        _classCallCheck(this, Constraint);\n\n        return _possibleConstructorReturn(this, (Constraint.__proto__ || Object.getPrototypeOf(Constraint)).call(this));\n    }\n\n    _createClass(Constraint, [{\n        key: 'Copy',\n        value: function Copy(prop) {\n            _get(Constraint.prototype.__proto__ || Object.getPrototypeOf(Constraint.prototype), 'Copy', this).call(this, prop);\n        }\n    }, {\n        key: 'Clone',\n        value: function Clone() {\n            _Logger2.default.Warn('Constraint.Clone is not implemented');\n        }\n    }]);\n\n    return Constraint;\n}(PackingProperty);\n\nvar orientations = { xyz: 'xyz', zyx: 'zyx', yxz: 'yxz', yzx: 'yzx', zxy: 'zxy', xzy: 'xzy' };\nvar _allowedOrientations = Symbol('allowedOrientations');\n\nvar RotationConstraint = function (_Constraint) {\n    _inherits(RotationConstraint, _Constraint);\n\n    function RotationConstraint() {\n        _classCallCheck(this, RotationConstraint);\n\n        return _possibleConstructorReturn(this, (RotationConstraint.__proto__ || Object.getPrototypeOf(RotationConstraint)).call(this));\n    }\n\n    /** Enables each orientation enumeration in array\r\n     * @param {Array<orientations>} value */\n\n\n    _createClass(RotationConstraint, [{\n        key: 'Reset',\n        value: function Reset() {\n            _get(RotationConstraint.prototype.__proto__ || Object.getPrototypeOf(RotationConstraint.prototype), 'Reset', this).call(this);\n            if (this.allowedOrientations instanceof Array) this.allowedOrientations.length = 0;\n        }\n\n        /** @param {Boolean} allowX @param {Boolean} allowY @param {Boolean} allowZ */\n\n    }, {\n        key: 'SetOrientationsByAxis',\n        value: function SetOrientationsByAxis(allowX, allowY, allowZ) {\n            var allowed = this.allowedOrientations;\n            if (allowed) allowed.length = 0;else allowed = [];\n\n            if (allowY) {\n                allowed.push(orientations.xyz, orientations.zyx);\n\n                if (allowX) allowed.push(orientations.yzx);\n                if (allowZ) allowed.push(orientations.zxy);\n            }\n            if (allowX) allowed.push(orientations.xzy);\n            if (allowZ) allowed.push(orientations.yxz);\n\n            this.allowedOrientations = allowed;\n        }\n\n        /** @param {Boolean} allowWH @param {Boolean} allowLH @param {Boolean} allowWL */\n\n    }, {\n        key: 'SetOrientationsBySide',\n        value: function SetOrientationsBySide(allowWH, allowLH, allowWL) {\n            var allowed = this.allowedOrientations;\n            if (allowed) allowed.length = 0;else allowed = [];\n\n            if (allowWH) allowed.push(orientations.yxz, orientations.yzx);\n            if (allowLH) allowed.push(orientations.xzy, orientations.zxy);\n            if (allowWL) allowed.push(orientations.xyz, orientations.zyx);\n\n            this.allowedOrientations = allowed;\n        }\n\n        /**\r\n         * @param {RotationConstraint} prop \r\n         */\n\n    }, {\n        key: 'Copy',\n        value: function Copy(prop) {\n            _get(RotationConstraint.prototype.__proto__ || Object.getPrototypeOf(RotationConstraint.prototype), 'Copy', this).call(this, prop);\n            this.allowedOrientations = prop.allowedOrientations instanceof Array ? prop.allowedOrientations.slice() : undefined;\n        }\n    }, {\n        key: 'Clone',\n        value: function Clone() {\n            var prop = new RotationConstraint();\n            prop.Copy(this);\n            return prop;\n        }\n\n        /** Enumerations of orientation values, do not modify directly */\n\n    }, {\n        key: 'allowedOrientations',\n        set: function set(value) {\n            this[_allowedOrientations] = value;\n        },\n        get: function get() {\n            return this[_allowedOrientations];\n        }\n    }], [{\n        key: 'orientations',\n        get: function get() {\n            return orientations;\n        }\n    }]);\n\n    return RotationConstraint;\n}(Constraint);\n\nvar TranslationConstraint = function (_Constraint2) {\n    _inherits(TranslationConstraint, _Constraint2);\n\n    function TranslationConstraint() {\n        _classCallCheck(this, TranslationConstraint);\n\n        /** Should be positioned on the platform surface (on the ground) */\n        var _this4 = _possibleConstructorReturn(this, (TranslationConstraint.__proto__ || Object.getPrototypeOf(TranslationConstraint)).call(this));\n\n        _this4.grounded = false;\n        return _this4;\n    }\n\n    _createClass(TranslationConstraint, [{\n        key: 'Reset',\n        value: function Reset() {\n            _get(TranslationConstraint.prototype.__proto__ || Object.getPrototypeOf(TranslationConstraint.prototype), 'Reset', this).call(this);\n            this.grounded = false;\n        }\n\n        /**\r\n         * @param {TranslationConstraint} prop \r\n         */\n\n    }, {\n        key: 'Copy',\n        value: function Copy(prop) {\n            _get(TranslationConstraint.prototype.__proto__ || Object.getPrototypeOf(TranslationConstraint.prototype), 'Copy', this).call(this, prop);\n            this.grounded = prop.grounded;\n        }\n    }, {\n        key: 'Clone',\n        value: function Clone() {\n            var prop = new TranslationConstraint();\n            prop.Copy(this);\n            return prop;\n        }\n    }]);\n\n    return TranslationConstraint;\n}(Constraint);\n\nexports.PackingProperty = PackingProperty;\nexports.StackingProperty = StackingProperty;\nexports.RotationConstraint = RotationConstraint;\nexports.TranslationConstraint = TranslationConstraint;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///55\n");

/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar typeofNumber = 'number';\n\n/** @param {THREE.Color} source @param {Array<THREE.Color>} colors */\nfunction findNearest(source, colors) {\n    var dMin = Number.MAX_SAFE_INTEGER;\n    var nearest = source;\n    colors.forEach(function (color) {\n        var vx = color.r - source.r,\n            vy = color.g - source.g,\n            vz = color.b - source.b;\n        var d = vx * vx + vy * vy + vz * vz;\n        if (d < dMin) {\n            dMin = d;\n            nearest = color;\n        }\n    });\n\n    return nearest;\n}\n\nvar tempColor = new THREE.Color();\n\nvar ColorTemplate = function () {\n    /**\r\n     * @param {Array<string|THREE.Color>} colors \r\n     */\n    function ColorTemplate() {\n        var _this = this;\n\n        _classCallCheck(this, ColorTemplate);\n\n        /** @type {Array<THREE.Color>} */\n        this.colors = [];\n\n        for (var _len = arguments.length, colors = Array(_len), _key = 0; _key < _len; _key++) {\n            colors[_key] = arguments[_key];\n        }\n\n        colors.forEach(function (color) {\n            if (!(color instanceof THREE.Color)) color = new THREE.Color(color);\n            _this.colors.push(color);\n        });\n    }\n\n    /**\r\n     * @template T\r\n     * @param {T} target \r\n     * @returns {T}\r\n     */\n\n\n    _createClass(ColorTemplate, [{\n        key: 'Apply',\n        value: function Apply(target) {\n            var scope = this;\n            if ((typeof target === 'undefined' ? 'undefined' : _typeof(target)) === typeofNumber) {\n                var mapColor = findNearest(tempColor.setHex(target), this.colors);\n                target = mapColor.getHex();\n            } else if (target instanceof THREE.Color) {\n                var _mapColor = findNearest(target, this.colors);\n                target.copy(_mapColor);\n            } else if (target instanceof THREE.Material) {\n                var color = target.color;\n                if (color instanceof THREE.Color) {\n                    var _mapColor2 = findNearest(color, this.colors);\n                    color.copy(_mapColor2);\n                }\n            } else if (target instanceof THREE.Object3D) {\n                target.traverse(function (child) {\n                    if (child instanceof THREE.Mesh) {\n                        scope.Apply(child.material);\n                    }\n                });\n            }\n            return target;\n        }\n    }]);\n\n    return ColorTemplate;\n}();\n\nexports.default = ColorTemplate;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXBpL2NvbXBvbmVudHMvYXNzZXRzL0NvbG9yVGVtcGxhdGUuanM/YzRhNiJdLCJuYW1lcyI6WyJ0eXBlb2ZOdW1iZXIiLCJmaW5kTmVhcmVzdCIsInNvdXJjZSIsImNvbG9ycyIsImRNaW4iLCJOdW1iZXIiLCJNQVhfU0FGRV9JTlRFR0VSIiwibmVhcmVzdCIsImZvckVhY2giLCJ2eCIsImNvbG9yIiwiciIsInZ5IiwiZyIsInZ6IiwiYiIsImQiLCJ0ZW1wQ29sb3IiLCJUSFJFRSIsIkNvbG9yIiwiQ29sb3JUZW1wbGF0ZSIsInB1c2giLCJ0YXJnZXQiLCJzY29wZSIsIm1hcENvbG9yIiwic2V0SGV4IiwiZ2V0SGV4IiwiY29weSIsIk1hdGVyaWFsIiwiT2JqZWN0M0QiLCJ0cmF2ZXJzZSIsImNoaWxkIiwiTWVzaCIsIkFwcGx5IiwibWF0ZXJpYWwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUNBLElBQU1BLGVBQWUsUUFBckI7O0FBRUE7QUFDQSxTQUFTQyxXQUFULENBQXFCQyxNQUFyQixFQUE2QkMsTUFBN0IsRUFBb0M7QUFDaEMsUUFBSUMsT0FBT0MsT0FBT0MsZ0JBQWxCO0FBQ0EsUUFBSUMsVUFBVUwsTUFBZDtBQUNBQyxXQUFPSyxPQUFQLENBQWUsaUJBQVM7QUFDcEIsWUFBSUMsS0FBS0MsTUFBTUMsQ0FBTixHQUFVVCxPQUFPUyxDQUExQjtBQUFBLFlBQ0lDLEtBQUtGLE1BQU1HLENBQU4sR0FBVVgsT0FBT1csQ0FEMUI7QUFBQSxZQUVJQyxLQUFLSixNQUFNSyxDQUFOLEdBQVViLE9BQU9hLENBRjFCO0FBR0EsWUFBSUMsSUFBSVAsS0FBS0EsRUFBTCxHQUFVRyxLQUFLQSxFQUFmLEdBQW9CRSxLQUFLQSxFQUFqQztBQUNBLFlBQUdFLElBQUlaLElBQVAsRUFBWTtBQUNSQSxtQkFBT1ksQ0FBUDtBQUNBVCxzQkFBVUcsS0FBVjtBQUNIO0FBQ0osS0FURDs7QUFXQSxXQUFPSCxPQUFQO0FBQ0g7O0FBRUQsSUFBSVUsWUFBWSxJQUFJQyxNQUFNQyxLQUFWLEVBQWhCOztJQUVNQyxhO0FBQ0Y7OztBQUdBLDZCQUFzQjtBQUFBOztBQUFBOztBQUNsQjtBQUNBLGFBQUtqQixNQUFMLEdBQWMsRUFBZDs7QUFGa0IsMENBQVBBLE1BQU87QUFBUEEsa0JBQU87QUFBQTs7QUFHbEJBLGVBQU9LLE9BQVAsQ0FBZSxpQkFBUztBQUNwQixnQkFBSSxFQUFFRSxpQkFBaUJRLE1BQU1DLEtBQXpCLENBQUosRUFBc0NULFFBQVEsSUFBSVEsTUFBTUMsS0FBVixDQUFnQlQsS0FBaEIsQ0FBUjtBQUN0QyxrQkFBS1AsTUFBTCxDQUFZa0IsSUFBWixDQUFpQlgsS0FBakI7QUFDSCxTQUhEO0FBSUg7O0FBRUQ7Ozs7Ozs7Ozs4QkFLTVksTSxFQUFPO0FBQ1QsZ0JBQUlDLFFBQVEsSUFBWjtBQUNBLGdCQUFHLFFBQU9ELE1BQVAseUNBQU9BLE1BQVAsT0FBa0J0QixZQUFyQixFQUFrQztBQUM5QixvQkFBSXdCLFdBQVd2QixZQUFZZ0IsVUFBVVEsTUFBVixDQUFpQkgsTUFBakIsQ0FBWixFQUFzQyxLQUFLbkIsTUFBM0MsQ0FBZjtBQUNBbUIseUJBQVNFLFNBQVNFLE1BQVQsRUFBVDtBQUNILGFBSEQsTUFJSyxJQUFHSixrQkFBa0JKLE1BQU1DLEtBQTNCLEVBQWlDO0FBQ2xDLG9CQUFJSyxZQUFXdkIsWUFBWXFCLE1BQVosRUFBb0IsS0FBS25CLE1BQXpCLENBQWY7QUFDQW1CLHVCQUFPSyxJQUFQLENBQVlILFNBQVo7QUFDSCxhQUhJLE1BSUEsSUFBR0Ysa0JBQWtCSixNQUFNVSxRQUEzQixFQUFvQztBQUNyQyxvQkFBSWxCLFFBQVFZLE9BQU9aLEtBQW5CO0FBQ0Esb0JBQUdBLGlCQUFpQlEsTUFBTUMsS0FBMUIsRUFBZ0M7QUFDNUIsd0JBQUlLLGFBQVd2QixZQUFZUyxLQUFaLEVBQW1CLEtBQUtQLE1BQXhCLENBQWY7QUFDQU8sMEJBQU1pQixJQUFOLENBQVdILFVBQVg7QUFDSDtBQUNKLGFBTkksTUFPQSxJQUFHRixrQkFBa0JKLE1BQU1XLFFBQTNCLEVBQW9DO0FBQ3JDUCx1QkFBT1EsUUFBUCxDQUFnQixVQUFTQyxLQUFULEVBQWU7QUFDM0Isd0JBQUdBLGlCQUFpQmIsTUFBTWMsSUFBMUIsRUFBK0I7QUFDM0JULDhCQUFNVSxLQUFOLENBQVlGLE1BQU1HLFFBQWxCO0FBQ0g7QUFDSixpQkFKRDtBQUtIO0FBQ0QsbUJBQU9aLE1BQVA7QUFDSDs7Ozs7O2tCQUdVRixhIiwiZmlsZSI6IjU2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmNvbnN0IHR5cGVvZk51bWJlciA9ICdudW1iZXInO1xyXG5cclxuLyoqIEBwYXJhbSB7VEhSRUUuQ29sb3J9IHNvdXJjZSBAcGFyYW0ge0FycmF5PFRIUkVFLkNvbG9yPn0gY29sb3JzICovXHJcbmZ1bmN0aW9uIGZpbmROZWFyZXN0KHNvdXJjZSwgY29sb3JzKXtcclxuICAgIHZhciBkTWluID0gTnVtYmVyLk1BWF9TQUZFX0lOVEVHRVI7XHJcbiAgICB2YXIgbmVhcmVzdCA9IHNvdXJjZTtcclxuICAgIGNvbG9ycy5mb3JFYWNoKGNvbG9yID0+IHtcclxuICAgICAgICBsZXQgdnggPSBjb2xvci5yIC0gc291cmNlLnIsXHJcbiAgICAgICAgICAgIHZ5ID0gY29sb3IuZyAtIHNvdXJjZS5nLFxyXG4gICAgICAgICAgICB2eiA9IGNvbG9yLmIgLSBzb3VyY2UuYjtcclxuICAgICAgICBsZXQgZCA9IHZ4ICogdnggKyB2eSAqIHZ5ICsgdnogKiB2ejtcclxuICAgICAgICBpZihkIDwgZE1pbil7XHJcbiAgICAgICAgICAgIGRNaW4gPSBkO1xyXG4gICAgICAgICAgICBuZWFyZXN0ID0gY29sb3I7XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgcmV0dXJuIG5lYXJlc3Q7XHJcbn1cclxuXHJcbnZhciB0ZW1wQ29sb3IgPSBuZXcgVEhSRUUuQ29sb3IoKTtcclxuXHJcbmNsYXNzIENvbG9yVGVtcGxhdGV7XHJcbiAgICAvKipcclxuICAgICAqIEBwYXJhbSB7QXJyYXk8c3RyaW5nfFRIUkVFLkNvbG9yPn0gY29sb3JzIFxyXG4gICAgICovXHJcbiAgICBjb25zdHJ1Y3RvciguLi5jb2xvcnMpe1xyXG4gICAgICAgIC8qKiBAdHlwZSB7QXJyYXk8VEhSRUUuQ29sb3I+fSAqL1xyXG4gICAgICAgIHRoaXMuY29sb3JzID0gW107XHJcbiAgICAgICAgY29sb3JzLmZvckVhY2goY29sb3IgPT4ge1xyXG4gICAgICAgICAgICBpZiggIShjb2xvciBpbnN0YW5jZW9mIFRIUkVFLkNvbG9yKSApIGNvbG9yID0gbmV3IFRIUkVFLkNvbG9yKGNvbG9yKTtcclxuICAgICAgICAgICAgdGhpcy5jb2xvcnMucHVzaChjb2xvcik7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBAdGVtcGxhdGUgVFxyXG4gICAgICogQHBhcmFtIHtUfSB0YXJnZXQgXHJcbiAgICAgKiBAcmV0dXJucyB7VH1cclxuICAgICAqL1xyXG4gICAgQXBwbHkodGFyZ2V0KXtcclxuICAgICAgICB2YXIgc2NvcGUgPSB0aGlzO1xyXG4gICAgICAgIGlmKHR5cGVvZiB0YXJnZXQgPT09IHR5cGVvZk51bWJlcil7XHJcbiAgICAgICAgICAgIGxldCBtYXBDb2xvciA9IGZpbmROZWFyZXN0KHRlbXBDb2xvci5zZXRIZXgodGFyZ2V0KSwgdGhpcy5jb2xvcnMpO1xyXG4gICAgICAgICAgICB0YXJnZXQgPSBtYXBDb2xvci5nZXRIZXgoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZih0YXJnZXQgaW5zdGFuY2VvZiBUSFJFRS5Db2xvcil7XHJcbiAgICAgICAgICAgIGxldCBtYXBDb2xvciA9IGZpbmROZWFyZXN0KHRhcmdldCwgdGhpcy5jb2xvcnMpO1xyXG4gICAgICAgICAgICB0YXJnZXQuY29weShtYXBDb2xvcik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYodGFyZ2V0IGluc3RhbmNlb2YgVEhSRUUuTWF0ZXJpYWwpe1xyXG4gICAgICAgICAgICBsZXQgY29sb3IgPSB0YXJnZXQuY29sb3I7XHJcbiAgICAgICAgICAgIGlmKGNvbG9yIGluc3RhbmNlb2YgVEhSRUUuQ29sb3Ipe1xyXG4gICAgICAgICAgICAgICAgbGV0IG1hcENvbG9yID0gZmluZE5lYXJlc3QoY29sb3IsIHRoaXMuY29sb3JzKTtcclxuICAgICAgICAgICAgICAgIGNvbG9yLmNvcHkobWFwQ29sb3IpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYodGFyZ2V0IGluc3RhbmNlb2YgVEhSRUUuT2JqZWN0M0Qpe1xyXG4gICAgICAgICAgICB0YXJnZXQudHJhdmVyc2UoZnVuY3Rpb24oY2hpbGQpe1xyXG4gICAgICAgICAgICAgICAgaWYoY2hpbGQgaW5zdGFuY2VvZiBUSFJFRS5NZXNoKXtcclxuICAgICAgICAgICAgICAgICAgICBzY29wZS5BcHBseShjaGlsZC5tYXRlcmlhbCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdGFyZ2V0O1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBDb2xvclRlbXBsYXRlO1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9hcGkvY29tcG9uZW50cy9hc3NldHMvQ29sb3JUZW1wbGF0ZS5qcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///56\n");

/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Slide = exports.Transition = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Tween = __webpack_require__(15);\n\nvar _Tween2 = _interopRequireDefault(_Tween);\n\nvar _Signaler2 = __webpack_require__(1);\n\nvar _Signaler3 = _interopRequireDefault(_Signaler2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar tempBox3 = new THREE.Box3();\nvar tempVec3 = new THREE.Vector3();\nvar clock = new THREE.Clock();\n\nvar TransitionController = function TransitionController() {\n    _classCallCheck(this, TransitionController);\n};\n\nvar Slide = function (_TransitionController) {\n    _inherits(Slide, _TransitionController);\n\n    /**\r\n     * Slide from, to. ie: slideFromLeft -> from = 1 & to = 0\r\n     * @param {string} property \r\n     * @param {Number} from \r\n     * @param {Number} to \r\n     */\n    function Slide(property, from, to) {\n        _classCallCheck(this, Slide);\n\n        var _this = _possibleConstructorReturn(this, (Slide.__proto__ || Object.getPrototypeOf(Slide)).call(this));\n\n        _this.tween = new _Tween2.default(_Tween2.default.functions.linear, 0, 0, 0);\n        _this.property = property;\n        _this.from = from;\n        _this.to = to;\n        return _this;\n    }\n\n    /** @param {Transition} transition */\n\n\n    _createClass(Slide, [{\n        key: \"Init\",\n        value: function Init(transition) {\n\n            transition.bounds.getSize(tempVec3);\n            var offset = tempVec3.x;\n            transition.bounds.getCenter(tempVec3);\n            offset += transition.target.position.x - tempVec3.x;\n\n            this.tween.startValue = offset * this.from;\n            this.tween.delta = -(offset * this.from) + offset * this.to;\n            this.tween.duration = transition.duration;\n            this.tween.onComplete = transition.OnComplete.bind(transition);\n\n            this.tween.Hook(transition.target.position, this.property);\n        }\n    }, {\n        key: \"Start\",\n        value: function Start() {\n            this.tween.Update(0);\n        }\n\n        /** @param {Number} t */\n\n    }, {\n        key: \"Update\",\n        value: function Update(t) {\n            this.tween.Update(t);\n        }\n    }]);\n\n    return Slide;\n}(TransitionController);\n\nvar signals = {\n    complete: 'complete'\n};\n\nvar _controller = Symbol('controller');\n\nvar Transition = function (_Signaler) {\n    _inherits(Transition, _Signaler);\n\n    /**\r\n     * @param {THREE.Object3D} boundsView object to calculate bounds from\r\n     * @param {THREE.Object3D} transformView object to transform\r\n     * @param {Number} duration\r\n     */\n    function Transition(boundsView, transformView, duration) {\n        _classCallCheck(this, Transition);\n\n        var _this2 = _possibleConstructorReturn(this, (Transition.__proto__ || Object.getPrototypeOf(Transition)).call(this));\n\n        _this2.bounds = new THREE.Box3();\n        _this2.bounds.setFromObject(boundsView);\n\n        _this2.target = transformView;\n        _this2.duration = duration;\n        return _this2;\n    }\n\n    /** @param {TransitionController} value */\n\n\n    _createClass(Transition, [{\n        key: \"OnComplete\",\n        value: function OnComplete() {\n            this.Dispatch(signals.complete, this.controller);\n        }\n    }, {\n        key: \"Start\",\n        value: function Start() {\n            this.startTime = clock.getElapsedTime();\n            if (this.controller) this.controller.Start();\n        }\n    }, {\n        key: \"Update\",\n        value: function Update() {\n            var t = clock.getElapsedTime() - this.startTime;\n            if (this.controller) this.controller.Update(t);\n        }\n    }, {\n        key: \"controller\",\n        set: function set(value) {\n            this[_controller] = value;\n        },\n        get: function get() {\n            return this[_controller];\n        }\n    }], [{\n        key: \"signals\",\n        get: function get() {\n            return signals;\n        }\n    }]);\n\n    return Transition;\n}(_Signaler3.default);\n\nexports.Transition = Transition;\nexports.Slide = Slide;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXBpL3V0aWxzL2Npay90cmFuc2l0aW9ucy9UcmFuc2l0aW9uLmpzP2NkMzgiXSwibmFtZXMiOlsidGVtcEJveDMiLCJUSFJFRSIsIkJveDMiLCJ0ZW1wVmVjMyIsIlZlY3RvcjMiLCJjbG9jayIsIkNsb2NrIiwiVHJhbnNpdGlvbkNvbnRyb2xsZXIiLCJTbGlkZSIsInByb3BlcnR5IiwiZnJvbSIsInRvIiwidHdlZW4iLCJUd2VlbiIsImZ1bmN0aW9ucyIsImxpbmVhciIsInRyYW5zaXRpb24iLCJib3VuZHMiLCJnZXRTaXplIiwib2Zmc2V0IiwieCIsImdldENlbnRlciIsInRhcmdldCIsInBvc2l0aW9uIiwic3RhcnRWYWx1ZSIsImRlbHRhIiwiZHVyYXRpb24iLCJvbkNvbXBsZXRlIiwiT25Db21wbGV0ZSIsImJpbmQiLCJIb29rIiwiVXBkYXRlIiwidCIsInNpZ25hbHMiLCJjb21wbGV0ZSIsIl9jb250cm9sbGVyIiwiU3ltYm9sIiwiVHJhbnNpdGlvbiIsImJvdW5kc1ZpZXciLCJ0cmFuc2Zvcm1WaWV3Iiwic2V0RnJvbU9iamVjdCIsIkRpc3BhdGNoIiwiY29udHJvbGxlciIsInN0YXJ0VGltZSIsImdldEVsYXBzZWRUaW1lIiwiU3RhcnQiLCJ2YWx1ZSIsIlNpZ25hbGVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7OztBQUNBOzs7Ozs7Ozs7Ozs7QUFFQSxJQUFJQSxXQUFXLElBQUlDLE1BQU1DLElBQVYsRUFBZjtBQUNBLElBQUlDLFdBQVcsSUFBSUYsTUFBTUcsT0FBVixFQUFmO0FBQ0EsSUFBSUMsUUFBUSxJQUFJSixNQUFNSyxLQUFWLEVBQVo7O0lBRU1DLG9CLEdBQ0YsZ0NBQWE7QUFBQTtBQUVaLEM7O0lBR0NDLEs7OztBQUNGOzs7Ozs7QUFNQSxtQkFBWUMsUUFBWixFQUFzQkMsSUFBdEIsRUFBNEJDLEVBQTVCLEVBQStCO0FBQUE7O0FBQUE7O0FBRzNCLGNBQUtDLEtBQUwsR0FBYSxJQUFJQyxlQUFKLENBQVVBLGdCQUFNQyxTQUFOLENBQWdCQyxNQUExQixFQUFrQyxDQUFsQyxFQUFxQyxDQUFyQyxFQUF3QyxDQUF4QyxDQUFiO0FBQ0EsY0FBS04sUUFBTCxHQUFnQkEsUUFBaEI7QUFDQSxjQUFLQyxJQUFMLEdBQVlBLElBQVo7QUFDQSxjQUFLQyxFQUFMLEdBQVVBLEVBQVY7QUFOMkI7QUFPOUI7O0FBRUQ7Ozs7OzZCQUNLSyxVLEVBQVc7O0FBRVpBLHVCQUFXQyxNQUFYLENBQWtCQyxPQUFsQixDQUEwQmYsUUFBMUI7QUFDQSxnQkFBSWdCLFNBQVNoQixTQUFTaUIsQ0FBdEI7QUFDQUosdUJBQVdDLE1BQVgsQ0FBa0JJLFNBQWxCLENBQTRCbEIsUUFBNUI7QUFDQWdCLHNCQUFVSCxXQUFXTSxNQUFYLENBQWtCQyxRQUFsQixDQUEyQkgsQ0FBM0IsR0FBK0JqQixTQUFTaUIsQ0FBbEQ7O0FBRUEsaUJBQUtSLEtBQUwsQ0FBV1ksVUFBWCxHQUF3QkwsU0FBUyxLQUFLVCxJQUF0QztBQUNBLGlCQUFLRSxLQUFMLENBQVdhLEtBQVgsR0FBbUIsRUFBRU4sU0FBUyxLQUFLVCxJQUFoQixJQUF3QlMsU0FBUyxLQUFLUixFQUF6RDtBQUNBLGlCQUFLQyxLQUFMLENBQVdjLFFBQVgsR0FBc0JWLFdBQVdVLFFBQWpDO0FBQ0EsaUJBQUtkLEtBQUwsQ0FBV2UsVUFBWCxHQUF3QlgsV0FBV1ksVUFBWCxDQUFzQkMsSUFBdEIsQ0FBMkJiLFVBQTNCLENBQXhCOztBQUVBLGlCQUFLSixLQUFMLENBQVdrQixJQUFYLENBQWdCZCxXQUFXTSxNQUFYLENBQWtCQyxRQUFsQyxFQUE0QyxLQUFLZCxRQUFqRDtBQUNIOzs7Z0NBRU07QUFDSCxpQkFBS0csS0FBTCxDQUFXbUIsTUFBWCxDQUFrQixDQUFsQjtBQUNIOztBQUVEOzs7OytCQUNPQyxDLEVBQUU7QUFDTCxpQkFBS3BCLEtBQUwsQ0FBV21CLE1BQVgsQ0FBa0JDLENBQWxCO0FBQ0g7Ozs7RUF2Q2V6QixvQjs7QUEwQ3BCLElBQU0wQixVQUFVO0FBQ1pDLGNBQVU7QUFERSxDQUFoQjs7QUFJQSxJQUFNQyxjQUFjQyxPQUFPLFlBQVAsQ0FBcEI7O0lBRU1DLFU7OztBQUNGOzs7OztBQUtBLHdCQUFZQyxVQUFaLEVBQXdCQyxhQUF4QixFQUF1Q2IsUUFBdkMsRUFBZ0Q7QUFBQTs7QUFBQTs7QUFHNUMsZUFBS1QsTUFBTCxHQUFjLElBQUloQixNQUFNQyxJQUFWLEVBQWQ7QUFDQSxlQUFLZSxNQUFMLENBQVl1QixhQUFaLENBQTBCRixVQUExQjs7QUFFQSxlQUFLaEIsTUFBTCxHQUFjaUIsYUFBZDtBQUNBLGVBQUtiLFFBQUwsR0FBZ0JBLFFBQWhCO0FBUDRDO0FBUS9DOztBQUVEOzs7OztxQ0FPWTtBQUNSLGlCQUFLZSxRQUFMLENBQWNSLFFBQVFDLFFBQXRCLEVBQWdDLEtBQUtRLFVBQXJDO0FBQ0g7OztnQ0FFTTtBQUNILGlCQUFLQyxTQUFMLEdBQWlCdEMsTUFBTXVDLGNBQU4sRUFBakI7QUFDQSxnQkFBRyxLQUFLRixVQUFSLEVBQW9CLEtBQUtBLFVBQUwsQ0FBZ0JHLEtBQWhCO0FBQ3ZCOzs7aUNBRU87QUFDSixnQkFBSWIsSUFBSTNCLE1BQU11QyxjQUFOLEtBQXlCLEtBQUtELFNBQXRDO0FBQ0EsZ0JBQUcsS0FBS0QsVUFBUixFQUFvQixLQUFLQSxVQUFMLENBQWdCWCxNQUFoQixDQUF1QkMsQ0FBdkI7QUFDdkI7OzswQkFsQmNjLEssRUFBTTtBQUNqQixpQkFBS1gsV0FBTCxJQUFvQlcsS0FBcEI7QUFDSCxTOzRCQUVlO0FBQUUsbUJBQU8sS0FBS1gsV0FBTCxDQUFQO0FBQTJCOzs7NEJBZ0J6QjtBQUNoQixtQkFBT0YsT0FBUDtBQUNIOzs7O0VBdkNvQmMsa0I7O1FBMkNyQlYsVSxHQUFBQSxVO1FBQ0E3QixLLEdBQUFBLEsiLCJmaWxlIjoiNTcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVHdlZW4gZnJvbSBcIi4uL1R3ZWVuXCI7XHJcbmltcG9ydCBTaWduYWxlciBmcm9tIFwiLi4vU2lnbmFsZXJcIjtcclxuXHJcbnZhciB0ZW1wQm94MyA9IG5ldyBUSFJFRS5Cb3gzKCk7XHJcbnZhciB0ZW1wVmVjMyA9IG5ldyBUSFJFRS5WZWN0b3IzKCk7XHJcbnZhciBjbG9jayA9IG5ldyBUSFJFRS5DbG9jaygpO1xyXG5cclxuY2xhc3MgVHJhbnNpdGlvbkNvbnRyb2xsZXJ7XHJcbiAgICBjb25zdHJ1Y3Rvcigpe1xyXG5cclxuICAgIH1cclxufVxyXG5cclxuY2xhc3MgU2xpZGUgZXh0ZW5kcyBUcmFuc2l0aW9uQ29udHJvbGxlcntcclxuICAgIC8qKlxyXG4gICAgICogU2xpZGUgZnJvbSwgdG8uIGllOiBzbGlkZUZyb21MZWZ0IC0+IGZyb20gPSAxICYgdG8gPSAwXHJcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gcHJvcGVydHkgXHJcbiAgICAgKiBAcGFyYW0ge051bWJlcn0gZnJvbSBcclxuICAgICAqIEBwYXJhbSB7TnVtYmVyfSB0byBcclxuICAgICAqL1xyXG4gICAgY29uc3RydWN0b3IocHJvcGVydHksIGZyb20sIHRvKXtcclxuICAgICAgICBzdXBlcigpO1xyXG5cclxuICAgICAgICB0aGlzLnR3ZWVuID0gbmV3IFR3ZWVuKFR3ZWVuLmZ1bmN0aW9ucy5saW5lYXIsIDAsIDAsIDApO1xyXG4gICAgICAgIHRoaXMucHJvcGVydHkgPSBwcm9wZXJ0eTtcclxuICAgICAgICB0aGlzLmZyb20gPSBmcm9tO1xyXG4gICAgICAgIHRoaXMudG8gPSB0bztcclxuICAgIH1cclxuXHJcbiAgICAvKiogQHBhcmFtIHtUcmFuc2l0aW9ufSB0cmFuc2l0aW9uICovXHJcbiAgICBJbml0KHRyYW5zaXRpb24pe1xyXG5cclxuICAgICAgICB0cmFuc2l0aW9uLmJvdW5kcy5nZXRTaXplKHRlbXBWZWMzKTtcclxuICAgICAgICBsZXQgb2Zmc2V0ID0gdGVtcFZlYzMueDtcclxuICAgICAgICB0cmFuc2l0aW9uLmJvdW5kcy5nZXRDZW50ZXIodGVtcFZlYzMpO1xyXG4gICAgICAgIG9mZnNldCArPSB0cmFuc2l0aW9uLnRhcmdldC5wb3NpdGlvbi54IC0gdGVtcFZlYzMueDtcclxuXHJcbiAgICAgICAgdGhpcy50d2Vlbi5zdGFydFZhbHVlID0gb2Zmc2V0ICogdGhpcy5mcm9tO1xyXG4gICAgICAgIHRoaXMudHdlZW4uZGVsdGEgPSAtKG9mZnNldCAqIHRoaXMuZnJvbSkgKyBvZmZzZXQgKiB0aGlzLnRvO1xyXG4gICAgICAgIHRoaXMudHdlZW4uZHVyYXRpb24gPSB0cmFuc2l0aW9uLmR1cmF0aW9uO1xyXG4gICAgICAgIHRoaXMudHdlZW4ub25Db21wbGV0ZSA9IHRyYW5zaXRpb24uT25Db21wbGV0ZS5iaW5kKHRyYW5zaXRpb24pO1xyXG5cclxuICAgICAgICB0aGlzLnR3ZWVuLkhvb2sodHJhbnNpdGlvbi50YXJnZXQucG9zaXRpb24sIHRoaXMucHJvcGVydHkpO1xyXG4gICAgfVxyXG5cclxuICAgIFN0YXJ0KCl7XHJcbiAgICAgICAgdGhpcy50d2Vlbi5VcGRhdGUoMCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIEBwYXJhbSB7TnVtYmVyfSB0ICovXHJcbiAgICBVcGRhdGUodCl7XHJcbiAgICAgICAgdGhpcy50d2Vlbi5VcGRhdGUodCk7XHJcbiAgICB9XHJcbn1cclxuXHJcbmNvbnN0IHNpZ25hbHMgPSB7XHJcbiAgICBjb21wbGV0ZTogJ2NvbXBsZXRlJ1xyXG59O1xyXG5cclxuY29uc3QgX2NvbnRyb2xsZXIgPSBTeW1ib2woJ2NvbnRyb2xsZXInKTtcclxuXHJcbmNsYXNzIFRyYW5zaXRpb24gZXh0ZW5kcyBTaWduYWxlcntcclxuICAgIC8qKlxyXG4gICAgICogQHBhcmFtIHtUSFJFRS5PYmplY3QzRH0gYm91bmRzVmlldyBvYmplY3QgdG8gY2FsY3VsYXRlIGJvdW5kcyBmcm9tXHJcbiAgICAgKiBAcGFyYW0ge1RIUkVFLk9iamVjdDNEfSB0cmFuc2Zvcm1WaWV3IG9iamVjdCB0byB0cmFuc2Zvcm1cclxuICAgICAqIEBwYXJhbSB7TnVtYmVyfSBkdXJhdGlvblxyXG4gICAgICovXHJcbiAgICBjb25zdHJ1Y3Rvcihib3VuZHNWaWV3LCB0cmFuc2Zvcm1WaWV3LCBkdXJhdGlvbil7XHJcbiAgICAgICAgc3VwZXIoKTtcclxuICAgICAgICBcclxuICAgICAgICB0aGlzLmJvdW5kcyA9IG5ldyBUSFJFRS5Cb3gzKCk7XHJcbiAgICAgICAgdGhpcy5ib3VuZHMuc2V0RnJvbU9iamVjdChib3VuZHNWaWV3KTtcclxuXHJcbiAgICAgICAgdGhpcy50YXJnZXQgPSB0cmFuc2Zvcm1WaWV3O1xyXG4gICAgICAgIHRoaXMuZHVyYXRpb24gPSBkdXJhdGlvbjtcclxuICAgIH1cclxuXHJcbiAgICAvKiogQHBhcmFtIHtUcmFuc2l0aW9uQ29udHJvbGxlcn0gdmFsdWUgKi9cclxuICAgIHNldCBjb250cm9sbGVyKHZhbHVlKXtcclxuICAgICAgICB0aGlzW19jb250cm9sbGVyXSA9IHZhbHVlO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBjb250cm9sbGVyKCl7IHJldHVybiB0aGlzW19jb250cm9sbGVyXTsgfVxyXG5cclxuICAgIE9uQ29tcGxldGUoKXtcclxuICAgICAgICB0aGlzLkRpc3BhdGNoKHNpZ25hbHMuY29tcGxldGUsIHRoaXMuY29udHJvbGxlcik7XHJcbiAgICB9XHJcblxyXG4gICAgU3RhcnQoKXtcclxuICAgICAgICB0aGlzLnN0YXJ0VGltZSA9IGNsb2NrLmdldEVsYXBzZWRUaW1lKCk7XHJcbiAgICAgICAgaWYodGhpcy5jb250cm9sbGVyKSB0aGlzLmNvbnRyb2xsZXIuU3RhcnQoKTtcclxuICAgIH1cclxuXHJcbiAgICBVcGRhdGUoKXtcclxuICAgICAgICBsZXQgdCA9IGNsb2NrLmdldEVsYXBzZWRUaW1lKCkgLSB0aGlzLnN0YXJ0VGltZTtcclxuICAgICAgICBpZih0aGlzLmNvbnRyb2xsZXIpIHRoaXMuY29udHJvbGxlci5VcGRhdGUodCk7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGdldCBzaWduYWxzKCl7XHJcbiAgICAgICAgcmV0dXJuIHNpZ25hbHM7XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCB7XHJcbiAgICBUcmFuc2l0aW9uLCBcclxuICAgIFNsaWRlXHJcbn07XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2FwaS91dGlscy9jaWsvdHJhbnNpdGlvbnMvVHJhbnNpdGlvbi5qcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///57\n");

/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _App = __webpack_require__(10);\n\nvar _App2 = _interopRequireDefault(_App);\n\nvar _LightDispatcher2 = __webpack_require__(9);\n\nvar _LightDispatcher3 = _interopRequireDefault(_LightDispatcher2);\n\nvar _Logger = __webpack_require__(2);\n\nvar _Logger2 = _interopRequireDefault(_Logger);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _app = Symbol('app');\n\nvar typeofNumber = 'number';\n\nvar PackResults = function () {\n\n    /** @param {App} app */\n    function PackResults(app) {\n        _classCallCheck(this, PackResults);\n\n        this[_app] = app;\n    }\n\n    _createClass(PackResults, [{\n        key: \"SliceResults\",\n\n\n        /** Hides stacked boxes in viewer by vertical position\r\n         * 0: None - 1: All (over y span)\r\n         * @param {Number} value\r\n         */\n        value: function SliceResults(value) {\n\n            if ((typeof value === \"undefined\" ? \"undefined\" : _typeof(value)) !== typeofNumber) {\n                _Logger2.default.Warn('PackResults.SliceResults error, parameter is not a number:', value);\n                return;\n            }\n\n            /** @type {App} */\n            var app = this[_app];\n            app.view.packResultView.Slice(value);\n        }\n    }, {\n        key: \"animationDuration\",\n        get: function get() {\n            /** @type {App} */\n            var app = this[_app];\n            return app.view.packResultView.params.animationDuration;\n        },\n        set: function set(value) {\n\n            if ((typeof value === \"undefined\" ? \"undefined\" : _typeof(value)) !== typeofNumber) {\n                _Logger2.default.Warn('PackResults.animationDuration error, parameter is not a number:', value);\n                return;\n            }\n\n            /** @type {App} */\n            var app = this[_app];\n            app.view.packResultView.params.animationDuration = value;\n        }\n    }]);\n\n    return PackResults;\n}();\n\nvar visualizationSignals = {};\n\nvar Visualization = function (_LightDispatcher) {\n    _inherits(Visualization, _LightDispatcher);\n\n    /** @param {App} app */\n    function Visualization(app) {\n        _classCallCheck(this, Visualization);\n\n        var _this = _possibleConstructorReturn(this, (Visualization.__proto__ || Object.getPrototypeOf(Visualization)).call(this));\n\n        _this[_app] = app;\n\n        _this.packResults = new PackResults(app);\n        return _this;\n    }\n\n    /** Selects an entry in the scene, optionally highlighting packed instances\r\n     *  @param {string | Boolean} [entryUID] default = false (deselect) @param {Boolean} [highlightPackedInstances] default = true */\n\n\n    _createClass(Visualization, [{\n        key: \"SelectEntry\",\n        value: function SelectEntry(entryUID, highlightPackedInstances) {\n            /** @type {App} */\n            var app = this[_app];\n\n            if (entryUID && !app.packer.cargoList.GetEntry(entryUID)) {\n                _Logger2.default.Warn('Visualization.SelectEntry failed, entry not found for:', entryUID);\n                return;\n            }\n\n            app.view.cargoListView.Select(entryUID);\n\n            if (highlightPackedInstances === undefined) highlightPackedInstances = true;\n            if (highlightPackedInstances || !entryUID) app.view.packResultView.SelectEntry(entryUID);\n        }\n\n        /** Enumeration of dispatched types */\n\n    }], [{\n        key: \"signals\",\n        get: function get() {\n            return visualizationSignals;\n        }\n    }]);\n\n    return Visualization;\n}(_LightDispatcher3.default);\n\nexports.default = Visualization;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXBpL2NvbXBvbmVudHMvVmlzdWFsaXphdGlvbi5qcz8wNWQ2Il0sIm5hbWVzIjpbIl9hcHAiLCJTeW1ib2wiLCJ0eXBlb2ZOdW1iZXIiLCJQYWNrUmVzdWx0cyIsImFwcCIsInZhbHVlIiwiTG9nZ2VyIiwiV2FybiIsInZpZXciLCJwYWNrUmVzdWx0VmlldyIsIlNsaWNlIiwicGFyYW1zIiwiYW5pbWF0aW9uRHVyYXRpb24iLCJ2aXN1YWxpemF0aW9uU2lnbmFscyIsIlZpc3VhbGl6YXRpb24iLCJwYWNrUmVzdWx0cyIsImVudHJ5VUlEIiwiaGlnaGxpZ2h0UGFja2VkSW5zdGFuY2VzIiwicGFja2VyIiwiY2FyZ29MaXN0IiwiR2V0RW50cnkiLCJjYXJnb0xpc3RWaWV3IiwiU2VsZWN0IiwidW5kZWZpbmVkIiwiU2VsZWN0RW50cnkiLCJMaWdodERpc3BhdGNoZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTs7OztBQUNBOzs7O0FBQ0E7Ozs7Ozs7Ozs7OztBQUVBLElBQU1BLE9BQU9DLE9BQU8sS0FBUCxDQUFiOztBQUVBLElBQU1DLGVBQWUsUUFBckI7O0lBRU1DLFc7O0FBRUY7QUFDQSx5QkFBWUMsR0FBWixFQUFnQjtBQUFBOztBQUVaLGFBQUtKLElBQUwsSUFBYUksR0FBYjtBQUNIOzs7Ozs7QUFtQkQ7Ozs7cUNBSWFDLEssRUFBTTs7QUFFZixnQkFBRyxRQUFPQSxLQUFQLHlDQUFPQSxLQUFQLE9BQWlCSCxZQUFwQixFQUFpQztBQUM3QkksaUNBQU9DLElBQVAsQ0FBWSw0REFBWixFQUEwRUYsS0FBMUU7QUFDQTtBQUNIOztBQUVEO0FBQ0EsZ0JBQUlELE1BQU0sS0FBS0osSUFBTCxDQUFWO0FBQ0FJLGdCQUFJSSxJQUFKLENBQVNDLGNBQVQsQ0FBd0JDLEtBQXhCLENBQThCTCxLQUE5QjtBQUNIOzs7NEJBL0JzQjtBQUNuQjtBQUNBLGdCQUFJRCxNQUFNLEtBQUtKLElBQUwsQ0FBVjtBQUNBLG1CQUFPSSxJQUFJSSxJQUFKLENBQVNDLGNBQVQsQ0FBd0JFLE1BQXhCLENBQStCQyxpQkFBdEM7QUFDSCxTOzBCQUNxQlAsSyxFQUFNOztBQUV4QixnQkFBRyxRQUFPQSxLQUFQLHlDQUFPQSxLQUFQLE9BQWlCSCxZQUFwQixFQUFpQztBQUM3QkksaUNBQU9DLElBQVAsQ0FBWSxpRUFBWixFQUErRUYsS0FBL0U7QUFDQTtBQUNIOztBQUVEO0FBQ0EsZ0JBQUlELE1BQU0sS0FBS0osSUFBTCxDQUFWO0FBQ0FJLGdCQUFJSSxJQUFKLENBQVNDLGNBQVQsQ0FBd0JFLE1BQXhCLENBQStCQyxpQkFBL0IsR0FBbURQLEtBQW5EO0FBQ0g7Ozs7OztBQW9CTCxJQUFNUSx1QkFBdUIsRUFBN0I7O0lBSU1DLGE7OztBQUVGO0FBQ0EsMkJBQVlWLEdBQVosRUFBZ0I7QUFBQTs7QUFBQTs7QUFHWixjQUFLSixJQUFMLElBQWFJLEdBQWI7O0FBRUEsY0FBS1csV0FBTCxHQUFtQixJQUFJWixXQUFKLENBQWdCQyxHQUFoQixDQUFuQjtBQUxZO0FBTWY7O0FBRUQ7Ozs7OztvQ0FFWVksUSxFQUFVQyx3QixFQUF5QjtBQUMzQztBQUNBLGdCQUFJYixNQUFNLEtBQUtKLElBQUwsQ0FBVjs7QUFFQSxnQkFBR2dCLFlBQVksQ0FBQ1osSUFBSWMsTUFBSixDQUFXQyxTQUFYLENBQXFCQyxRQUFyQixDQUE4QkosUUFBOUIsQ0FBaEIsRUFBd0Q7QUFDcERWLGlDQUFPQyxJQUFQLENBQVksd0RBQVosRUFBc0VTLFFBQXRFO0FBQ0E7QUFDSDs7QUFFRFosZ0JBQUlJLElBQUosQ0FBU2EsYUFBVCxDQUF1QkMsTUFBdkIsQ0FBOEJOLFFBQTlCOztBQUVBLGdCQUFHQyw2QkFBNkJNLFNBQWhDLEVBQTJDTiwyQkFBMkIsSUFBM0I7QUFDM0MsZ0JBQUdBLDRCQUE0QixDQUFDRCxRQUFoQyxFQUEwQ1osSUFBSUksSUFBSixDQUFTQyxjQUFULENBQXdCZSxXQUF4QixDQUFvQ1IsUUFBcEM7QUFDN0M7O0FBRUQ7Ozs7NEJBQ29CO0FBQ2hCLG1CQUFPSCxvQkFBUDtBQUNIOzs7O0VBL0J1QlkseUI7O2tCQWtDYlgsYSIsImZpbGUiOiI1OC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBBcHAgZnJvbSBcIi4uL0FwcFwiO1xyXG5pbXBvcnQgTGlnaHREaXNwYXRjaGVyIGZyb20gXCIuL0xpZ2h0RGlzcGF0Y2hlclwiO1xyXG5pbXBvcnQgTG9nZ2VyIGZyb20gXCIuLi91dGlscy9jaWsvTG9nZ2VyXCI7XHJcblxyXG5jb25zdCBfYXBwID0gU3ltYm9sKCdhcHAnKTtcclxuXHJcbmNvbnN0IHR5cGVvZk51bWJlciA9ICdudW1iZXInO1xyXG5cclxuY2xhc3MgUGFja1Jlc3VsdHMge1xyXG4gICAgXHJcbiAgICAvKiogQHBhcmFtIHtBcHB9IGFwcCAqL1xyXG4gICAgY29uc3RydWN0b3IoYXBwKXtcclxuXHJcbiAgICAgICAgdGhpc1tfYXBwXSA9IGFwcDtcclxuICAgIH1cclxuXHJcbiAgICBnZXQgYW5pbWF0aW9uRHVyYXRpb24oKXsgXHJcbiAgICAgICAgLyoqIEB0eXBlIHtBcHB9ICovXHJcbiAgICAgICAgbGV0IGFwcCA9IHRoaXNbX2FwcF07XHJcbiAgICAgICAgcmV0dXJuIGFwcC52aWV3LnBhY2tSZXN1bHRWaWV3LnBhcmFtcy5hbmltYXRpb25EdXJhdGlvbjtcclxuICAgIH1cclxuICAgIHNldCBhbmltYXRpb25EdXJhdGlvbih2YWx1ZSl7XHJcblxyXG4gICAgICAgIGlmKHR5cGVvZiB2YWx1ZSAhPT0gdHlwZW9mTnVtYmVyKXtcclxuICAgICAgICAgICAgTG9nZ2VyLldhcm4oJ1BhY2tSZXN1bHRzLmFuaW1hdGlvbkR1cmF0aW9uIGVycm9yLCBwYXJhbWV0ZXIgaXMgbm90IGEgbnVtYmVyOicsIHZhbHVlKTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLyoqIEB0eXBlIHtBcHB9ICovXHJcbiAgICAgICAgbGV0IGFwcCA9IHRoaXNbX2FwcF07XHJcbiAgICAgICAgYXBwLnZpZXcucGFja1Jlc3VsdFZpZXcucGFyYW1zLmFuaW1hdGlvbkR1cmF0aW9uID0gdmFsdWU7IFxyXG4gICAgfVxyXG5cclxuICAgIC8qKiBIaWRlcyBzdGFja2VkIGJveGVzIGluIHZpZXdlciBieSB2ZXJ0aWNhbCBwb3NpdGlvblxyXG4gICAgICogMDogTm9uZSAtIDE6IEFsbCAob3ZlciB5IHNwYW4pXHJcbiAgICAgKiBAcGFyYW0ge051bWJlcn0gdmFsdWVcclxuICAgICAqL1xyXG4gICAgU2xpY2VSZXN1bHRzKHZhbHVlKXtcclxuXHJcbiAgICAgICAgaWYodHlwZW9mIHZhbHVlICE9PSB0eXBlb2ZOdW1iZXIpe1xyXG4gICAgICAgICAgICBMb2dnZXIuV2FybignUGFja1Jlc3VsdHMuU2xpY2VSZXN1bHRzIGVycm9yLCBwYXJhbWV0ZXIgaXMgbm90IGEgbnVtYmVyOicsIHZhbHVlKTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLyoqIEB0eXBlIHtBcHB9ICovXHJcbiAgICAgICAgbGV0IGFwcCA9IHRoaXNbX2FwcF07XHJcbiAgICAgICAgYXBwLnZpZXcucGFja1Jlc3VsdFZpZXcuU2xpY2UodmFsdWUpO1xyXG4gICAgfVxyXG5cclxufVxyXG5cclxuY29uc3QgdmlzdWFsaXphdGlvblNpZ25hbHMgPSB7XHJcbiAgICBcclxufTtcclxuXHJcbmNsYXNzIFZpc3VhbGl6YXRpb24gZXh0ZW5kcyBMaWdodERpc3BhdGNoZXJ7XHJcbiAgICBcclxuICAgIC8qKiBAcGFyYW0ge0FwcH0gYXBwICovXHJcbiAgICBjb25zdHJ1Y3RvcihhcHApe1xyXG4gICAgICAgIHN1cGVyKCk7XHJcblxyXG4gICAgICAgIHRoaXNbX2FwcF0gPSBhcHA7XHJcblxyXG4gICAgICAgIHRoaXMucGFja1Jlc3VsdHMgPSBuZXcgUGFja1Jlc3VsdHMoYXBwKTtcclxuICAgIH1cclxuXHJcbiAgICAvKiogU2VsZWN0cyBhbiBlbnRyeSBpbiB0aGUgc2NlbmUsIG9wdGlvbmFsbHkgaGlnaGxpZ2h0aW5nIHBhY2tlZCBpbnN0YW5jZXNcclxuICAgICAqICBAcGFyYW0ge3N0cmluZyB8IEJvb2xlYW59IFtlbnRyeVVJRF0gZGVmYXVsdCA9IGZhbHNlIChkZXNlbGVjdCkgQHBhcmFtIHtCb29sZWFufSBbaGlnaGxpZ2h0UGFja2VkSW5zdGFuY2VzXSBkZWZhdWx0ID0gdHJ1ZSAqL1xyXG4gICAgU2VsZWN0RW50cnkoZW50cnlVSUQsIGhpZ2hsaWdodFBhY2tlZEluc3RhbmNlcyl7XHJcbiAgICAgICAgLyoqIEB0eXBlIHtBcHB9ICovXHJcbiAgICAgICAgbGV0IGFwcCA9IHRoaXNbX2FwcF07XHJcblxyXG4gICAgICAgIGlmKGVudHJ5VUlEICYmICFhcHAucGFja2VyLmNhcmdvTGlzdC5HZXRFbnRyeShlbnRyeVVJRCkpe1xyXG4gICAgICAgICAgICBMb2dnZXIuV2FybignVmlzdWFsaXphdGlvbi5TZWxlY3RFbnRyeSBmYWlsZWQsIGVudHJ5IG5vdCBmb3VuZCBmb3I6JywgZW50cnlVSUQpO1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBhcHAudmlldy5jYXJnb0xpc3RWaWV3LlNlbGVjdChlbnRyeVVJRCk7XHJcblxyXG4gICAgICAgIGlmKGhpZ2hsaWdodFBhY2tlZEluc3RhbmNlcyA9PT0gdW5kZWZpbmVkKSBoaWdobGlnaHRQYWNrZWRJbnN0YW5jZXMgPSB0cnVlO1xyXG4gICAgICAgIGlmKGhpZ2hsaWdodFBhY2tlZEluc3RhbmNlcyB8fCAhZW50cnlVSUQpIGFwcC52aWV3LnBhY2tSZXN1bHRWaWV3LlNlbGVjdEVudHJ5KGVudHJ5VUlEKTtcclxuICAgIH1cclxuXHJcbiAgICAvKiogRW51bWVyYXRpb24gb2YgZGlzcGF0Y2hlZCB0eXBlcyAqL1xyXG4gICAgc3RhdGljIGdldCBzaWduYWxzKCl7XHJcbiAgICAgICAgcmV0dXJuIHZpc3VhbGl6YXRpb25TaWduYWxzO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBWaXN1YWxpemF0aW9uO1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9hcGkvY29tcG9uZW50cy9WaXN1YWxpemF0aW9uLmpzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///58\n");

/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _LightDispatcher2 = __webpack_require__(9);\n\nvar _LightDispatcher3 = _interopRequireDefault(_LightDispatcher2);\n\nvar _App = __webpack_require__(10);\n\nvar _App2 = _interopRequireDefault(_App);\n\nvar _CargoListView = __webpack_require__(19);\n\nvar _CargoListView2 = _interopRequireDefault(_CargoListView);\n\nvar _CargoEntry = __webpack_require__(6);\n\nvar _CargoEntry2 = _interopRequireDefault(_CargoEntry);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _app = Symbol('app');\n\nvar signals = {\n    boxEntryInteract: 'beInteract0'\n};\n\nvar User = function (_LightDispatcher) {\n    _inherits(User, _LightDispatcher);\n\n    /** @param {App} app */\n    function User(app) {\n        _classCallCheck(this, User);\n\n        var _this = _possibleConstructorReturn(this, (User.__proto__ || Object.getPrototypeOf(User)).call(this));\n\n        _this[_app] = app;\n\n        var scope = _this;\n        /** @param {CargoEntry} cargoEntry */\n        function onCargoInteract(cargoEntry) {\n            scope.Dispatch(signals.boxEntryInteract, cargoEntry.uid);\n        }\n\n        app.view.cargoListView.On(_CargoListView2.default.signals.interact, onCargoInteract);\n        return _this;\n    }\n\n    /** Enumeration of dispatched types */\n\n\n    _createClass(User, null, [{\n        key: \"signals\",\n        get: function get() {\n            return signals;\n        }\n    }]);\n\n    return User;\n}(_LightDispatcher3.default);\n\nexports.default = User;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXBpL2NvbXBvbmVudHMvVXNlci5qcz9iMjcwIl0sIm5hbWVzIjpbIl9hcHAiLCJTeW1ib2wiLCJzaWduYWxzIiwiYm94RW50cnlJbnRlcmFjdCIsIlVzZXIiLCJhcHAiLCJzY29wZSIsIm9uQ2FyZ29JbnRlcmFjdCIsImNhcmdvRW50cnkiLCJEaXNwYXRjaCIsInVpZCIsInZpZXciLCJjYXJnb0xpc3RWaWV3IiwiT24iLCJDYXJnb0xpc3RWaWV3IiwiaW50ZXJhY3QiLCJMaWdodERpc3BhdGNoZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7Ozs7Ozs7OztBQUVBLElBQU1BLE9BQU9DLE9BQU8sS0FBUCxDQUFiOztBQUVBLElBQU1DLFVBQVU7QUFDWkMsc0JBQWtCO0FBRE4sQ0FBaEI7O0lBSU1DLEk7OztBQUNGO0FBQ0Esa0JBQVlDLEdBQVosRUFBZ0I7QUFBQTs7QUFBQTs7QUFHWixjQUFLTCxJQUFMLElBQWFLLEdBQWI7O0FBRUEsWUFBSUMsYUFBSjtBQUNBO0FBQ0EsaUJBQVNDLGVBQVQsQ0FBeUJDLFVBQXpCLEVBQW9DO0FBQ2hDRixrQkFBTUcsUUFBTixDQUFlUCxRQUFRQyxnQkFBdkIsRUFBeUNLLFdBQVdFLEdBQXBEO0FBQ0g7O0FBRURMLFlBQUlNLElBQUosQ0FBU0MsYUFBVCxDQUF1QkMsRUFBdkIsQ0FBMEJDLHdCQUFjWixPQUFkLENBQXNCYSxRQUFoRCxFQUEwRFIsZUFBMUQ7QUFYWTtBQVlmOztBQUVEOzs7Ozs0QkFDb0I7QUFDaEIsbUJBQU9MLE9BQVA7QUFDSDs7OztFQW5CY2MseUI7O2tCQXVCSlosSSIsImZpbGUiOiI1OS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBMaWdodERpc3BhdGNoZXIgZnJvbSBcIi4vTGlnaHREaXNwYXRjaGVyXCI7XHJcbmltcG9ydCBBcHAgZnJvbSBcIi4uL0FwcFwiO1xyXG5pbXBvcnQgQ2FyZ29MaXN0VmlldyBmcm9tIFwiLi4vdmlldy9DYXJnb0xpc3RWaWV3XCI7XHJcbmltcG9ydCBDYXJnb0VudHJ5IGZyb20gXCIuL2NvbW1vbi9DYXJnb0VudHJ5XCI7XHJcblxyXG5jb25zdCBfYXBwID0gU3ltYm9sKCdhcHAnKTtcclxuXHJcbmNvbnN0IHNpZ25hbHMgPSB7XHJcbiAgICBib3hFbnRyeUludGVyYWN0OiAnYmVJbnRlcmFjdDAnXHJcbn07XHJcblxyXG5jbGFzcyBVc2VyIGV4dGVuZHMgTGlnaHREaXNwYXRjaGVye1xyXG4gICAgLyoqIEBwYXJhbSB7QXBwfSBhcHAgKi9cclxuICAgIGNvbnN0cnVjdG9yKGFwcCl7XHJcbiAgICAgICAgc3VwZXIoKTtcclxuXHJcbiAgICAgICAgdGhpc1tfYXBwXSA9IGFwcDtcclxuXHJcbiAgICAgICAgbGV0IHNjb3BlID0gdGhpcztcclxuICAgICAgICAvKiogQHBhcmFtIHtDYXJnb0VudHJ5fSBjYXJnb0VudHJ5ICovXHJcbiAgICAgICAgZnVuY3Rpb24gb25DYXJnb0ludGVyYWN0KGNhcmdvRW50cnkpe1xyXG4gICAgICAgICAgICBzY29wZS5EaXNwYXRjaChzaWduYWxzLmJveEVudHJ5SW50ZXJhY3QsIGNhcmdvRW50cnkudWlkKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGFwcC52aWV3LmNhcmdvTGlzdFZpZXcuT24oQ2FyZ29MaXN0Vmlldy5zaWduYWxzLmludGVyYWN0LCBvbkNhcmdvSW50ZXJhY3QpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKiBFbnVtZXJhdGlvbiBvZiBkaXNwYXRjaGVkIHR5cGVzICovXHJcbiAgICBzdGF0aWMgZ2V0IHNpZ25hbHMoKXtcclxuICAgICAgICByZXR1cm4gc2lnbmFscztcclxuICAgIH1cclxuXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFVzZXI7XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2FwaS9jb21wb25lbnRzL1VzZXIuanMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///59\n");

/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _CargoGroup = __webpack_require__(26);\n\nvar _CargoGroup2 = _interopRequireDefault(_CargoGroup);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _position = Symbol('position');\nvar _rotation = Symbol('rotation');\n\nvar PackingItem = function () {\n    function PackingItem() {\n        _classCallCheck(this, PackingItem);\n\n        this[_position] = new THREE.Vector3();\n        this[_rotation] = new THREE.Euler();\n    }\n\n    /** @returns {THREE.Vector3} */\n\n\n    _createClass(PackingItem, [{\n        key: 'position',\n        get: function get() {\n            return this[_position];\n        },\n        set: function set(value) {\n            this[_position] = value;\n        }\n\n        /** @returns {THREE.Euler} */\n\n    }, {\n        key: 'rotation',\n        get: function get() {\n            return this[_position];\n        },\n        set: function set(value) {\n            this[_rotation] = value;\n        }\n    }]);\n\n    return PackingItem;\n}();\n\nvar Cargo = function (_PackingItem) {\n    _inherits(Cargo, _PackingItem);\n\n    /**\r\n     * \r\n     * @param {CargoGroup} group\r\n     */\n    function Cargo(group) {\n        _classCallCheck(this, Cargo);\n\n        var _this = _possibleConstructorReturn(this, (Cargo.__proto__ || Object.getPrototypeOf(Cargo)).call(this));\n\n        _this.group = group;\n        return _this;\n    }\n\n    _createClass(Cargo, [{\n        key: 'Clone',\n        value: function Clone() {\n            var cargo = new Cargo(this.group);\n            return cargo;\n        }\n    }, {\n        key: 'ToString',\n        value: function ToString() {\n            var output = 'Cargo(' + this.entry.ToString() + ')';\n\n            return output;\n        }\n    }, {\n        key: 'entry',\n        get: function get() {\n            return this.group.entry;\n        }\n    }]);\n\n    return Cargo;\n}(PackingItem);\n\nexports.default = Cargo;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXBpL3BhY2tlci9DYXJnby5qcz81ZjZmIl0sIm5hbWVzIjpbIl9wb3NpdGlvbiIsIlN5bWJvbCIsIl9yb3RhdGlvbiIsIlBhY2tpbmdJdGVtIiwiVEhSRUUiLCJWZWN0b3IzIiwiRXVsZXIiLCJ2YWx1ZSIsIkNhcmdvIiwiZ3JvdXAiLCJjYXJnbyIsIm91dHB1dCIsImVudHJ5IiwiVG9TdHJpbmciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7OztBQUVBLElBQUlBLFlBQVlDLE9BQU8sVUFBUCxDQUFoQjtBQUNBLElBQUlDLFlBQVlELE9BQU8sVUFBUCxDQUFoQjs7SUFFTUUsVztBQUNGLDJCQUFhO0FBQUE7O0FBQ1QsYUFBS0gsU0FBTCxJQUFrQixJQUFJSSxNQUFNQyxPQUFWLEVBQWxCO0FBQ0EsYUFBS0gsU0FBTCxJQUFrQixJQUFJRSxNQUFNRSxLQUFWLEVBQWxCO0FBQ0g7O0FBRUQ7Ozs7OzRCQUNjO0FBQUUsbUJBQU8sS0FBS04sU0FBTCxDQUFQO0FBQXlCLFM7MEJBQzVCTyxLLEVBQU07QUFDZixpQkFBS1AsU0FBTCxJQUFrQk8sS0FBbEI7QUFDSDs7QUFFRDs7Ozs0QkFDYztBQUFFLG1CQUFPLEtBQUtQLFNBQUwsQ0FBUDtBQUF5QixTOzBCQUM1Qk8sSyxFQUFNO0FBQ2YsaUJBQUtMLFNBQUwsSUFBa0JLLEtBQWxCO0FBQ0g7Ozs7OztJQUdDQyxLOzs7QUFDRjs7OztBQUlBLG1CQUFZQyxLQUFaLEVBQWtCO0FBQUE7O0FBQUE7O0FBR2QsY0FBS0EsS0FBTCxHQUFhQSxLQUFiO0FBSGM7QUFJakI7Ozs7Z0NBTU07QUFDSCxnQkFBSUMsUUFBUSxJQUFJRixLQUFKLENBQVUsS0FBS0MsS0FBZixDQUFaO0FBQ0EsbUJBQU9DLEtBQVA7QUFDSDs7O21DQUVTO0FBQ04sZ0JBQUlDLFNBQVMsV0FBVyxLQUFLQyxLQUFMLENBQVdDLFFBQVgsRUFBWCxHQUFtQyxHQUFoRDs7QUFFQSxtQkFBT0YsTUFBUDtBQUNIOzs7NEJBYlU7QUFDUCxtQkFBTyxLQUFLRixLQUFMLENBQVdHLEtBQWxCO0FBQ0g7Ozs7RUFiZVQsVzs7a0JBMkJMSyxLIiwiZmlsZSI6IjYwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENhcmdvR3JvdXAgZnJvbSBcIi4vQ2FyZ29Hcm91cFwiO1xyXG5cclxudmFyIF9wb3NpdGlvbiA9IFN5bWJvbCgncG9zaXRpb24nKTtcclxudmFyIF9yb3RhdGlvbiA9IFN5bWJvbCgncm90YXRpb24nKTtcclxuXHJcbmNsYXNzIFBhY2tpbmdJdGVtIHtcclxuICAgIGNvbnN0cnVjdG9yKCl7XHJcbiAgICAgICAgdGhpc1tfcG9zaXRpb25dID0gbmV3IFRIUkVFLlZlY3RvcjMoKTtcclxuICAgICAgICB0aGlzW19yb3RhdGlvbl0gPSBuZXcgVEhSRUUuRXVsZXIoKTtcclxuICAgIH1cclxuXHJcbiAgICAvKiogQHJldHVybnMge1RIUkVFLlZlY3RvcjN9ICovXHJcbiAgICBnZXQgcG9zaXRpb24oKXsgcmV0dXJuIHRoaXNbX3Bvc2l0aW9uXTsgfVxyXG4gICAgc2V0IHBvc2l0aW9uKHZhbHVlKXtcclxuICAgICAgICB0aGlzW19wb3NpdGlvbl0gPSB2YWx1ZTtcclxuICAgIH1cclxuXHJcbiAgICAvKiogQHJldHVybnMge1RIUkVFLkV1bGVyfSAqL1xyXG4gICAgZ2V0IHJvdGF0aW9uKCl7IHJldHVybiB0aGlzW19wb3NpdGlvbl07IH1cclxuICAgIHNldCByb3RhdGlvbih2YWx1ZSl7XHJcbiAgICAgICAgdGhpc1tfcm90YXRpb25dID0gdmFsdWU7XHJcbiAgICB9XHJcbn1cclxuXHJcbmNsYXNzIENhcmdvIGV4dGVuZHMgUGFja2luZ0l0ZW0ge1xyXG4gICAgLyoqXHJcbiAgICAgKiBcclxuICAgICAqIEBwYXJhbSB7Q2FyZ29Hcm91cH0gZ3JvdXBcclxuICAgICAqL1xyXG4gICAgY29uc3RydWN0b3IoZ3JvdXApe1xyXG4gICAgICAgIHN1cGVyKCk7XHJcblxyXG4gICAgICAgIHRoaXMuZ3JvdXAgPSBncm91cDtcclxuICAgIH1cclxuXHJcbiAgICBnZXQgZW50cnkoKXtcclxuICAgICAgICByZXR1cm4gdGhpcy5ncm91cC5lbnRyeTtcclxuICAgIH1cclxuXHJcbiAgICBDbG9uZSgpe1xyXG4gICAgICAgIHZhciBjYXJnbyA9IG5ldyBDYXJnbyh0aGlzLmdyb3VwKTtcclxuICAgICAgICByZXR1cm4gY2FyZ287XHJcbiAgICB9XHJcblxyXG4gICAgVG9TdHJpbmcoKXtcclxuICAgICAgICB2YXIgb3V0cHV0ID0gJ0NhcmdvKCcgKyB0aGlzLmVudHJ5LlRvU3RyaW5nKCkgKyAnKSc7XHJcblxyXG4gICAgICAgIHJldHVybiBvdXRwdXQ7XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IENhcmdvO1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9hcGkvcGFja2VyL0NhcmdvLmpzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///60\n");

/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n        value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Utils = __webpack_require__(0);\n\nvar _Utils2 = _interopRequireDefault(_Utils);\n\nvar _Asset = __webpack_require__(4);\n\nvar _Asset2 = _interopRequireDefault(_Asset);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/** @typedef FloatingShelfParams @property {THREE.Vector3} padding x z for padding, y for thickness @property {Number} colorHex */\n/** @type {FloatingShelfParams} */\nvar defaultParams = {\n        padding: new THREE.Vector3(0, .001, 0),\n        colorHex: 0xffffff\n};\n\nvar box3 = new THREE.Box3();\nvar vec3 = new THREE.Vector3();\n\nvar FloatingShelf = function () {\n        /** @param {THREE.Object3D} targetView @param {FloatingShelfParams} params */\n        function FloatingShelf(targetView, params) {\n                _classCallCheck(this, FloatingShelf);\n\n                this.params = _Utils2.default.AssignUndefined(params, defaultParams);\n\n                this.targetView = targetView;\n                this.view = new THREE.Object3D();\n\n                var planeGeom = new THREE.BoxGeometry(1, 1, 1, 1, 1, 1);\n                var planeMaterial = new _Asset2.default.CreateSolidMaterialMatte(this.params.colorHex);\n                this.platformMesh = new THREE.Mesh(planeGeom, planeMaterial);\n                _Asset2.default.ReceiveShadow(this.platformMesh);\n\n                this.view.add(this.platformMesh);\n\n                this.Update();\n        }\n\n        _createClass(FloatingShelf, [{\n                key: \"Update\",\n                value: function Update() {\n                        box3.setFromObject(this.targetView);\n                        var worldToLocal = new THREE.Matrix4().getInverse(this.targetView.matrixWorld);\n                        box3.applyMatrix4(worldToLocal);\n                        box3.getSize(vec3);\n                        var height = vec3.y;\n\n                        var padding = this.params.padding;\n                        var thickness = Math.max(.0001, padding.y);\n                        this.platformMesh.scale.set(Math.max(.0001, vec3.x + padding.x * 2), thickness, Math.max(.0001, vec3.z + padding.z * 2));\n\n                        box3.getCenter(vec3);\n                        this.platformMesh.position.set(vec3.x, vec3.y - height / 2 - thickness, vec3.z);\n                }\n        }]);\n\n        return FloatingShelf;\n}();\n\nexports.default = FloatingShelf;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXBpL3ZpZXcvY29tcG9uZW50cy9GbG9hdGluZ1NoZWxmLmpzP2I4ZTIiXSwibmFtZXMiOlsiZGVmYXVsdFBhcmFtcyIsInBhZGRpbmciLCJUSFJFRSIsIlZlY3RvcjMiLCJjb2xvckhleCIsImJveDMiLCJCb3gzIiwidmVjMyIsIkZsb2F0aW5nU2hlbGYiLCJ0YXJnZXRWaWV3IiwicGFyYW1zIiwiVXRpbHMiLCJBc3NpZ25VbmRlZmluZWQiLCJ2aWV3IiwiT2JqZWN0M0QiLCJwbGFuZUdlb20iLCJCb3hHZW9tZXRyeSIsInBsYW5lTWF0ZXJpYWwiLCJBc3NldCIsIkNyZWF0ZVNvbGlkTWF0ZXJpYWxNYXR0ZSIsInBsYXRmb3JtTWVzaCIsIk1lc2giLCJSZWNlaXZlU2hhZG93IiwiYWRkIiwiVXBkYXRlIiwic2V0RnJvbU9iamVjdCIsIndvcmxkVG9Mb2NhbCIsIk1hdHJpeDQiLCJnZXRJbnZlcnNlIiwibWF0cml4V29ybGQiLCJhcHBseU1hdHJpeDQiLCJnZXRTaXplIiwiaGVpZ2h0IiwieSIsInRoaWNrbmVzcyIsIk1hdGgiLCJtYXgiLCJzY2FsZSIsInNldCIsIngiLCJ6IiwiZ2V0Q2VudGVyIiwicG9zaXRpb24iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7Ozs7QUFDQTs7Ozs7Ozs7QUFFQTtBQUNBO0FBQ0EsSUFBTUEsZ0JBQWdCO0FBQ2xCQyxpQkFBUyxJQUFJQyxNQUFNQyxPQUFWLENBQWtCLENBQWxCLEVBQXFCLElBQXJCLEVBQTJCLENBQTNCLENBRFM7QUFFbEJDLGtCQUFVO0FBRlEsQ0FBdEI7O0FBS0EsSUFBSUMsT0FBTyxJQUFJSCxNQUFNSSxJQUFWLEVBQVg7QUFDQSxJQUFJQyxPQUFPLElBQUlMLE1BQU1DLE9BQVYsRUFBWDs7SUFFTUssYTtBQUNGO0FBQ0EsK0JBQVlDLFVBQVosRUFBd0JDLE1BQXhCLEVBQStCO0FBQUE7O0FBRTNCLHFCQUFLQSxNQUFMLEdBQWNDLGdCQUFNQyxlQUFOLENBQXNCRixNQUF0QixFQUE4QlYsYUFBOUIsQ0FBZDs7QUFFQSxxQkFBS1MsVUFBTCxHQUFrQkEsVUFBbEI7QUFDQSxxQkFBS0ksSUFBTCxHQUFZLElBQUlYLE1BQU1ZLFFBQVYsRUFBWjs7QUFFQSxvQkFBSUMsWUFBWSxJQUFJYixNQUFNYyxXQUFWLENBQXNCLENBQXRCLEVBQXlCLENBQXpCLEVBQTRCLENBQTVCLEVBQStCLENBQS9CLEVBQWtDLENBQWxDLEVBQXFDLENBQXJDLENBQWhCO0FBQ0Esb0JBQUlDLGdCQUFnQixJQUFJQyxnQkFBTUMsd0JBQVYsQ0FBbUMsS0FBS1QsTUFBTCxDQUFZTixRQUEvQyxDQUFwQjtBQUNBLHFCQUFLZ0IsWUFBTCxHQUFvQixJQUFJbEIsTUFBTW1CLElBQVYsQ0FBZU4sU0FBZixFQUEwQkUsYUFBMUIsQ0FBcEI7QUFDQUMsZ0NBQU1JLGFBQU4sQ0FBb0IsS0FBS0YsWUFBekI7O0FBRUEscUJBQUtQLElBQUwsQ0FBVVUsR0FBVixDQUFjLEtBQUtILFlBQW5COztBQUVBLHFCQUFLSSxNQUFMO0FBQ0g7Ozs7eUNBRU87QUFDSm5CLDZCQUFLb0IsYUFBTCxDQUFtQixLQUFLaEIsVUFBeEI7QUFDQSw0QkFBTWlCLGVBQWUsSUFBSXhCLE1BQU15QixPQUFWLEdBQW9CQyxVQUFwQixDQUErQixLQUFLbkIsVUFBTCxDQUFnQm9CLFdBQS9DLENBQXJCO0FBQ0F4Qiw2QkFBS3lCLFlBQUwsQ0FBa0JKLFlBQWxCO0FBQ0FyQiw2QkFBSzBCLE9BQUwsQ0FBYXhCLElBQWI7QUFDQSw0QkFBSXlCLFNBQVN6QixLQUFLMEIsQ0FBbEI7O0FBRUEsNEJBQUloQyxVQUFVLEtBQUtTLE1BQUwsQ0FBWVQsT0FBMUI7QUFDQSw0QkFBSWlDLFlBQVlDLEtBQUtDLEdBQUwsQ0FBUyxLQUFULEVBQWdCbkMsUUFBUWdDLENBQXhCLENBQWhCO0FBQ0EsNkJBQUtiLFlBQUwsQ0FBa0JpQixLQUFsQixDQUF3QkMsR0FBeEIsQ0FBNEJILEtBQUtDLEdBQUwsQ0FBUyxLQUFULEVBQWdCN0IsS0FBS2dDLENBQUwsR0FBU3RDLFFBQVFzQyxDQUFSLEdBQVksQ0FBckMsQ0FBNUIsRUFBcUVMLFNBQXJFLEVBQWdGQyxLQUFLQyxHQUFMLENBQVMsS0FBVCxFQUFnQjdCLEtBQUtpQyxDQUFMLEdBQVN2QyxRQUFRdUMsQ0FBUixHQUFZLENBQXJDLENBQWhGOztBQUVBbkMsNkJBQUtvQyxTQUFMLENBQWVsQyxJQUFmO0FBQ0EsNkJBQUthLFlBQUwsQ0FBa0JzQixRQUFsQixDQUEyQkosR0FBM0IsQ0FBK0IvQixLQUFLZ0MsQ0FBcEMsRUFBdUNoQyxLQUFLMEIsQ0FBTCxHQUFTRCxTQUFTLENBQWxCLEdBQXNCRSxTQUE3RCxFQUF3RTNCLEtBQUtpQyxDQUE3RTtBQUNIOzs7Ozs7a0JBR1VoQyxhIiwiZmlsZSI6IjYxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFV0aWxzIGZyb20gXCIuLi8uLi91dGlscy9jaWsvVXRpbHNcIjtcclxuaW1wb3J0IEFzc2V0IGZyb20gXCIuLi8uLi9jb21wb25lbnRzL2Fzc2V0cy9Bc3NldFwiO1xyXG5cclxuLyoqIEB0eXBlZGVmIEZsb2F0aW5nU2hlbGZQYXJhbXMgQHByb3BlcnR5IHtUSFJFRS5WZWN0b3IzfSBwYWRkaW5nIHggeiBmb3IgcGFkZGluZywgeSBmb3IgdGhpY2tuZXNzIEBwcm9wZXJ0eSB7TnVtYmVyfSBjb2xvckhleCAqL1xyXG4vKiogQHR5cGUge0Zsb2F0aW5nU2hlbGZQYXJhbXN9ICovXHJcbmNvbnN0IGRlZmF1bHRQYXJhbXMgPSB7XHJcbiAgICBwYWRkaW5nOiBuZXcgVEhSRUUuVmVjdG9yMygwLCAuMDAxLCAwKSxcclxuICAgIGNvbG9ySGV4OiAweGZmZmZmZlxyXG59O1xyXG5cclxudmFyIGJveDMgPSBuZXcgVEhSRUUuQm94MygpO1xyXG52YXIgdmVjMyA9IG5ldyBUSFJFRS5WZWN0b3IzKCk7XHJcblxyXG5jbGFzcyBGbG9hdGluZ1NoZWxme1xyXG4gICAgLyoqIEBwYXJhbSB7VEhSRUUuT2JqZWN0M0R9IHRhcmdldFZpZXcgQHBhcmFtIHtGbG9hdGluZ1NoZWxmUGFyYW1zfSBwYXJhbXMgKi9cclxuICAgIGNvbnN0cnVjdG9yKHRhcmdldFZpZXcsIHBhcmFtcyl7XHJcblxyXG4gICAgICAgIHRoaXMucGFyYW1zID0gVXRpbHMuQXNzaWduVW5kZWZpbmVkKHBhcmFtcywgZGVmYXVsdFBhcmFtcyk7XHJcblxyXG4gICAgICAgIHRoaXMudGFyZ2V0VmlldyA9IHRhcmdldFZpZXc7XHJcbiAgICAgICAgdGhpcy52aWV3ID0gbmV3IFRIUkVFLk9iamVjdDNEKCk7XHJcblxyXG4gICAgICAgIGxldCBwbGFuZUdlb20gPSBuZXcgVEhSRUUuQm94R2VvbWV0cnkoMSwgMSwgMSwgMSwgMSwgMSk7XHJcbiAgICAgICAgbGV0IHBsYW5lTWF0ZXJpYWwgPSBuZXcgQXNzZXQuQ3JlYXRlU29saWRNYXRlcmlhbE1hdHRlKHRoaXMucGFyYW1zLmNvbG9ySGV4KTtcclxuICAgICAgICB0aGlzLnBsYXRmb3JtTWVzaCA9IG5ldyBUSFJFRS5NZXNoKHBsYW5lR2VvbSwgcGxhbmVNYXRlcmlhbCk7XHJcbiAgICAgICAgQXNzZXQuUmVjZWl2ZVNoYWRvdyh0aGlzLnBsYXRmb3JtTWVzaCk7XHJcblxyXG4gICAgICAgIHRoaXMudmlldy5hZGQodGhpcy5wbGF0Zm9ybU1lc2gpO1xyXG5cclxuICAgICAgICB0aGlzLlVwZGF0ZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIFVwZGF0ZSgpe1xyXG4gICAgICAgIGJveDMuc2V0RnJvbU9iamVjdCh0aGlzLnRhcmdldFZpZXcpO1xyXG4gICAgICAgIGNvbnN0IHdvcmxkVG9Mb2NhbCA9IG5ldyBUSFJFRS5NYXRyaXg0KCkuZ2V0SW52ZXJzZSh0aGlzLnRhcmdldFZpZXcubWF0cml4V29ybGQpO1xyXG4gICAgICAgIGJveDMuYXBwbHlNYXRyaXg0KHdvcmxkVG9Mb2NhbCk7XHJcbiAgICAgICAgYm94My5nZXRTaXplKHZlYzMpO1xyXG4gICAgICAgIGxldCBoZWlnaHQgPSB2ZWMzLnk7XHJcblxyXG4gICAgICAgIGxldCBwYWRkaW5nID0gdGhpcy5wYXJhbXMucGFkZGluZztcclxuICAgICAgICBsZXQgdGhpY2tuZXNzID0gTWF0aC5tYXgoLjAwMDEsIHBhZGRpbmcueSk7XHJcbiAgICAgICAgdGhpcy5wbGF0Zm9ybU1lc2guc2NhbGUuc2V0KE1hdGgubWF4KC4wMDAxLCB2ZWMzLnggKyBwYWRkaW5nLnggKiAyKSwgdGhpY2tuZXNzLCBNYXRoLm1heCguMDAwMSwgdmVjMy56ICsgcGFkZGluZy56ICogMikpO1xyXG5cclxuICAgICAgICBib3gzLmdldENlbnRlcih2ZWMzKTtcclxuICAgICAgICB0aGlzLnBsYXRmb3JtTWVzaC5wb3NpdGlvbi5zZXQodmVjMy54LCB2ZWMzLnkgLSBoZWlnaHQgLyAyIC0gdGhpY2tuZXNzLCB2ZWMzLnopO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBGbG9hdGluZ1NoZWxmO1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9hcGkvdmlldy9jb21wb25lbnRzL0Zsb2F0aW5nU2hlbGYuanMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///61\n");

/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Utils = __webpack_require__(0);\n\nvar _Utils2 = _interopRequireDefault(_Utils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar cubeGeometry = new THREE.BoxBufferGeometry(1, 1, 1, 1, 1, 1);\nvar outlineMaterial = new THREE.MeshBasicMaterial({ side: THREE.BackSide, depthWrite: false, depthTest: true });\nvar boxOutlineMaterial = new THREE.MeshBasicMaterial({ side: THREE.BackSide });\n\n/** @typedef OutlineParams @property {Number} color @property {Number} opacity @property {Number} offsetFactor @property {Number} offsetUnits */\n/** @type {OutlineParams} */\nvar defaultParams = {\n    color: 0x000000,\n    opacity: 1,\n    offsetFactor: 1,\n    offsetUnits: 1\n};\n\nvar tempBox3 = new THREE.Box3();\nvar tempMatrix4 = new THREE.Matrix4();\n\nvar Outline = function () {\n\n    /** @param {OutlineParams} params */\n    function Outline(params) {\n        _classCallCheck(this, Outline);\n\n        this.params = _Utils2.default.AssignUndefined(params, defaultParams);\n\n        this.view = new THREE.Object3D();\n\n        /** @type {Map<THREE.Object3D, THREE.Object3D>} */\n        this.outlines = new Map();\n    }\n\n    /** @param {THREE.Object3D} value */\n\n\n    _createClass(Outline, [{\n        key: \"Disable\",\n        value: function Disable() {\n            this.view.visible = false;\n        }\n    }, {\n        key: \"object3d\",\n        set: function set(value) {\n            if (!value) return this.Disable();\n\n            this.view.visible = true;\n\n            if (this.material === undefined) this.material = outlineMaterial.clone();\n            var material = this.material;\n            material.color.setHex(this.params.color);\n            material.opacity = THREE.Math.clamp(this.params.opacity, 0, 1);\n            material.transparent = true; //material.opacity < .999;\n            material.polygonOffset = true;\n            material.polygonOffsetFactor = -this.params.offsetFactor;\n            material.polygonOffsetUnits = this.params.offsetUnits;\n\n            var outline = this.outlines.get(value);\n            if (!outline) {\n                outline = value.clone(true);\n                if (outline instanceof THREE.Mesh) {\n                    outline.material = material;\n                } else {\n                    outline.children.forEach(function (oChild) {\n                        return oChild.traverse(function (child) {\n                            if (child instanceof THREE.Mesh) {\n                                var outlineReady = child.clone();\n                                outlineReady.material = material;\n                                if (child.parent) {\n                                    // Assuming end of hierarchical tree\n                                    child.parent.add(outlineReady);\n                                    child.parent.remove(child);\n                                }\n                            }\n                        });\n                    });\n                }\n\n                this.outlines.set(value, outline);\n            }\n\n            value.updateMatrixWorld();\n            outline.matrixWorld.copy(value.matrixWorld);\n\n            while (this.view.children.length > 0) {\n                this.view.remove(this.view.children[this.view.children.length - 1]);\n            }this.view.add(outline);\n        }\n\n        /** @param {THREE.Object3D} value */\n\n    }, {\n        key: \"box\",\n        set: function set(value) {\n            if (!value) return this.Disable();\n\n            this.view.visible = true;\n\n            if (this.boxMaterial === undefined) this.boxMaterial = boxOutlineMaterial.clone();\n            this.boxMaterial.color.setHex(this.params.color);\n            this.boxMaterial.opacity = THREE.Math.clamp(this.params.opacity, 0, 1);\n            this.boxMaterial.transparent = this.boxMaterial.opacity < .999;\n\n            if (this.boxMesh === undefined) {\n                this.boxMesh = new THREE.Mesh(cubeGeometry, this.boxMaterial);\n            }\n\n            value.updateMatrixWorld();\n            tempBox3.setFromObject(value);\n            tempBox3.getSize(this.view.scale);\n            this.view.scale.addScalar(this.params.offsetFactor);\n            tempBox3.getCenter(this.view.position);\n\n            var parent = this.view.parent;\n            if (parent) {\n                parent.updateMatrixWorld();\n                var inverse = tempMatrix4.getInverse(parent.matrixWorld);\n                this.view.applyMatrix(inverse);\n            }\n\n            while (this.view.children.length > 0) {\n                this.view.remove(this.view.children[this.view.children.length - 1]);\n            }this.view.add(this.boxMesh);\n        }\n    }]);\n\n    return Outline;\n}();\n\nexports.default = Outline;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///62\n");

/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Dimensions = __webpack_require__(24);\n\nvar _Dimensions2 = _interopRequireDefault(_Dimensions);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar type = 'Volume';\nvar _box3 = Symbol('box3');\n\nvar Volume = function () {\n    function Volume() {\n        _classCallCheck(this, Volume);\n\n        /**\r\n         * @type {THREE.Vector3}\r\n         */\n        this.position = new THREE.Vector3();\n\n        /**\r\n         * @type {Dimensions}\r\n         */\n        this.dimensions = new _Dimensions2.default();\n\n        this[_box3] = new THREE.Box3();\n    }\n\n    /** @returns {THREE.Box3} */\n\n\n    _createClass(Volume, [{\n        key: 'toJSON',\n        value: function toJSON() {\n            return {\n                type: type,\n                position: this.position,\n                dimensions: this.dimensions\n            };\n        }\n    }, {\n        key: 'ToString',\n        value: function ToString() {\n            return this.dimensions.ToString();\n        }\n    }, {\n        key: 'box3',\n        get: function get() {\n            /** @type {THREE.Box3} */\n            var b = this[_box3];\n            b.setFromCenterAndSize(this.position, this.dimensions.vec3);\n            return b;\n        }\n    }], [{\n        key: 'FromJSON',\n        value: function FromJSON(data, volume) {\n            if (!volume) {\n                if (data.type !== type) console.warn('Data supplied is not: ' + type);\n\n                volume = new Volume();\n            }\n\n            volume.position = new THREE.Vector3(data.position.x, data.position.y, data.position.z);\n            volume.dimensions = _Dimensions2.default.FromJSON(data.dimensions);\n\n            return volume;\n        }\n    }]);\n\n    return Volume;\n}();\n\nexports.default = Volume;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXBpL3BhY2tlci9jb250YWluZXIvVm9sdW1lLmpzP2Q0ZDkiXSwibmFtZXMiOlsidHlwZSIsIl9ib3gzIiwiU3ltYm9sIiwiVm9sdW1lIiwicG9zaXRpb24iLCJUSFJFRSIsIlZlY3RvcjMiLCJkaW1lbnNpb25zIiwiRGltZW5zaW9ucyIsIkJveDMiLCJUb1N0cmluZyIsImIiLCJzZXRGcm9tQ2VudGVyQW5kU2l6ZSIsInZlYzMiLCJkYXRhIiwidm9sdW1lIiwiY29uc29sZSIsIndhcm4iLCJ4IiwieSIsInoiLCJGcm9tSlNPTiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7Ozs7Ozs7QUFFQSxJQUFNQSxPQUFPLFFBQWI7QUFDQSxJQUFNQyxRQUFRQyxPQUFPLE1BQVAsQ0FBZDs7SUFFTUMsTTtBQUNGLHNCQUFhO0FBQUE7O0FBQ1Q7OztBQUdBLGFBQUtDLFFBQUwsR0FBZ0IsSUFBSUMsTUFBTUMsT0FBVixFQUFoQjs7QUFFQTs7O0FBR0EsYUFBS0MsVUFBTCxHQUFrQixJQUFJQyxvQkFBSixFQUFsQjs7QUFFQSxhQUFLUCxLQUFMLElBQWMsSUFBSUksTUFBTUksSUFBVixFQUFkO0FBQ0g7O0FBRUQ7Ozs7O2lDQVFRO0FBQ0osbUJBQU87QUFDSFQsc0JBQU1BLElBREg7QUFFSEksMEJBQVUsS0FBS0EsUUFGWjtBQUdIRyw0QkFBWSxLQUFLQTtBQUhkLGFBQVA7QUFLSDs7O21DQUVTO0FBQ04sbUJBQU8sS0FBS0EsVUFBTCxDQUFnQkcsUUFBaEIsRUFBUDtBQUNIOzs7NEJBakJTO0FBQ047QUFDQSxnQkFBSUMsSUFBSSxLQUFLVixLQUFMLENBQVI7QUFDQVUsY0FBRUMsb0JBQUYsQ0FBdUIsS0FBS1IsUUFBNUIsRUFBc0MsS0FBS0csVUFBTCxDQUFnQk0sSUFBdEQ7QUFDQSxtQkFBT0YsQ0FBUDtBQUNIOzs7aUNBY2VHLEksRUFBTUMsTSxFQUFPO0FBQ3pCLGdCQUFJLENBQUVBLE1BQU4sRUFBZTtBQUNYLG9CQUFHRCxLQUFLZCxJQUFMLEtBQWNBLElBQWpCLEVBQXVCZ0IsUUFBUUMsSUFBUixDQUFhLDJCQUEyQmpCLElBQXhDOztBQUV2QmUseUJBQVMsSUFBSVosTUFBSixFQUFUO0FBQ0g7O0FBRURZLG1CQUFPWCxRQUFQLEdBQWtCLElBQUlDLE1BQU1DLE9BQVYsQ0FBa0JRLEtBQUtWLFFBQUwsQ0FBY2MsQ0FBaEMsRUFBbUNKLEtBQUtWLFFBQUwsQ0FBY2UsQ0FBakQsRUFBb0RMLEtBQUtWLFFBQUwsQ0FBY2dCLENBQWxFLENBQWxCO0FBQ0FMLG1CQUFPUixVQUFQLEdBQW9CQyxxQkFBV2EsUUFBWCxDQUFvQlAsS0FBS1AsVUFBekIsQ0FBcEI7O0FBRUEsbUJBQU9RLE1BQVA7QUFDSDs7Ozs7O2tCQUdVWixNIiwiZmlsZSI6IjYzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IERpbWVuc2lvbnMgZnJvbSBcIi4uLy4uL2NvbXBvbmVudHMvYm94L0RpbWVuc2lvbnNcIjtcclxuXHJcbmNvbnN0IHR5cGUgPSAnVm9sdW1lJztcclxuY29uc3QgX2JveDMgPSBTeW1ib2woJ2JveDMnKTtcclxuXHJcbmNsYXNzIFZvbHVtZSB7XHJcbiAgICBjb25zdHJ1Y3Rvcigpe1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEB0eXBlIHtUSFJFRS5WZWN0b3IzfVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHRoaXMucG9zaXRpb24gPSBuZXcgVEhSRUUuVmVjdG9yMygpO1xyXG5cclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBAdHlwZSB7RGltZW5zaW9uc31cclxuICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLmRpbWVuc2lvbnMgPSBuZXcgRGltZW5zaW9ucygpO1xyXG5cclxuICAgICAgICB0aGlzW19ib3gzXSA9IG5ldyBUSFJFRS5Cb3gzKCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIEByZXR1cm5zIHtUSFJFRS5Cb3gzfSAqL1xyXG4gICAgZ2V0IGJveDMoKXtcclxuICAgICAgICAvKiogQHR5cGUge1RIUkVFLkJveDN9ICovXHJcbiAgICAgICAgbGV0IGIgPSB0aGlzW19ib3gzXTtcclxuICAgICAgICBiLnNldEZyb21DZW50ZXJBbmRTaXplKHRoaXMucG9zaXRpb24sIHRoaXMuZGltZW5zaW9ucy52ZWMzKTtcclxuICAgICAgICByZXR1cm4gYjtcclxuICAgIH1cclxuXHJcbiAgICB0b0pTT04oKXtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICB0eXBlOiB0eXBlLFxyXG4gICAgICAgICAgICBwb3NpdGlvbjogdGhpcy5wb3NpdGlvbixcclxuICAgICAgICAgICAgZGltZW5zaW9uczogdGhpcy5kaW1lbnNpb25zXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuXHJcbiAgICBUb1N0cmluZygpe1xyXG4gICAgICAgIHJldHVybiB0aGlzLmRpbWVuc2lvbnMuVG9TdHJpbmcoKTtcclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgRnJvbUpTT04oZGF0YSwgdm9sdW1lKXtcclxuICAgICAgICBpZiggISB2b2x1bWUgKSB7XHJcbiAgICAgICAgICAgIGlmKGRhdGEudHlwZSAhPT0gdHlwZSkgY29uc29sZS53YXJuKCdEYXRhIHN1cHBsaWVkIGlzIG5vdDogJyArIHR5cGUpO1xyXG5cclxuICAgICAgICAgICAgdm9sdW1lID0gbmV3IFZvbHVtZSgpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdm9sdW1lLnBvc2l0aW9uID0gbmV3IFRIUkVFLlZlY3RvcjMoZGF0YS5wb3NpdGlvbi54LCBkYXRhLnBvc2l0aW9uLnksIGRhdGEucG9zaXRpb24ueik7XHJcbiAgICAgICAgdm9sdW1lLmRpbWVuc2lvbnMgPSBEaW1lbnNpb25zLkZyb21KU09OKGRhdGEuZGltZW5zaW9ucyk7XHJcblxyXG4gICAgICAgIHJldHVybiB2b2x1bWU7XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFZvbHVtZTtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvYXBpL3BhY2tlci9jb250YWluZXIvVm9sdW1lLmpzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///63\n");

/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.pack = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n/**\r\n * @param {Region} region * @param {Number} color \r\n */\nvar debugRegionBlink = function () {\n    var _ref = _asyncToGenerator(function* (region, color, solid, checkered, blinks, onDuration, offDuration) {\n        for (var i = 0; i < blinks; i++) {\n            debugRegion(region, color, solid, onDuration, checkered);\n            yield sleep(onDuration + offDuration);\n        }\n    });\n\n    return function debugRegionBlink(_x, _x2, _x3, _x4, _x5, _x6, _x7) {\n        return _ref.apply(this, arguments);\n    };\n}();\n\n/** @param {Array<string>} */\n\n\n/**\r\n * \r\n * @param {Container} container \r\n * @param {Array<Item>} items // this array (and content) will be changed/emptied\r\n * @param {CUBParams} params \r\n */\nvar pack = function () {\n    var _ref2 = _asyncToGenerator(function* (container, items, params) {\n\n        this.params = _Utils2.default.AssignUndefined(params, defaultParams);\n\n        _Debug2.default.Viz.SetPackingSpaceVisibility(false);\n\n        var packedContainer = new PackedContainer(container, this.params);\n        packedContainer.items = items;\n\n        var iItem = items.length - 1;\n\n        // Helper function\n        function unpackItem(index) {\n            var item = items[index];\n            packedContainer.SetUnpacked(item);\n            items.splice(index, 1);\n            iItem--;\n        }\n\n        // Helper function\n        /** @param {Number} index * @param {PackedItem} item */\n        function packItem(index, item) {\n            packedContainer.SetPacked(item);\n\n            item.ref.quantity--;\n            if (item.ref.quantity === 0) {\n                items.splice(index, 1);\n                iItem--;\n            }\n        }\n\n        while (items.length > 0) {\n            var item = items[iItem];\n\n            // Clean-up regions\n            packedContainer.ProcessRegions();\n            /**/yield sleep(16);\n\n            // Try to pack item\n            var packedItem = packedContainer.FitLessWaste(item);\n            if (packedItem === false) {\n\n                /**/debugLog('item fitting failed.');\n                unpackItem(iItem);\n            } else {\n\n                packItem(iItem, packedItem);\n            }\n\n            /**/yield sleep(16);\n        }\n\n        packedContainer.packedItems.sort(PackedItem.Sort);\n\n        debugClear();\n        _Debug2.default.Viz.SetPackingSpaceVisibility(true);\n\n        return packedContainer;\n    });\n\n    return function pack(_x8, _x9, _x10) {\n        return _ref2.apply(this, arguments);\n    };\n}();\n\nvar _Components = __webpack_require__(30);\n\nvar _Debug = __webpack_require__(39);\n\nvar _Debug2 = _interopRequireDefault(_Debug);\n\nvar _Math2D = __webpack_require__(68);\n\nvar _Utils = __webpack_require__(0);\n\nvar _Utils2 = _interopRequireDefault(_Utils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; } /** @author chadiik <http://chadiik.com/> */\n\nvar debugging = false;\n\nvar running = true;\nif (debugging) {\n    _Debug2.default.app.sceneSetup.input.ListenKeys(['right', 'space']);\n}\n\nfunction sleep(ms, force) {\n    return new Promise(function (resolve) {\n        if (debugging || force) setTimeout(resolve, ms);else resolve();\n    });\n}\n\nfunction click(ms, force) {\n    return new Promise(function (resolve) {\n        if (debugging || force) {\n            var execute = function execute() {\n                if (tid !== undefined) clearTimeout(tid);\n                removeEventListener('mouseup', execute);\n                resolve();\n            };\n\n            var tid = undefined;\n\n            if (ms && ms > 0) tid = setTimeout(execute, ms);\n            addEventListener('mouseup', execute);\n        } else {\n            resolve();\n        }\n    });\n}\n\nfunction keypress(ms, force) {\n    return new Promise(function (resolve) {\n        if (debugging || force) {\n            var execute = function execute() {\n                if (tid !== undefined) clearTimeout(tid);\n                removeEventListener('keydown', execute);\n                resolve();\n            };\n\n            var tid = undefined;\n\n            if (ms && ms > 0) tid = setTimeout(execute, ms);\n            addEventListener('keydown', execute);\n        } else {\n            resolve();\n        }\n    });\n}\n\nfunction debugLog() {\n    var _console;\n\n    (_console = console).log.apply(_console, arguments);\n}\n\n/**\r\n * @param {Region} region * @param {Number} color \r\n */\nfunction debugRegion(region, color, solid, duration, checkered) {\n    var x = region.x,\n        y = region.y,\n        z = region.z,\n        w = region.width,\n        h = region.height,\n        l = region.length;\n    var debugUID = _Debug2.default.Viz.DrawVolume(x + w / 2, y + h / 2, z + l / 2, w, h, l, color || 0xaaffff, duration || -1, !Boolean(solid), checkered);\n    return debugUID;\n}function debugClear(uids) {\n    if (uids) {\n        uids.forEach(function (uid) {\n            _Debug2.default.Viz.RemoveObjectByUID(uid);\n        });\n    } else {\n        _Debug2.default.Viz.ClearAll();\n    }\n}\n\nfunction numberFormatDefault(n) {\n    return n;\n}\n\nfunction numberFormat(n, d) {\n    if (n > Number.MAX_SAFE_INTEGER - 2) return 'MAX';\n    var nStr = Math.round(n) !== n ? n.toFixed(d) : n;\n    return nStr;\n}\n\n/** @typedef FormatParams @property {Function} nf number formatting function */\n/** @param {string} str @param {FormatParams} params @param {Array<*>} args */\nfunction format(str, params) {\n    if (params.nf === undefined) params.nf = numberFormatDefault;\n    var index = 0;\n\n    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        args[_key - 2] = arguments[_key];\n    }\n\n    while ((index = str.indexOf('@', index)) !== -1) {\n        if (str[index - 1] !== '\\\\') {\n            var a = args.shift();\n            if (typeof a === 'number') a = params.nf(a);\n            str = str.replace('@', a);\n        }\n        index += 1;\n    }\n    return str;\n}\n\nvar epsilon = Math.pow(2, -52);\nvar smallValue = .000001;\nvar smallValueSqrt = .001;\nvar maxWeightValue = Number.MAX_SAFE_INTEGER;\n\n/** @typedef Rectangle @property {Vec2} p1 @property {Vec2} p2 @property {Vec2} p3 @property {Vec2} p4 \r\n * @property {Number} weight @property {Number} weightCapacity @property {Number} stackingCapacity \r\n */\n\n/**\r\n * @param {Rectangle | Array<Rectangle>} rect \r\n * @param {Number} weight \r\n * @param {Number} weightCapacity \r\n * @param {Number} stackingCapacity \r\n */\nfunction setRectangleWeights(rect, weight, weightCapacity, stackingCapacity) {\n    if (rect instanceof Array) {\n        for (var i = 0; i < rect.length; i++) {\n            rect[i].weight = weight;\n            rect[i].weightCapacity = weightCapacity;\n            rect[i].stackingCapacity = stackingCapacity;\n        }\n    } else {\n        rect.weight = weight;\n        rect.weightCapacity = weightCapacity;\n        rect.stackingCapacity = stackingCapacity;\n    }\n}\n\nvar Region = function () {\n    /**\r\n     * @param {Number} x * @param {Number} y * @param {Number} z * @param {Number} width * @param {Number} height * @param {Number} length * @param {Number} preferredX \r\n     */\n    function Region(x, y, z, width, height, length, preferredX) {\n        _classCallCheck(this, Region);\n\n        this.Set(x, y, z, width, height, length, preferredX);\n        this.SetWeights(0, maxWeightValue, maxWeightValue);\n    }\n\n    /**\r\n     * @param {Number} x * @param {Number} y * @param {Number} z * @param {Number} width * @param {Number} height * @param {Number} length * @param {Number} preferredX \r\n     */\n\n\n    _createClass(Region, [{\n        key: \"Set\",\n        value: function Set(x, y, z, width, height, length, preferredX) {\n            this.x = x;this.y = y;this.z = z;\n            this.width = width;this.height = height;this.length = length;\n            this.preferredX = preferredX;\n            return this;\n        }\n\n        /**\r\n         * @param {Number} weight \r\n         * @param {Number} weightCapacity \r\n         * @param {Number} stackingCapacity \r\n         */\n\n    }, {\n        key: \"SetWeights\",\n        value: function SetWeights(weight, weightCapacity, stackingCapacity) {\n            this.weight = weight;\n            this.weightCapacity = weightCapacity;\n            this.stackingCapacity = stackingCapacity;\n        }\n\n        /** @param {Region} region */\n\n    }, {\n        key: \"Copy\",\n        value: function Copy(region) {\n            this.Set(region.x, region.y, region.z, region.width, region.height, region.length, region.preferredX);\n            this.SetWeights(this.weight, this.weightCapacity, this.stackingCapacity);\n            return this;\n        }\n    }, {\n        key: \"GetCorners\",\n\n\n        /**\r\n         * @param {Number} offset offsets the region by this before calculating corners \r\n         * @returns {Array<Number>} 8 corners, length = 24 + center point [24, 25, 26]\r\n         */\n        value: function GetCorners(offset) {\n            var x = this.x - offset,\n                y = this.y - offset,\n                z = this.z - offset,\n                w = this.width + offset * 2,\n                h = this.height + offset * 2,\n                l = this.length + offset * 2;\n\n            tempCorners[0] = x;tempCorners[1] = y;tempCorners[2] = z; // 0:\n            tempCorners[3] = x + w;tempCorners[4] = y;tempCorners[5] = z; // 0:w\n            tempCorners[6] = x;tempCorners[7] = y + h;tempCorners[8] = z; // 0:h\n            tempCorners[9] = x + w;tempCorners[10] = y + h;tempCorners[11] = z; // 0:wh\n\n            tempCorners[12] = x;tempCorners[13] = y;tempCorners[14] = z + l; // 1:\n            tempCorners[15] = x + w;tempCorners[16] = y;tempCorners[17] = z + l; // 1:w\n            tempCorners[18] = x;tempCorners[19] = y + h;tempCorners[20] = z + l; // 1:h\n            tempCorners[21] = x + w;tempCorners[22] = y + h;tempCorners[23] = z + l; // 1:wh\n\n            tempCorners[24] = x + w / 2;tempCorners[25] = y + h / 2;tempCorners[26] = z + l / 2; // center\n\n            return tempCorners;\n        }\n\n        /**\r\n         * @param {Array} result\r\n         * @returns {Array<Number>} 4 corners, length = 12\r\n         */\n\n    }, {\n        key: \"GetFloorPoints\",\n        value: function GetFloorPoints(result) {\n            if (result === undefined) result = tempPoints;\n            var x = this.x,\n                y = this.y,\n                z = this.z,\n                w = this.width,\n                l = this.length;\n\n            result[0] = x;result[1] = y;result[2] = z;\n            result[3] = x + w;result[4] = y;result[5] = z;\n            result[6] = x + w;result[7] = y;result[8] = z + l;\n            result[9] = x;result[10] = y;result[11] = z + l;\n\n            return result;\n        }\n\n        /**\r\n         * @param {Number} offset offsets the region by this before checking * @param {Number} px * @param {Number} py * @param {Number} pz \r\n         */\n\n    }, {\n        key: \"ContainsPoint\",\n        value: function ContainsPoint(offset, px, py, pz) {\n            var x = this.x - offset,\n                y = this.y - offset,\n                z = this.z - offset,\n                w = this.width + offset * 2,\n                h = this.height + offset * 2,\n                l = this.length + offset * 2;\n            return px > x && px < x + w && py > y && py < y + h && pz > z && pz < z + l;\n        }\n\n        /** @param {Number} offset offsets the region by this before checking * @param {Region} subRegion */\n\n    }, {\n        key: \"ContainsRegion\",\n        value: function ContainsRegion(offset, subRegion) {\n            var x = this.x - offset,\n                y = this.y - offset,\n                z = this.z - offset,\n                w = this.width + offset * 2,\n                h = this.height + offset * 2,\n                l = this.length + offset * 2;\n            var rx = subRegion.x,\n                ry = subRegion.y,\n                rz = subRegion.z,\n                rw = subRegion.width,\n                rh = subRegion.height,\n                rl = subRegion.length;\n            return rx > x && rx + rw < x + w && ry > y && ry + rh < y + h && rz > z && rz + rl < z + l;\n        }\n\n        /** @param {Number} offset offsets the region by this before checking * @param {Region} other */\n\n    }, {\n        key: \"Intersects\",\n        value: function Intersects(offset, other) {\n            var x = this.x - offset,\n                y = this.y - offset,\n                z = this.z - offset,\n                w = this.width + offset * 2,\n                h = this.height + offset * 2,\n                l = this.length + offset * 2;\n\n            return x <= other.x + other.width && x + w >= other.x && y <= other.y + other.height && y + h >= other.y && z <= other.z + other.length && z + l >= other.z;\n        }\n\n        /** @param {Number} offset offsets the region by this before checking * @param {Number} width * @param {Number} height * @param {Number} length\r\n         * @param {Number} weight @param {Boolean} grounded\r\n         * @param {Region} [result]\r\n         */\n\n    }, {\n        key: \"FitTest\",\n        value: function FitTest(offset, width, height, length, weight, grounded, result) {\n            if (!result) result = tempRegion;\n\n            if (grounded && this.y > smallValue) return false;\n\n            // Check that all dimensions fit\n            var fit = width < this.width + offset * 2 && height < this.height + offset * 2 && length < this.length + offset * 2;\n            if (fit) {\n\n                var weightFit = weight <= this.weightCapacity;\n                if (weightFit) {\n\n                    // Calculate x based on preferred side\n                    var x = this.preferredX !== 0 ? this.x + this.width - width : this.x;\n                    result.Set(x, this.y, this.z, width, height, length, this.preferredX);\n                    result.SetWeights(weight, 0, maxWeightValue);\n                    return result;\n                }\n            }\n\n            return false;\n        }\n\n        /** @param {Region} region * @param {Number} minRegionAxis */\n\n    }, {\n        key: \"Subtract\",\n        value: function Subtract(region, minRegionAxis) {\n            /** @type {Array<Region>} */\n            var newRegions;\n\n            // Calculate a new east region\n            var axis = region.x + region.width;\n            var size = this.x + this.width - axis;\n            if (size > minRegionAxis) {\n                var east = new Region(axis, this.y, this.z, size, this.height, this.length, 0);\n                east.SetWeights(0, this.weightCapacity, this.stackingCapacity);\n                if (newRegions === undefined) newRegions = [];\n                newRegions.push(east);\n            }\n\n            // Calculate a new west region\n            axis = this.x;\n            size = region.x - axis;\n            if (size > minRegionAxis) {\n                var west = new Region(axis, this.y, this.z, size, this.height, this.length, 1);\n                west.SetWeights(0, this.weightCapacity, this.stackingCapacity);\n                if (newRegions === undefined) newRegions = [];\n                newRegions.push(west);\n            }\n\n            // Calculate a new over/up region\n            axis = region.y + region.height;\n            size = this.y + this.height - axis;\n            if (size > minRegionAxis) {\n                var over = new Region(region.x, axis, region.z, region.width, size, region.length, 0); // todo: add overhang var? // togglePreferredX based on pre-packed weight distribution?\n                over.SetWeights(0, region.stackingCapacity, region.stackingCapacity);\n                if (newRegions === undefined) newRegions = [];\n                newRegions.push(over);\n            }\n\n            // Calculate a new south region\n            axis = this.z;\n            size = region.z - axis;\n            if (false) {\n                var south = new Region(this.x, this.y, axis, this.width, this.height, size, 0); // todo togglePreferredX based on pre-packed weight distribution?\n                south.SetWeights(0, this.weightCapacity, this.stackingCapacity);\n                if (newRegions === undefined) newRegions = [];\n                newRegions.push(south);\n            }\n\n            // Set this as new north/front region\n            axis = region.z + region.length;\n            size = this.z + this.length - axis;\n            this.z = axis;\n            this.length = size;\n            this.SetWeights(0, this.weightCapacity, this.stackingCapacity);\n\n            return newRegions;\n        }\n\n        /** @param {Region} other */\n\n    }, {\n        key: \"ConnectFloorRects\",\n        value: function ConnectFloorRects(other) {\n            var ptsA = this.GetFloorPoints(tempPoints),\n                ptsB = other.GetFloorPoints(tempPoints2);\n\n            var adjacent = 0;\n            var intersections = [];\n            for (var iA = 0; iA < 12; iA += 3) {\n                var nextA = iA + 3 === 12 ? 0 : iA + 3;\n                var ax = ptsA[iA],\n                    az = ptsA[iA + 2],\n                    nax = ptsA[nextA],\n                    naz = ptsA[nextA + 2];\n\n                for (var iB = 0; iB < 12; iB += 3) {\n                    var nextB = iB + 3 === 12 ? 0 : iB + 3;\n                    var bx = ptsB[iB],\n                        bz = ptsB[iB + 2],\n                        nbx = ptsB[nextB],\n                        nbz = ptsB[nextB + 2];\n\n                    if ((0, _Math2D.rectangleContainsPoint)(smallValue, ptsA[0], ptsA[2], ptsA[6] - ptsA[0], ptsA[8] - ptsA[2], bx, bz) || (0, _Math2D.rectangleContainsPoint)(smallValue, ptsB[0], ptsB[2], ptsB[6] - ptsB[0], ptsB[8] - ptsB[2], ax, az)) {\n                        adjacent++;\n                    }\n\n                    var intersection = (0, _Math2D.linesIntersect)(ax, az, nax, naz, bx, bz, nbx, nbz);\n                    if (intersection && ((0, _Math2D.rectangleContainsPoint)(smallValue, ptsA[0], ptsA[2], ptsA[6] - ptsA[0], ptsA[8] - ptsA[2], intersection.x, intersection.y) || (0, _Math2D.rectangleContainsPoint)(smallValue, ptsB[0], ptsB[2], ptsB[6] - ptsB[0], ptsB[8] - ptsB[2], intersection.x, intersection.y))) {\n                        intersections.push(intersection);\n                    }\n                }\n            }\n\n            if (adjacent > 1) {\n                for (var i = 0; i < 12; i += 3) {\n                    intersections.push({ x: ptsA[i], y: ptsA[i + 2] }, { x: ptsB[i], y: ptsB[i + 2] });\n                }\n            } else {\n                intersections.length = 0;\n            }\n\n            var rectangles = (0, _Math2D.rectanglesFromPoints)(intersections);\n\n            var rectA = { p1: { x: ptsA[0], y: ptsA[2] }, p2: { x: ptsA[3], y: ptsA[5] }, p3: { x: ptsA[6], y: ptsA[8] }, p4: { x: ptsA[9], y: ptsA[11] } };\n            var rectB = { p1: { x: ptsB[0], y: ptsB[2] }, p2: { x: ptsB[3], y: ptsB[5] }, p3: { x: ptsB[6], y: ptsB[8] }, p4: { x: ptsB[9], y: ptsB[11] } };\n            rectangles.push(rectA, rectB);\n\n            (0, _Math2D.reduceRectangles)(rectangles);\n\n            setRectangleWeights(rectangles, this.weight + other.weight, this.weightCapacity + other.weightCapacity, this.stackingCapacity + other.stackingCapacity);\n\n            return rectangles;\n        }\n    }, {\n        key: \"ToString\",\n        value: function ToString() {\n            return format('R(p:[@, @, @], d:[@, @, @], w:@, wCap:@, sCap:@)', { nf: function nf(n) {\n                    return numberFormat(n, 2);\n                } }, this.x, this.y, this.z, this.width, this.height, this.length, this.weight, this.weightCapacity, this.stackingCapacity);\n        }\n\n        /**\r\n         * Deepest to front, smallest to largest\r\n         * @param {Region} a * @param {Region} b \r\n         */\n\n    }, {\n        key: \"volume\",\n        get: function get() {\n            return this.width * this.height * this.length;\n        }\n    }], [{\n        key: \"SortDeepestSmallest\",\n        value: function SortDeepestSmallest(a, b) {\n            if (a.z < b.z) return -1;\n            if (a.z > b.z) return 1;\n            if (a.volume < b.volume) return -1;\n            if (a.volume > b.volume) return 1;\n            return 0;\n        }\n    }]);\n\n    return Region;\n}();\n\nvar tempRegion = new Region();\nvar tempRegion2 = new Region();\nvar tempCorners = [0];\nvar tempPoints = [0];\nvar tempPoints2 = [0];\n\nvar PackedItem = function () {\n\n    /**\r\n     * @param {Item} ref \r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @param {Number} z\r\n     * @param {Number} packedWidth\r\n     * @param {Number} packedHeight\r\n     * @param {Number} packedLength\r\n     * @param {Number} orientation \r\n     */\n    function PackedItem(ref, x, y, z, packedWidth, packedHeight, packedLength, orientation) {\n        _classCallCheck(this, PackedItem);\n\n        this.ref = ref;\n        this.x = x;this.y = y;this.z = z;\n        this.packedWidth = packedWidth;this.packedHeight = packedHeight;this.packedLength = packedLength;\n        this.orientation = orientation;\n    }\n\n    /** @param {PackedItem} a * @param {PackedItem} b */\n\n\n    _createClass(PackedItem, null, [{\n        key: \"DepthSort\",\n        value: function DepthSort(a, b) {\n            var az = a.z + a.packedLength,\n                bz = b.z + b.packedLength;\n            if (az + smallValue < bz) return -1;\n            if (az > bz + smallValue) return 1;\n            if (a.y < b.y) return -1;\n            if (a.y > b.y) return 1;\n            if (a.ref.volume > b.ref.volume + smallValue) return -1;\n            if (a.ref.volume + smallValue < b.ref.volume) return 1;\n            return 0;\n        }\n\n        /** @param {PackedItem} a * @param {PackedItem} b */\n\n    }, {\n        key: \"Sort\",\n        value: function Sort(a, b) {\n            if (a.z + smallValue < b.z) {\n                if (a.z + a.packedLength > b.z && a.y > b.y) return 1;\n                return -1;\n            }\n            if (b.z + smallValue < a.z) {\n                if (b.z + b.packedLength > a.z && b.y > a.y) return 1;\n                return 1;\n            }\n            if (a.y < b.y) return -1;\n            if (a.y > b.y) return 1;\n            if (a.ref.volume > b.ref.volume + smallValue) return -1;\n            if (a.ref.volume + smallValue < b.ref.volume) return 1;\n            return 0;\n        }\n    }]);\n\n    return PackedItem;\n}();\n\nvar PackedContainer = function () {\n    /**\r\n     * @param {Container} container \r\n     * @param {CUBParams} params\r\n     */\n    function PackedContainer(container, params) {\n        _classCallCheck(this, PackedContainer);\n\n        this.container = container;\n        this.params = params;\n\n        /** @type {Array<PackedItem>} */\n        this.packedItems = [];\n        /** @type {Array<Item>} */\n        this.unpackedItems = [];\n\n        var firstRegion = new Region(0, 0, 0, container.width, container.height, container.length, 0);\n        firstRegion.SetWeights(0, this.container.weightCapacity, 0);\n        /** @type {Array<Region>} */\n        this.regions = [firstRegion];\n\n        /** @type {Array<PackedItem>} */\n        this.tops = [];\n\n        this.cumulatedWeight = 0;\n    }\n\n    /** @param {Array<Item>} items */\n\n\n    _createClass(PackedContainer, [{\n        key: \"SetPacked\",\n\n\n        /** @param {PackedItem} item */\n        value: function SetPacked(item) {\n            this.cumulatedWeight += item.ref.weight;\n            this.packedItems.push(item);\n            this.tops.push(item);\n        }\n\n        /** @param {Item} item */\n\n    }, {\n        key: \"SetUnpacked\",\n        value: function SetUnpacked(item) {\n            this.unpackedItems.push(item);\n        }\n\n        /** @param {Number} weight */\n\n    }, {\n        key: \"WeightPass\",\n        value: function WeightPass(weight) {\n            return this.cumulatedWeight + weight <= this.container.weightCapacity;\n        }\n\n        /** @param {Region} region * @param {Region} fit * @returns {Boolean} false if region has been deleted */\n\n    }, {\n        key: \"Occupy\",\n        value: function Occupy(region, fit) {\n            var _regions;\n\n            /*console.group('Regions');\r\n            this.regions.forEach(region => {\r\n                console.log(region.ToString());\r\n            });\r\n            console.groupEnd();*/\n\n            // Subtracts fit from region and calculates new bounding regions\n            var newRegions = region.Subtract(fit, this.assistant.minRegionAxis);\n\n            // Add new bounding regions if any\n            if (newRegions) (_regions = this.regions).push.apply(_regions, _toConsumableArray(newRegions));\n\n            // Check that region is still valid, otherwise remove it\n            if (region.length < this.assistant.minRegionAxis) {\n                var regionIndex = this.regions.indexOf(region);\n                this.regions.splice(regionIndex, 1);\n                return false;\n            }\n\n            var debugUIDs = [];\n            if (!newRegions) newRegions = [];\n            newRegions.push(region);\n            //console.group('Occupy');\n            newRegions.forEach(function (region) {\n                //console.log(region.ToString());\n                debugUIDs.push(debugRegion(region, 0xffff0000, true, -1, true));\n            });\n            //console.groupEnd();\n\n            debugClear(debugUIDs);\n\n            return true;\n        }\n    }, {\n        key: \"GetPlacementWithHighestScore\",\n\n\n        /** @param {Item} item */\n        value: function GetPlacementWithHighestScore(item) {\n            var numRegions = this.regions.length;\n            var volumeItem = item.volume;\n            var validOrientations = item.validOrientations;\n\n            /** @typedef PlacementScore @property {Number} region region index @property {Number} orientation orientation index @property {Number} n score */\n            /** @type {Array<PlacementScore>} */\n            var regionScoreTable = [],\n                orientationScoreTable = [];\n            var testSuccessfulRegions = 4;\n            // Try to fit in sorted regions\n            for (var iRegion = 0; iRegion < numRegions && testSuccessfulRegions > 0; iRegion++) {\n                var region = this.regions[iRegion];\n\n                if (region.volume > volumeItem) {\n                    var dummyRegion = tempRegion2.Copy(region);\n\n                    orientationScoreTable.length = 0;\n                    for (var iOrient = 0; iOrient < validOrientations.length; iOrient++) {\n                        var orientation = validOrientations[iOrient];\n\n                        var dimensions = item.GetOrientedDimensions(orientation);\n                        var regionFitTest = region.FitTest(smallValue, dimensions[0], dimensions[1], dimensions[2], item.weight, item.grounded);\n\n                        if (regionFitTest !== false) {\n\n                            testSuccessfulRegions--;\n\n                            // Subtracts fit from region and calculates new bounding regions\n                            var newRegions = dummyRegion.Subtract(regionFitTest, this.assistant.minRegionAxis);\n                            if (newRegions === undefined) newRegions = [];\n                            if (dummyRegion.length > this.assistant.minRegionAxis) newRegions.push(dummyRegion);\n\n                            var orientationScore = {\n                                region: iRegion,\n                                orientation: orientation,\n                                n: this.assistant.RateFit(item, regionFitTest, newRegions)\n                            };\n                            orientationScoreTable.push(orientationScore);\n                        }\n                    }\n\n                    if (orientationScoreTable.length > 0) {\n                        orientationScoreTable.sort(PackedContainer.SortByN);\n                        var regionScore = orientationScoreTable.pop();\n                        regionScoreTable.push(regionScore);\n                    }\n                }\n            }\n\n            if (regionScoreTable.length === 0) {\n                return false;\n            }\n\n            regionScoreTable.sort(PackedContainer.SortByN);\n            var highestScore = regionScoreTable.pop();\n            return highestScore;\n        }\n\n        /** @param {Item} item */\n\n    }, {\n        key: \"FitLessWaste\",\n        value: function FitLessWaste(item) {\n\n            // General weight check\n            if (this.WeightPass(item.weight) === false) return false;\n\n            var highestScore = this.GetPlacementWithHighestScore(item);\n\n            if (highestScore === false) {\n                console.log('revertedToRegular');\n                return this.FitRegular(item);\n            }\n\n            var region = this.regions[highestScore.region];\n            var orientation = item.validOrientations[highestScore.orientation];\n            var dimensions = item.GetOrientedDimensions(orientation);\n            var regionFitTest = region.FitTest(smallValue, dimensions[0], dimensions[1], dimensions[2], item.weight, item.grounded);\n            if (regionFitTest !== false) {\n                return this.CommitFit(item, region, regionFitTest, orientation);\n            }\n\n            return false;\n        }\n\n        /** @param {Item} item */\n\n    }, {\n        key: \"GetFirstFit\",\n        value: function GetFirstFit(item) {\n            var validOrientations = item.validOrientations;\n            var numRegions = this.regions.length;\n\n            // Try to fit in sorted regions\n            for (var iRegion = 0; iRegion < numRegions; iRegion++) {\n                var region = this.regions[iRegion];\n\n                for (var iOrient = 0; iOrient < validOrientations.length; iOrient++) {\n                    var orientation = validOrientations[iOrient];\n\n                    var dimensions = item.GetOrientedDimensions(orientation);\n\n                    // Fit test (success: Region, failure: false)\n                    var regionFitTest = region.FitTest(smallValue, dimensions[0], dimensions[1], dimensions[2], item.weight, item.grounded);\n                    if (regionFitTest !== false) {\n\n                        // Stacking & weight test \n\n                        /** @typedef Placement @property {Number} region region index @property {Number} orientation orientation index */\n                        /** @type {Placement} */\n                        var result = { region: iRegion, orientation: orientation };\n                        return result;\n                    }\n                }\n            }\n\n            return false;\n        }\n\n        /** @param {Item} item */\n\n    }, {\n        key: \"FitRegular\",\n        value: function FitRegular(item) {\n\n            // General weight check\n            if (this.WeightPass(item.weight) === false) return false;\n\n            var firstFit = this.GetFirstFit(item);\n            if (firstFit) {\n\n                var region = this.regions[firstFit.region];\n                var orientation = item.validOrientations[firstFit.orientation];\n                var dimensions = item.GetOrientedDimensions(orientation);\n\n                var regionFitTest = region.FitTest(smallValue, dimensions[0], dimensions[1], dimensions[2], item.weight, item.grounded);\n                if (regionFitTest !== false) {\n\n                    return this.CommitFit(item, region, regionFitTest, orientation);\n                }\n            }\n\n            return false;\n        }\n\n        /** @param {Item} item @param {Region} containingRegion @param {Region} placement @param {Number} orientation */\n\n    }, {\n        key: \"CommitFit\",\n        value: function CommitFit(item, containingRegion, placement, orientation) {\n\n            placement.SetWeights(item.weight, 0, item.stackingCapacity);\n\n            var numPackedItems = this.packedItems.length;\n\n            // Make sure that the new 'packed item to be' does not collide with a previous one\n            for (var iPacked = 0; iPacked < numPackedItems; iPacked++) {\n                var _packedItem = this.packedItems[iPacked];\n                // Creates temporary region for following calculations\n                var packedRegion = tempRegion2.Set(_packedItem.x, _packedItem.y, _packedItem.z, _packedItem.packedWidth, _packedItem.packedHeight, _packedItem.packedLength, 0);\n                packedRegion.SetWeights(_packedItem.ref.weight, 0, _packedItem.ref.stackingCapacity);\n\n                var intersects = packedRegion.Intersects(-smallValue, placement);\n                if (intersects) {\n                    console.log('revertedToRegular - CommitFit');\n                    return this.FitRegular(item);\n                }\n            }\n\n            // Create a new packed item\n            var packedItem = new PackedItem(item, placement.x, placement.y, placement.z, placement.width, placement.height, placement.length, orientation);\n            /**/var debugUID = debugRegion(placement, 0xffff0000, true);\n\n            // Reserve the tested sub region: regionFitTest from the containing region: region\n            var regionRemains = this.Occupy(containingRegion, placement);\n\n            /**/debugClear([debugUID]);\n            debugRegion(placement, 0xffffffff, false);\n\n            return packedItem;\n        }\n    }, {\n        key: \"ProcessRegionsPreferredX\",\n        value: function ProcessRegionsPreferredX() {\n            var regions = this.regions,\n                numRegions = regions.length;\n            var containerWidth = this.container.width;\n\n            for (var iRegion = 0; iRegion < numRegions; iRegion++) {\n                var region = regions[iRegion];\n\n                if (Math.abs(region.x) < smallValue) region.preferredX = 0;else if (Math.abs(region.x + region.width - containerWidth) < smallValue) region.preferredX = 1;\n            }\n        }\n    }, {\n        key: \"ProcessRegionsMergeExpand\",\n        value: function ProcessRegionsMergeExpand() {\n            var regions = this.regions,\n                numRegions = regions.length;\n\n            var toInt = 1 / smallValue;\n            function coordID(value) {\n                return Math.floor(value * toInt);\n            }\n\n            /** @typedef Level @property {Number} y @property {Array<Rectangle>} rectangles */\n            /** @type {Array<Level>} */\n            var levels = {};\n\n            var neighbours = [],\n                rectangles = [];\n            for (var iRegion = 0; iRegion < numRegions; iRegion++) {\n                var regionA = regions[iRegion];\n\n                if (regionA.weightCapacity > smallValue) {\n                    neighbours.length = 0;\n                    neighbours.push(iRegion);\n\n                    for (var jRegion = iRegion + 1; jRegion < numRegions; jRegion++) {\n                        var regionB = regions[jRegion];\n\n                        if (regionB.weightCapacity > smallValue && Math.abs(regionA.y - regionB.y) < smallValue) {\n                            var intersects = regionA.Intersects(smallValue, regionB);\n                            if (intersects) {\n                                neighbours.push(jRegion);\n                            }\n                        }\n                    }\n\n                    var numNeighbours = neighbours.length;\n                    if (numNeighbours > 1) {\n                        rectangles.length = 0;\n\n                        for (var iNeighbour = 0; iNeighbour < numNeighbours; iNeighbour++) {\n                            var neighbourA = regions[neighbours[iNeighbour]];\n\n                            for (var jNeighbour = iNeighbour + 1; jNeighbour < numNeighbours; jNeighbour++) {\n                                var neighbourB = regions[neighbours[jNeighbour]];\n\n                                var connectedNeighbours = neighbourA.ConnectFloorRects(neighbourB);\n                                rectangles.push.apply(rectangles, _toConsumableArray(connectedNeighbours));\n                            }\n                        }\n\n                        if (rectangles.length > 0) {\n                            var _levels$yCat$rectangl;\n\n                            var yCat = coordID(regionA.y);\n                            if (levels[yCat] === undefined) levels[yCat] = { y: regionA.y, rectangles: [] };\n                            (_levels$yCat$rectangl = levels[yCat].rectangles).push.apply(_levels$yCat$rectangl, rectangles);\n                        }\n                    }\n                }\n            }\n\n            var levelsYCats = Object.keys(levels);\n            for (var iYCat = 0, numYCats = levelsYCats.length; iYCat < numYCats; iYCat++) {\n                /** @type {Level} */\n                var level = levels[levelsYCats[iYCat]];\n                var _rectangles = level.rectangles;\n                var regionY = level.y;\n                var regionHeight = this.container.height - regionY;\n\n                (0, _Math2D.reduceRectangles)(_rectangles);\n                for (var iRect = 0, numRects = _rectangles.length; iRect < numRects; iRect++) {\n                    var rect = _rectangles[iRect];\n                    var rx = rect.p1.x,\n                        ry = rect.p1.y;\n                    var rw = rect.p3.x - rx,\n                        rh = rect.p3.y - ry;\n\n                    // Calculate preferred packing side based on center point relative to container\n                    var preferredX = rx.x + rw / 2 < this.container.width / 2 ? 0 : 1;\n                    var newRegion = new Region(rx, regionY, ry, rw, regionHeight, rh, preferredX);\n                    newRegion.SetWeights(rect.weight, rect.weightCapacity, rect.stackingCapacity);\n                    this.regions.push(newRegion);\n                }\n            }\n        }\n    }, {\n        key: \"ProcessRegionsForZeroRegions\",\n        value: function ProcessRegionsForZeroRegions() {\n            var regions = this.regions;\n            var minRegionAxis = this.assistant.minRegionAxis;\n            for (var iRegion = 0; iRegion < regions.length; iRegion++) {\n                var region = regions[iRegion];\n                if (region.width < minRegionAxis || region.height < minRegionAxis || region.length < minRegionAxis) {\n                    regions.splice(iRegion, 1);\n                    iRegion--;\n                }\n            }\n        }\n\n        /** @param {PackedItem} packedItem @param {Boolean} [harsh] default = false */\n\n    }, {\n        key: \"ProcessRegionsPerPackedItem\",\n        value: function ProcessRegionsPerPackedItem(packedItem, harsh) {\n            var regions = this.regions;\n            var itemVolume = packedItem.ref.volume;\n\n            // Creates temporary region for following calculations\n            var packedRegion = tempRegion.Set(packedItem.x, packedItem.y, packedItem.z, packedItem.packedWidth, packedItem.packedHeight, packedItem.packedLength, 0);\n            packedRegion.SetWeights(packedItem.ref.weight, 0, packedItem.ref.stackingCapacity);\n\n            for (var iRegion = 0; iRegion < regions.length; iRegion++) {\n                var region = regions[iRegion];\n\n                if (itemVolume > region.volume && packedRegion.ContainsRegion(smallValue, region)) {\n                    regions.splice(iRegion, 1);\n                    iRegion--;\n                    console.log('Contained region' + iRegion + ' deleted');\n                    continue;\n                }\n\n                if (packedRegion.Intersects(-smallValue, region)) {\n\n                    if (harsh) {\n                        console.log('\\tIntersecting region' + iRegion + ' deleted (!)');\n                        regions.slice(iRegion, 1);\n                        iRegion--;\n                        continue;\n                    }\n\n                    var regionRemains = this.Occupy(region, packedRegion);\n                    iRegion--;\n                }\n            }\n        }\n    }, {\n        key: \"ProcessRegionsForPackedItems\",\n        value: function ProcessRegionsForPackedItems(harsh) {\n            var packedItems = this.packedItems,\n                numPackedItems = packedItems.length;\n\n            for (var iItem = 0; iItem < numPackedItems; iItem++) {\n                var packedItem = packedItems[iItem];\n                this.ProcessRegionsPerPackedItem(packedItem, harsh);\n            }\n        }\n    }, {\n        key: \"ProcessRegionsEnclosed\",\n        value: function ProcessRegionsEnclosed() {\n            var regions = this.regions;\n\n            for (var iRegion = 0; iRegion < regions.length; iRegion++) {\n                var regionA = regions[iRegion];\n                var volumeA = regionA.volume;\n\n                for (var jRegion = iRegion + 1; jRegion < regions.length; jRegion++) {\n                    var regionB = regions[jRegion];\n                    var volumeB = regionB.volume;\n\n                    if (volumeA < volumeB) {\n                        // If a A is completely contained within B, remove the A\n                        if (regionB.ContainsRegion(smallValue, regionA)) {\n                            regions.splice(iRegion, 1);\n                            iRegion--;\n                            break;\n                        }\n                    } else {\n                        // If a B is completely contained within A, remove the B\n                        if (regionA.ContainsRegion(smallValue, regionB)) {\n                            regions.splice(jRegion, 1);\n                            jRegion--;\n                        }\n                    }\n                }\n            }\n        }\n    }, {\n        key: \"ProcessRegions\",\n        value: function ProcessRegions() {\n            var regions = this.regions;\n\n            if (global.processRegionsCount === undefined) global.processRegionsCount = 0;\n\n            // Recalculate preferred insertion side per region (left or right)\n            this.ProcessRegionsPreferredX();\n\n            // Removes regions that are completely enclosed in packed volumes, and correct any intersecting ones\n            this.ProcessRegionsForPackedItems();\n\n            // Merge and expand free regions (can span several packed item tops)\n            this.ProcessRegionsMergeExpand();\n\n            // Removes unuseable regions\n            this.ProcessRegionsForZeroRegions();\n\n            // Removes regions that are completely enclosed in larger regions\n            this.ProcessRegionsEnclosed();\n\n            // Sort by z (first) and volume (second)\n            regions.sort(Region.SortDeepestSmallest);\n\n            this.packedItems.sort(PackedItem.Sort);\n\n            /*console.group('ProcessRegions');\r\n            regions.forEach(region => {\r\n                console.log(region.ToString());\r\n            });\r\n            console.groupEnd();*/\n        }\n    }, {\n        key: \"items\",\n        set: function set(items) {\n            this.assistant = new PackingAssistant(items, this);\n        }\n    }], [{\n        key: \"SortByN\",\n        value: function SortByN(a, b) {\n            if (isNaN(a.n) || isNaN(b.n)) return 0;\n\n            if (a.n < b.n) return -1;\n            if (a.n > b.n) return 1;\n            return 0;\n        }\n    }]);\n\n    return PackedContainer;\n}();\n\nvar PackingAssistant = function () {\n    /**\r\n     * @param {Array<Item>} items \r\n     * @param {PackedContainer} packedContainer \r\n     */\n    function PackingAssistant(items, packedContainer) {\n        _classCallCheck(this, PackingAssistant);\n\n        global.assistant = this;\n        this.debugRegion = function (regionIndex) {};\n\n        this.params = {\n            minDimensionsNoWasteFactor: [1, 1, 1]\n        };\n\n        this.workingItems = items;\n        this.packedContainer = packedContainer;\n        this.workingRegions = this.packedContainer.regions;\n\n        this.minRegionAxis = smallValue;\n\n        this.workingItemsSortFunction = _Components.Item.VolumeSort;\n\n        // Sort items by volume ascending\n        this.workingItems.sort(this.workingItemsSortFunction);\n\n        var minDimensionsSearchSet = this.workingItems;\n        //minDimensionsSearchSet = [this.workingItems[0]];\n        this.minDimensions = this.GetMinDimensionsOverall(minDimensionsSearchSet);\n    }\n\n    /** @param {Array<Item>} items */\n\n\n    _createClass(PackingAssistant, [{\n        key: \"GetMinDimensionsOverall\",\n        value: function GetMinDimensionsOverall(items) {\n            var minDimensions = [Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER];\n\n            for (var iItem = 0, numItems = items.length; iItem < numItems; iItem++) {\n                var item = items[iItem];\n                var validOrientations = item.validOrientations;\n                for (var iOrient = 0; iOrient < validOrientations.length; iOrient++) {\n                    var orientation = validOrientations[iOrient];\n                    var dimensions = item.GetOrientedDimensions(orientation);\n                    if (dimensions[0] < minDimensions[0]) minDimensions[0] = dimensions[0];\n                    if (dimensions[1] < minDimensions[1]) minDimensions[1] = dimensions[1];\n                    if (dimensions[2] < minDimensions[2]) minDimensions[2] = dimensions[2];\n                }\n            }\n\n            return minDimensions;\n        }\n\n        /**\r\n         * \r\n         * @param {Item} fittedItem \r\n         * @param {Region} fit \r\n         * @param {Array<Region>} newRegions \r\n         */\n\n    }, {\n        key: \"RateFit\",\n        value: function RateFit(fittedItem, fit, newRegions) {\n\n            // Try out a recursive deep rate fit\n\n            var containerLength = this.packedContainer.container.length;\n            var minDimensions = this.minDimensions;\n            var minDimensionsNoWasteFactor = this.params.minDimensionsNoWasteFactor;\n\n            var minZScore = 1 - (fit.z + fit.length) / containerLength; // 0-1\n\n            // new regions usability score\n            var minWasteScore = 1; // have completely filled the region if newRegions.length === 0\n            if (newRegions.length > 0) {\n                minWasteScore = 0;\n                for (var iRegion = 0; iRegion < newRegions.length; iRegion++) {\n                    var region = newRegions[iRegion];\n\n                    var scoreW = 0,\n                        scoreH = 0,\n                        scoreL = 0;\n                    if (region.width >= minDimensions[0] && region.width - minDimensions[0] < minDimensions[0] * minDimensionsNoWasteFactor[0]) scoreW += 1;\n                    if (region.height >= minDimensions[1] && region.width - minDimensions[1] < minDimensions[1] * minDimensionsNoWasteFactor[1]) scoreH += 1;\n                    if (region.length >= minDimensions[2] && region.width - minDimensions[2] < minDimensions[2] * minDimensionsNoWasteFactor[2]) scoreL += 1;\n\n                    minWasteScore += scoreW * .5 + scoreH * .3 + scoreL * .2;\n                }\n                minWasteScore /= newRegions.length;\n            }\n\n            var minZ_weight = this.packedContainer.params.minZ_weight;\n            var minWaste_weight = this.packedContainer.params.minWaste_weight;\n            var score = minZScore * minZ_weight + minWasteScore * minWaste_weight;\n            return score;\n        }\n    }]);\n\n    return PackingAssistant;\n}();\n\n/**\r\n * @typedef CUBParams\r\n * @property {Number} minZ_weight score for tightly packing in length (Z)\r\n * @property {Number} minWaste_weight score for minimizing wasted space\r\n */\n\n/** @type {CUBParams} */\n\n\nvar defaultParams = {\n    minZ_weight: .9,\n    minWaste_weight: .1\n};exports.pack = pack;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(12)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///64\n");

/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Item = __webpack_require__(66);\n\nvar _Item2 = _interopRequireDefault(_Item);\n\nvar _Container = __webpack_require__(67);\n\nvar _Container2 = _interopRequireDefault(_Container);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * @param {Array<Object>} objects \r\n * @param {Array<string>} m - mapping to Item.constructor, ie: [ID, Length, ...]\r\n */\nfunction toItems(objects, m) {\n    var items = [];\n    objects.forEach(function (o) {\n        items.push(new _Item2.default(o[m[0]], o[m[1]], o[m[2]], o[m[3]], o[m[4]]));\n    });\n    return items;\n}\n\nvar TestData =\n/**\r\n * @param {Container} container \r\n * @param {Array<Item>} items \r\n */\nfunction TestData(container, items) {\n    _classCallCheck(this, TestData);\n\n    this.container = container;\n    this.items = items;\n};\n\nvar AFitTest = function () {\n    function AFitTest() {\n        _classCallCheck(this, AFitTest);\n    }\n\n    _createClass(AFitTest, null, [{\n        key: \"GenerateDataSample1\",\n        value: function GenerateDataSample1() {\n            var containerData = { ID: 1000, Name: 'Box1', Length: 15, Width: 13, Height: 9 };\n            var itemsData = [{ ID: 1000, Name: 'Item1', Length: 5, Width: 4, Height: 2, Quantity: 1 }, { ID: 1001, Name: 'Item2', Length: 2, Width: 1, Height: 1, Quantity: 3 }, { ID: 1002, Name: 'Item3', Length: 9, Width: 7, Height: 3, Quantity: 4 }, { ID: 1003, Name: 'Item4', Length: 13, Width: 6, Height: 3, Quantity: 8 }, { ID: 1004, Name: 'Item5', Length: 17, Width: 8, Height: 6, Quantity: 1 }, { ID: 1005, Name: 'Item6', Length: 3, Width: 3, Height: 2, Quantity: 2 }];\n\n            var container = Object.assign(new _Container2.default(), containerData);\n            var items = toItems(itemsData, ['ID', 'Length', 'Width', 'Height', 'Quantity']);\n\n            var data = new TestData(container, items);\n            return data;\n        }\n    }, {\n        key: \"GenerateDataSample2\",\n        value: function GenerateDataSample2() {\n            var containerData = { ID: 1000, Name: 'Box1', Length: 60, Width: 35, Height: 25 };\n            var itemsData = [{ ID: 1000, Name: 'Item1', Length: 30, Width: 50, Height: 20, Quantity: 1 }, { ID: 1003, Name: 'Item4', Length: 13, Width: 6, Height: 3, Quantity: 6 }, { ID: 1004, Name: 'Item5', Length: 17, Width: 8, Height: 6, Quantity: 3 }, { ID: 1005, Name: 'Item6', Length: 5, Width: 5, Height: 2, Quantity: 16 }];\n\n            var container = Object.assign(new _Container2.default(), containerData);\n            var items = toItems(itemsData, ['ID', 'Length', 'Width', 'Height', 'Quantity']);\n\n            var data = new TestData(container, items);\n            return data;\n        }\n    }, {\n        key: \"GenerateDataSampleFlatdeck\",\n        value: function GenerateDataSampleFlatdeck() {\n            var containerData = { ID: 1000, Name: 'Box1', Length: 576, Width: 102, Height: 102 };\n            var itemsData = [{ ID: 1000, Name: 'Item1', Length: 100, Width: 70, Height: 90, Quantity: 3 }, { ID: 1003, Name: 'Item4', Length: 60, Width: 60, Height: 60, Quantity: 7 }, { ID: 1004, Name: 'Item5', Length: 40, Width: 20, Height: 30, Quantity: 4 }, { ID: 1005, Name: 'Item6', Length: 30, Width: 20, Height: 30, Quantity: 20 }];\n\n            var container = Object.assign(new _Container2.default(), containerData);\n            var items = toItems(itemsData, ['ID', 'Length', 'Width', 'Height', 'Quantity']);\n\n            var data = new TestData(container, items);\n            return data;\n        }\n    }, {\n        key: \"GenerateDataSampleFlatdeck2\",\n        value: function GenerateDataSampleFlatdeck2() {\n            var containerData = { ID: 1000, Name: 'Box1', Length: 576, Width: 102, Height: 102, WeightCapacity: 48000 };\n            var itemsData = [{ ID: 1000, Name: 'Item1', Length: 100, Width: 70, Height: 90, Quantity: 3 }, { ID: 1003, Name: 'Item4', Length: 60, Width: 60, Height: 60, Quantity: 7, StackingCapacity: 0 }, { ID: 1004, Name: 'Item5', Length: 40, Width: 28, Height: 30, Quantity: 4 }, { ID: 1005, Name: 'Item6', Length: 30, Width: 23, Height: 34, Quantity: 20 }, { ID: 1005, Name: 'Item6', Length: 45, Width: 20, Height: 30, Quantity: 30 }, { ID: 1005, Name: 'Item6', Length: 35, Width: 22, Height: 18, Quantity: 27 }];\n\n            var container = Object.assign(new _Container2.default(), containerData);\n            var items = toItems(itemsData, ['ID', 'Length', 'Width', 'Height', 'Quantity']);\n\n            var data = new TestData(container, items);\n            return data;\n        }\n    }]);\n\n    return AFitTest;\n}();\n\nexports.default = AFitTest;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///65\n");

/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction almost(n1, n2) {\n    return Math.abs(n1 - n2) < .01;\n}\n\nvar Item = function () {\n    /**\r\n     * @param {Object} id \r\n     * @param {Number} dim1 \r\n     * @param {Number} dim2 \r\n     * @param {Number} dim3 \r\n     * @param {Number} quantity \r\n     */\n    function Item(id, dim1, dim2, dim3, quantity) {\n        _classCallCheck(this, Item);\n\n        this.ID = id;\n        this.IsPacked = false;\n        this.Dim1 = dim2;\n        this.Dim2 = dim1;\n        this.Dim3 = dim3;\n        this.CoordX = 0;\n        this.CoordY = 0;\n        this.CoordZ = 0;\n        this.Quantity = quantity;\n        this.PackDimX = 0;\n        this.PackDimY = 0;\n        this.PackDimZ = 0;\n        this.Volume = this.Dim1 * this.Dim2 * this.Dim3;\n    }\n\n    /** \r\n     * @param {Item} item\r\n     * @returns {string} - axis order (xyz, xzy, yxz, yzx, zxy or zyx)\r\n     */\n\n\n    _createClass(Item, null, [{\n        key: 'ResolveOrientation',\n        value: function ResolveOrientation(item) {\n            var w = item.Dim1,\n                l = item.Dim2,\n                h = item.Dim3;\n\n            if (almost(item.PackDimX, w)) {\n                // x\n                if (almost(item.PackDimY, h)) {\n                    // y\n                    return 'xyz';\n                } else if (almost(item.PackDimY, l)) {\n                    // z\n                    return 'xzy';\n                }\n            } else if (almost(item.PackDimX, h)) {\n                // y\n                if (almost(item.PackDimY, w)) {\n                    // x\n                    return 'yxz';\n                } else if (almost(item.PackDimY, l)) {\n                    // z\n                    return 'yzx';\n                }\n            } else if (almost(item.PackDimX, l)) {\n                // z\n                if (almost(item.PackDimY, w)) {\n                    // x\n                    return 'zxy';\n                } else if (almost(item.PackDimY, h)) {\n                    // y\n                    return 'zyx';\n                }\n            }\n\n            return 'xyz';\n        }\n    }]);\n\n    return Item;\n}();\n\nexports.default = Item;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXBpL3BhY2tlci9hZml0L2NvbXBvbmVudHMvSXRlbS5qcz80ZGEzIl0sIm5hbWVzIjpbImFsbW9zdCIsIm4xIiwibjIiLCJNYXRoIiwiYWJzIiwiSXRlbSIsImlkIiwiZGltMSIsImRpbTIiLCJkaW0zIiwicXVhbnRpdHkiLCJJRCIsIklzUGFja2VkIiwiRGltMSIsIkRpbTIiLCJEaW0zIiwiQ29vcmRYIiwiQ29vcmRZIiwiQ29vcmRaIiwiUXVhbnRpdHkiLCJQYWNrRGltWCIsIlBhY2tEaW1ZIiwiUGFja0RpbVoiLCJWb2x1bWUiLCJpdGVtIiwidyIsImwiLCJoIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQ0EsU0FBU0EsTUFBVCxDQUFnQkMsRUFBaEIsRUFBb0JDLEVBQXBCLEVBQXVCO0FBQ25CLFdBQU9DLEtBQUtDLEdBQUwsQ0FBU0gsS0FBS0MsRUFBZCxJQUFvQixHQUEzQjtBQUNIOztJQUVLRyxJO0FBQ0Y7Ozs7Ozs7QUFPQSxrQkFBWUMsRUFBWixFQUFnQkMsSUFBaEIsRUFBc0JDLElBQXRCLEVBQTRCQyxJQUE1QixFQUFrQ0MsUUFBbEMsRUFBMkM7QUFBQTs7QUFDdkMsYUFBS0MsRUFBTCxHQUFVTCxFQUFWO0FBQ0EsYUFBS00sUUFBTCxHQUFnQixLQUFoQjtBQUNBLGFBQUtDLElBQUwsR0FBWUwsSUFBWjtBQUNBLGFBQUtNLElBQUwsR0FBWVAsSUFBWjtBQUNBLGFBQUtRLElBQUwsR0FBWU4sSUFBWjtBQUNBLGFBQUtPLE1BQUwsR0FBYyxDQUFkO0FBQ0EsYUFBS0MsTUFBTCxHQUFjLENBQWQ7QUFDQSxhQUFLQyxNQUFMLEdBQWMsQ0FBZDtBQUNBLGFBQUtDLFFBQUwsR0FBZ0JULFFBQWhCO0FBQ0EsYUFBS1UsUUFBTCxHQUFnQixDQUFoQjtBQUNBLGFBQUtDLFFBQUwsR0FBZ0IsQ0FBaEI7QUFDQSxhQUFLQyxRQUFMLEdBQWdCLENBQWhCO0FBQ0EsYUFBS0MsTUFBTCxHQUFjLEtBQUtWLElBQUwsR0FBWSxLQUFLQyxJQUFqQixHQUF3QixLQUFLQyxJQUEzQztBQUNIOztBQUVEOzs7Ozs7OzsyQ0FJMEJTLEksRUFBSztBQUMzQixnQkFBSUMsSUFBSUQsS0FBS1gsSUFBYjtBQUFBLGdCQUFtQmEsSUFBSUYsS0FBS1YsSUFBNUI7QUFBQSxnQkFBa0NhLElBQUlILEtBQUtULElBQTNDOztBQUVBLGdCQUFHZixPQUFPd0IsS0FBS0osUUFBWixFQUFzQkssQ0FBdEIsQ0FBSCxFQUE0QjtBQUFFO0FBQzFCLG9CQUFHekIsT0FBT3dCLEtBQUtILFFBQVosRUFBc0JNLENBQXRCLENBQUgsRUFBNEI7QUFBRTtBQUMxQiwyQkFBTyxLQUFQO0FBQ0gsaUJBRkQsTUFHSyxJQUFHM0IsT0FBT3dCLEtBQUtILFFBQVosRUFBc0JLLENBQXRCLENBQUgsRUFBNEI7QUFBRTtBQUMvQiwyQkFBTyxLQUFQO0FBQ0g7QUFDSixhQVBELE1BUUssSUFBRzFCLE9BQU93QixLQUFLSixRQUFaLEVBQXNCTyxDQUF0QixDQUFILEVBQTRCO0FBQUU7QUFDL0Isb0JBQUczQixPQUFPd0IsS0FBS0gsUUFBWixFQUFzQkksQ0FBdEIsQ0FBSCxFQUE0QjtBQUFFO0FBQzFCLDJCQUFPLEtBQVA7QUFDSCxpQkFGRCxNQUdLLElBQUd6QixPQUFPd0IsS0FBS0gsUUFBWixFQUFzQkssQ0FBdEIsQ0FBSCxFQUE0QjtBQUFFO0FBQy9CLDJCQUFPLEtBQVA7QUFDSDtBQUNKLGFBUEksTUFRQSxJQUFHMUIsT0FBT3dCLEtBQUtKLFFBQVosRUFBc0JNLENBQXRCLENBQUgsRUFBNEI7QUFBRTtBQUMvQixvQkFBRzFCLE9BQU93QixLQUFLSCxRQUFaLEVBQXNCSSxDQUF0QixDQUFILEVBQTRCO0FBQUU7QUFDMUIsMkJBQU8sS0FBUDtBQUNILGlCQUZELE1BR0ssSUFBR3pCLE9BQU93QixLQUFLSCxRQUFaLEVBQXNCTSxDQUF0QixDQUFILEVBQTRCO0FBQUU7QUFDL0IsMkJBQU8sS0FBUDtBQUNIO0FBQ0o7O0FBRUQsbUJBQU8sS0FBUDtBQUNIOzs7Ozs7a0JBR1V0QixJIiwiZmlsZSI6IjY2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmZ1bmN0aW9uIGFsbW9zdChuMSwgbjIpe1xyXG4gICAgcmV0dXJuIE1hdGguYWJzKG4xIC0gbjIpIDwgLjAxO1xyXG59XHJcblxyXG5jbGFzcyBJdGVte1xyXG4gICAgLyoqXHJcbiAgICAgKiBAcGFyYW0ge09iamVjdH0gaWQgXHJcbiAgICAgKiBAcGFyYW0ge051bWJlcn0gZGltMSBcclxuICAgICAqIEBwYXJhbSB7TnVtYmVyfSBkaW0yIFxyXG4gICAgICogQHBhcmFtIHtOdW1iZXJ9IGRpbTMgXHJcbiAgICAgKiBAcGFyYW0ge051bWJlcn0gcXVhbnRpdHkgXHJcbiAgICAgKi9cclxuICAgIGNvbnN0cnVjdG9yKGlkLCBkaW0xLCBkaW0yLCBkaW0zLCBxdWFudGl0eSl7XHJcbiAgICAgICAgdGhpcy5JRCA9IGlkO1xyXG4gICAgICAgIHRoaXMuSXNQYWNrZWQgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLkRpbTEgPSBkaW0yO1xyXG4gICAgICAgIHRoaXMuRGltMiA9IGRpbTE7XHJcbiAgICAgICAgdGhpcy5EaW0zID0gZGltMztcclxuICAgICAgICB0aGlzLkNvb3JkWCA9IDA7XHJcbiAgICAgICAgdGhpcy5Db29yZFkgPSAwO1xyXG4gICAgICAgIHRoaXMuQ29vcmRaID0gMDtcclxuICAgICAgICB0aGlzLlF1YW50aXR5ID0gcXVhbnRpdHk7XHJcbiAgICAgICAgdGhpcy5QYWNrRGltWCA9IDA7XHJcbiAgICAgICAgdGhpcy5QYWNrRGltWSA9IDA7XHJcbiAgICAgICAgdGhpcy5QYWNrRGltWiA9IDA7XHJcbiAgICAgICAgdGhpcy5Wb2x1bWUgPSB0aGlzLkRpbTEgKiB0aGlzLkRpbTIgKiB0aGlzLkRpbTM7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIFxyXG4gICAgICogQHBhcmFtIHtJdGVtfSBpdGVtXHJcbiAgICAgKiBAcmV0dXJucyB7c3RyaW5nfSAtIGF4aXMgb3JkZXIgKHh5eiwgeHp5LCB5eHosIHl6eCwgenh5IG9yIHp5eClcclxuICAgICAqL1xyXG4gICAgc3RhdGljIFJlc29sdmVPcmllbnRhdGlvbihpdGVtKXtcclxuICAgICAgICB2YXIgdyA9IGl0ZW0uRGltMSwgbCA9IGl0ZW0uRGltMiwgaCA9IGl0ZW0uRGltMztcclxuXHJcbiAgICAgICAgaWYoYWxtb3N0KGl0ZW0uUGFja0RpbVgsIHcpKXsgLy8geFxyXG4gICAgICAgICAgICBpZihhbG1vc3QoaXRlbS5QYWNrRGltWSwgaCkpeyAvLyB5XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gJ3h5eic7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSBpZihhbG1vc3QoaXRlbS5QYWNrRGltWSwgbCkpeyAvLyB6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gJ3h6eSc7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZihhbG1vc3QoaXRlbS5QYWNrRGltWCwgaCkpeyAvLyB5XHJcbiAgICAgICAgICAgIGlmKGFsbW9zdChpdGVtLlBhY2tEaW1ZLCB3KSl7IC8vIHhcclxuICAgICAgICAgICAgICAgIHJldHVybiAneXh6JztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIGlmKGFsbW9zdChpdGVtLlBhY2tEaW1ZLCBsKSl7IC8vIHpcclxuICAgICAgICAgICAgICAgIHJldHVybiAneXp4JztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmKGFsbW9zdChpdGVtLlBhY2tEaW1YLCBsKSl7IC8vIHpcclxuICAgICAgICAgICAgaWYoYWxtb3N0KGl0ZW0uUGFja0RpbVksIHcpKXsgLy8geFxyXG4gICAgICAgICAgICAgICAgcmV0dXJuICd6eHknO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2UgaWYoYWxtb3N0KGl0ZW0uUGFja0RpbVksIGgpKXsgLy8geVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuICd6eXgnO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gJ3h5eic7XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEl0ZW07XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2FwaS9wYWNrZXIvYWZpdC9jb21wb25lbnRzL0l0ZW0uanMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///66\n");

/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Container =\n/**\r\n * @param {Object} id \r\n * @param {Number} width \r\n * @param {Number} length \r\n * @param {Number} height \r\n */\nfunction Container(id, width, length, height) {\n    _classCallCheck(this, Container);\n\n    this.ID = id;\n\n    this.Width = length || 0;\n    this.Length = width || 0;\n    this.Height = height || 0;\n};\n\nexports.default = Container;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXBpL3BhY2tlci9hZml0L2NvbXBvbmVudHMvQ29udGFpbmVyLmpzP2IxZTIiXSwibmFtZXMiOlsiQ29udGFpbmVyIiwiaWQiLCJ3aWR0aCIsImxlbmd0aCIsImhlaWdodCIsIklEIiwiV2lkdGgiLCJMZW5ndGgiLCJIZWlnaHQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0lBQ01BLFM7QUFDRjs7Ozs7O0FBTUEsbUJBQVlDLEVBQVosRUFBZ0JDLEtBQWhCLEVBQXVCQyxNQUF2QixFQUErQkMsTUFBL0IsRUFBc0M7QUFBQTs7QUFDbEMsU0FBS0MsRUFBTCxHQUFVSixFQUFWOztBQUVBLFNBQUtLLEtBQUwsR0FBYUgsVUFBVSxDQUF2QjtBQUNBLFNBQUtJLE1BQUwsR0FBY0wsU0FBUyxDQUF2QjtBQUNBLFNBQUtNLE1BQUwsR0FBY0osVUFBVSxDQUF4QjtBQUNILEM7O2tCQUdVSixTIiwiZmlsZSI6IjY3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmNsYXNzIENvbnRhaW5lcntcclxuICAgIC8qKlxyXG4gICAgICogQHBhcmFtIHtPYmplY3R9IGlkIFxyXG4gICAgICogQHBhcmFtIHtOdW1iZXJ9IHdpZHRoIFxyXG4gICAgICogQHBhcmFtIHtOdW1iZXJ9IGxlbmd0aCBcclxuICAgICAqIEBwYXJhbSB7TnVtYmVyfSBoZWlnaHQgXHJcbiAgICAgKi9cclxuICAgIGNvbnN0cnVjdG9yKGlkLCB3aWR0aCwgbGVuZ3RoLCBoZWlnaHQpe1xyXG4gICAgICAgIHRoaXMuSUQgPSBpZDtcclxuXHJcbiAgICAgICAgdGhpcy5XaWR0aCA9IGxlbmd0aCB8fCAwO1xyXG4gICAgICAgIHRoaXMuTGVuZ3RoID0gd2lkdGggfHwgMDtcclxuICAgICAgICB0aGlzLkhlaWdodCA9IGhlaWdodCB8fCAwO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBDb250YWluZXI7XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2FwaS9wYWNrZXIvYWZpdC9jb21wb25lbnRzL0NvbnRhaW5lci5qcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///67\n");

/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\n/** @typedef Vec2 @property {Number} x @property {Number} y */\n/** @typedef Rectangle @property {Vec2} p1 @property {Vec2} p2 @property {Vec2} p3 @property {Vec2} p4 */\n\nvar epsilon = Math.pow(2, -52);\nvar smallValue = .000001;\nvar smallValueSqrt = .001;\n\n// line intercept math by Paul Bourke http://paulbourke.net/geometry/pointlineplane/\n// Determine the intersection point of two line segments\n// Return FALSE if the lines don't intersect\nfunction segmentIntersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n\n    // Check if none of the lines are of length 0\n    if (x1 === x2 && y1 === y2 || x3 === x4 && y3 === y4) {\n        return false;\n    }\n\n    var denominator = (y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1);\n\n    // Lines are parallel\n    if (Math.abs(denominator) < epsilon) {\n        return false;\n    }\n\n    var ua = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / denominator;\n    var ub = ((x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3)) / denominator;\n\n    // is the intersection along the segments\n    if (ua > 0 || ua < 1 || ub > 0 || ub < 1) return false;\n\n    // Return a object with the x and y coordinates of the intersection\n    var x = x1 + ua * (x2 - x1);\n    var y = y1 + ua * (y2 - y1);\n\n    return { x: x, y: y };\n}\n\nfunction linesIntersect(ax, ay, bx, by, cx, cy, dx, dy) {\n    // Line AB represented as a1x + b1y = c1\n    var a1 = by - ay,\n        b1 = ax - bx;\n    var c1 = a1 * ax + b1 * ay;\n\n    // Line CD represented as a2x + b2y = c2\n    var a2 = dy - cy,\n        b2 = cx - dx;\n    var c2 = a2 * cx + b2 * cy;\n\n    var determinant = a1 * b2 - a2 * b1;\n\n    // The lines are parallel\n    if (Math.abs(determinant) < smallValue) return false;\n\n    var x = (b2 * c1 - b1 * c2) / determinant;\n    var y = (a1 * c2 - a2 * c1) / determinant;\n    return { x: x, y: y };\n}\n\nfunction rectangleContainsPoint(offset, rx, ry, rw, rh, px, py) {\n    var x = rx - offset,\n        y = ry - offset,\n        w = rw + offset * 2,\n        h = rh + offset * 2;\n    return px > x && px < x + w && py > y && py < y + h;\n}\n\n/** @param {Number} offset offsets the region by this before checking * @param {Region} subRegion */\nfunction rectangleContainsRectangle(offset, rx, ry, rw, rh, ox, oy, ow, oh) {\n    var x = rx - offset,\n        y = ry - offset,\n        w = rw + offset * 2,\n        h = rh + offset * 2;\n    return ox > x && ox + ow < x + w && oy > y && oy + oh < y + h;\n}\n\n/**\r\n * @param {Array<Vec2>} points\r\n */\nfunction rectanglesFromPoints(points) {\n    // Separate points in lists of 'y' coordinate, grouped by 'x' coordinate\n    var toInt = Math.round(1 / smallValue);\n    var xs = {};\n    points.forEach(function (point) {\n        var xCat = Math.floor(point.x * toInt);\n        if (xs[xCat] === undefined) xs[xCat] = { x: point.x, ys: [] };\n        var ys = xs[xCat].ys;\n        var yCat = Math.floor(point.y * toInt);\n        var insert = true;\n        for (var iY = 0; iY < ys.length; iY++) {\n            if (ys[iY].yCat === yCat) insert = false;\n        }\n        if (insert) ys.push({ yCat: yCat, y: point.y });\n    });\n\n    //console.log('xs:', xs);\n\n    // Intersect lists\n    function sortYCat(a, b) {\n        if (a.yCat < b.yCat) return -1;\n        if (a.yCat > b.yCat) return 1;\n        return 0;\n    }\n    var xsKeys = Object.keys(xs);\n    for (var iX = 0; iX < xsKeys.length; iX++) {\n        var xCat = xs[xsKeys[iX]];\n        xCat.ys.sort(sortYCat);\n    }\n\n    /** @typedef IntersectedX @property {Number} x1 @property {Number} x2 @property {Array<Number>} ys */\n    /** @type {Array<IntersectedX>} */\n    var intersectedXs = [];\n    for (var _iX = 0; _iX < xsKeys.length; _iX++) {\n        var xCat1 = xs[xsKeys[_iX]];\n        var ys1 = xCat1.ys;\n        for (var iX2 = _iX + 1; iX2 < xsKeys.length; iX2++) {\n            var xCat2 = xs[xsKeys[iX2]];\n            var ys2 = xCat2.ys;\n\n            var yIntersect = [];\n            var xIntersect = { x1: xCat1.x, x2: xCat2.x, ys: yIntersect };\n            for (var iY1 = 0; iY1 < ys1.length; iY1++) {\n                for (var iY2 = 0; iY2 < ys2.length; iY2++) {\n                    if (ys1[iY1].yCat === ys2[iY2].yCat) {\n                        yIntersect.push(ys1[iY1].y);\n                        break;\n                    }\n                }\n            }\n\n            if (yIntersect.length > 1) intersectedXs.push(xIntersect);\n        }\n    }\n\n    //console.log(intersectedXs);\n\n    /** @type {Array<Rectangle>} */\n    var rectangles = [];\n    for (var iIX = 0; iIX < intersectedXs.length; iIX++) {\n        var intersectedX = intersectedXs[iIX];\n        var ys = intersectedX.ys;\n        var x1 = intersectedX.x1,\n            x2 = intersectedX.x2;\n        for (var _iY = 0; _iY < ys.length; _iY++) {\n            for (var _iY2 = _iY + 1; _iY2 < ys.length; _iY2++) {\n                var p1 = { x: x1, y: ys[_iY] },\n                    p2 = { x: x2, y: ys[_iY] },\n                    p3 = { x: x2, y: ys[_iY2] },\n                    p4 = { x: x1, y: ys[_iY2] };\n\n                var rectangle = { p1: p1, p2: p2, p3: p3, p4: p4 };\n                rectangles.push(rectangle);\n            }\n        }\n    }\n\n    return rectangles;\n}\n\n/**\r\n * @param {Array<Rectangle>} rectangles \r\n * @returns {Array<Rectangle>} the array is edited in-place\r\n */\nfunction reduceRectangles(rectangles) {\n    for (var iRect = 0; iRect < rectangles.length; iRect++) {\n        var ra = rectangles[iRect];\n        var ax = ra.p1.x,\n            ay = ra.p1.y;\n        var aw = ra.p3.x - ax,\n            ah = ra.p3.y - ay;\n        for (var jRect = 0; jRect < rectangles.length; jRect++) {\n            if (iRect !== jRect) {\n                var rb = rectangles[jRect];\n                var bx = rb.p1.x,\n                    by = rb.p1.y;\n                var bw = rb.p3.x - bx,\n                    bh = rb.p3.y - by;\n                if (rectangleContainsRectangle(smallValue, ax, ay, aw, ah, bx, by, bw, bh)) {\n                    rectangles.splice(jRect, 1);\n                    jRect--;\n                    iRect = Math.max(0, jRect - 1);\n                    break;\n                }\n            }\n        }\n    }\n    return rectangles;\n}\n\n/** @param {Number} ax @param {Number} ay @param {Number} bx @param {Number} by @param {Number} x @param {Number} y */\nfunction segmentContainsPoint(ax, ay, bx, by, x, y) {\n    var vx = bx - ax,\n        vy = by - ay,\n        vxa = x - ax,\n        vya = y - ay,\n        vxb = x - bx,\n        vyb = y - by;\n    var d = Math.sqrt(vx * vx + vy * vy),\n        da = Math.sqrt(vxa * vxa + vya * vya),\n        db = Math.sqrt(vxb * vxb + vyb * vyb);\n    return Math.abs(d - (da + db)) < smallValueSqrt;\n}\n\nexports.linesIntersect = linesIntersect;\nexports.rectangleContainsPoint = rectangleContainsPoint;\nexports.rectangleContainsRectangle = rectangleContainsRectangle;\nexports.reduceRectangles = reduceRectangles;\nexports.rectanglesFromPoints = rectanglesFromPoints;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///68\n");

/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _CargoListView = __webpack_require__(19);\n\nvar _CargoListView2 = _interopRequireDefault(_CargoListView);\n\nvar _Packer = __webpack_require__(22);\n\nvar _Packer2 = _interopRequireDefault(_Packer);\n\nvar _CargoList = __webpack_require__(28);\n\nvar _CargoList2 = _interopRequireDefault(_CargoList);\n\nvar _PackingSpaceView = __webpack_require__(40);\n\nvar _PackingSpaceView2 = _interopRequireDefault(_PackingSpaceView);\n\nvar _PackingSpace = __webpack_require__(29);\n\nvar _PackingSpace2 = _interopRequireDefault(_PackingSpace);\n\nvar _SceneSetup = __webpack_require__(13);\n\nvar _SceneSetup2 = _interopRequireDefault(_SceneSetup);\n\nvar _Utils = __webpack_require__(0);\n\nvar _Utils2 = _interopRequireDefault(_Utils);\n\nvar _PackResultView = __webpack_require__(70);\n\nvar _PackResultView2 = _interopRequireDefault(_PackResultView);\n\nvar _UpdateComponent = __webpack_require__(31);\n\nvar _UpdateComponent2 = _interopRequireDefault(_UpdateComponent);\n\nvar _Container = __webpack_require__(8);\n\nvar _Container2 = _interopRequireDefault(_Container);\n\nvar _BoxEntry = __webpack_require__(5);\n\nvar _BoxEntry2 = _interopRequireDefault(_BoxEntry);\n\nvar _DomUI = __webpack_require__(42);\n\nvar _DomUI2 = _interopRequireDefault(_DomUI);\n\nvar _OrthoviewsNavigator = __webpack_require__(72);\n\nvar _OrthoviewsNavigator2 = _interopRequireDefault(_OrthoviewsNavigator);\n\nvar _Camera = __webpack_require__(14);\n\nvar _Camera2 = _interopRequireDefault(_Camera);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * @typedef {Object} ViewParams\r\n * @property {import('../UX').default} ux\r\n * @property {Number} transitionDuration\r\n * @property {Object} cargoListView\r\n * @property {Number} cargoListView.paddingZ\r\n * @property {Number} cargoListView.paddingY\r\n * @property {import('./CargoListView').CargoListViewParams} cargoListView.params\r\n * @property {Object} packResultView\r\n * @property {import('./PackResultView').PackResultViewParams} packResultView.params\r\n */\n\n/** @type {ViewParams} */\nvar defaultParams = {\n    ux: undefined,\n    transitionDuration: 1.5,\n    cargoListView: {\n        paddingZ: 120,\n        paddingY: 40,\n        params: {}\n    },\n    packResultView: {\n        params: {\n            animationDuration: 1\n        }\n    }\n};\n\nvar tempBox3 = new THREE.Box3();\nvar tempVec = new THREE.Vector3();\n\nvar View = function () {\n    /**\r\n     * Constructor\r\n     * @param {Packer} packer \r\n     * @param {DomUI} domUI; \r\n     * @param {SceneSetup} sceneSetup \r\n     * @param {ViewParams} params \r\n     */\n    function View(packer, sceneSetup, domUI, params) {\n\n        /** @param {Packer.PackingResult} packingResult */\n        var onPackUpdate = function () {\n            var _ref = _asyncToGenerator(function* (packingResult) {\n                scope.orthoviewsNavigator.Navigate(_OrthoviewsNavigator2.default.orthoviews.home, false);\n                yield scope.packResultView.DisplayPackingResult(packingResult);\n            });\n\n            return function onPackUpdate(_x) {\n                return _ref.apply(this, arguments);\n            };\n        }();\n\n        _classCallCheck(this, View);\n\n        this.sceneSetup = sceneSetup;\n        this.params = _Utils2.default.AssignUndefined(params, defaultParams);\n\n        this.domUI = domUI;\n        this.domUI.CreateOrthoViewsIcons();\n        this.domUI.On(_DomUI2.default.signals.orthoViewSelected, this.OnOrthoViewSelected.bind(this));\n\n        var scope = this;\n        var units = this.params.ux.params.units;\n\n        // Fill lights\n        if (true) {\n            var lights = this.sceneSetup.DefaultLights(this.sceneSetup.sceneController, true, true);\n\n            var dl = lights.filter(function (light) {\n                return light instanceof THREE.DirectionalLight;\n            })[0];\n            var dlData = { \"color\": \"0xfceeee\", \"intensity\": 1, \"castShadow\": true, \"shadow.bias\": 0.00001, \"shadow.radius\": 4, \"shadow.mapSize.x\": 4096, \"shadow.mapSize.y\": 4096, \"shadow.camera.left\": -400, \"shadow.camera.top\": 300, \"shadow.camera.right\": 400, \"shadow.camera.bottom\": -300, \"shadow.camera.near\": 20, \"shadow.camera.far\": 800 };\n            var Config = __webpack_require__(7).default;\n            Config.Load(dl, dlData);\n\n            if (this.sceneSetup.ux.params.hud) {\n                this.sceneSetup.DefaultLights(this.sceneSetup.hud);\n            }\n\n            var dlComp = lights.filter(function (light) {\n                return light instanceof THREE.DirectionalLight;\n            })[1];\n            dlComp.castShadow = true;\n        }\n\n        var orthoviewsNavParams = { ux: this.params.ux };\n        this.orthoviewsNavigator = new _OrthoviewsNavigator2.default(this.sceneSetup.cameraController, orthoviewsNavParams);\n\n        // Packing space\n        this.packingSpaceView = new _PackingSpaceView2.default();\n        this.sceneSetup.sceneController.AddDefault(this.packingSpaceView.view);\n        /** @param {Container} container */\n        function onContainerAdded(container) {\n            /** @type {THREE.Box3} */\n            var box3 = container.combinedVolume.box3;\n            scope.sceneSetup.cameraController.TransitionToFrame(1, box3, scope.params.transitionDuration);\n\n            scope.packingSpaceView.Add(container);\n\n            tempBox3.setFromObject(scope.packingSpaceView.view);\n            tempBox3.getSize(tempVec);\n\n            var containerSize = Math.max(tempVec.x, tempVec.y, tempVec.z);\n            scope.cargoListView.view.position.z = containerSize / 2 + scope.params.cargoListView.paddingZ * units;\n            scope.cargoListView.view.position.y = scope.params.cargoListView.paddingY * units;\n        }\n        packer.packingSpace.On(_PackingSpace2.default.signals.containerAdded, onContainerAdded);\n\n        // Cargo list\n        this.params.cargoListView.params.ux = this.params.ux;\n        this.cargoListView = new _CargoListView2.default(this.params.cargoListView.params);\n\n        this.sceneSetup.input.AddRaycastGroup('OnClick', 'cargoListView', this.cargoListView.raycastGroup);\n\n        this.sceneSetup.sceneController.AddDefault(this.cargoListView.view);\n\n        function onCargoListViewChanged() {\n            tempBox3.setFromObject(scope.cargoListView.view);\n            tempBox3.getCenter(tempVec);\n            var listViewCenterX = tempVec.x;\n            scope.cargoListView.view.getWorldPosition(tempVec);\n            var offsetX = listViewCenterX - tempVec.x;\n\n            /** @type {THREE.Box3} */\n            var box3 = tempBox3;\n            scope.sceneSetup.cameraController.TransitionToFrame(1, box3, scope.params.transitionDuration);\n\n            tempBox3.setFromObject(scope.packingSpaceView.view);\n            tempBox3.getCenter(tempVec);\n            var centerX = tempVec.x;\n\n            scope.cargoListView.view.position.x = centerX - offsetX;\n        }\n        function onCargoGroupAdded(group) {\n            scope.cargoListView.Add(group);\n            onCargoListViewChanged();\n        }\n        packer.cargoList.On(_CargoList2.default.signals.groupAdded, onCargoGroupAdded);\n        function onCargoGroupRemoved(group) {\n            scope.cargoListView.Remove(group);\n            onCargoListViewChanged();\n        }\n        packer.cargoList.On(_CargoList2.default.signals.groupRemoved, onCargoGroupRemoved);\n        function onCargoGroupModified(group) {\n            scope.cargoListView.UpdateGroup(group);\n            onCargoListViewChanged();\n        }\n        packer.cargoList.On(_CargoList2.default.signals.groupModified, onCargoGroupModified);\n\n        // Packing result\n        this.params.packResultView.params.ux = this.params.ux;\n        this.packResultView = new _PackResultView2.default(this.cargoListView, this.packingSpaceView, this.params.packResultView.params);\n        this.sceneSetup.sceneController.AddDefault(this.packResultView.view);\n        packer.On(_Packer2.default.signals.packUpdate, onPackUpdate);\n\n        var updateComponent = new _UpdateComponent2.default(true, 1 / 30, this.Update.bind(this));\n        this.sceneSetup.input.updateComponents.push(updateComponent);\n\n        this.orthoviewsNavigator.boundingView = this.packingSpaceView.view;\n        this.orthoviewsNavigator.cargoListView = this.cargoListView;\n\n        if (this.params.ux.params.hud) {\n            this.HUDSetup();\n        }\n\n        if (this.params.ux.params.configure) {\n            this.Configure();\n        }\n    }\n\n    /** @param {Number} now */\n\n\n    _createClass(View, [{\n        key: \"Update\",\n        value: function Update(now) {\n            this.packResultView.Update();\n            this.cargoListView.Update();\n        }\n    }, {\n        key: \"HUDSetup\",\n        value: function HUDSetup() {\n            var units = this.params.ux.params.units;\n            var input = this.sceneSetup.input;\n            var hud = this.sceneSetup.hud;\n            var scope = this;\n        }\n    }, {\n        key: \"ClearPackingResults\",\n        value: function ClearPackingResults() {\n            this.packResultView.Clear();\n        }\n\n        /** @param {DomUI.orthoviews} viewType */\n\n    }, {\n        key: \"OnOrthoViewSelected\",\n        value: function OnOrthoViewSelected(viewType) {\n            switch (viewType) {\n                case _DomUI2.default.orthoviews.home:\n                    this.orthoviewsNavigator.Navigate(_OrthoviewsNavigator2.default.orthoviews.home);break;\n                case _DomUI2.default.orthoviews.top:\n                    this.orthoviewsNavigator.Navigate(_OrthoviewsNavigator2.default.orthoviews.top);break;\n                case _DomUI2.default.orthoviews.front:\n                    this.orthoviewsNavigator.Navigate(_OrthoviewsNavigator2.default.orthoviews.front);break;\n                case _DomUI2.default.orthoviews.side:\n                    this.orthoviewsNavigator.Navigate(_OrthoviewsNavigator2.default.orthoviews.side);break;\n            }\n        }\n    }, {\n        key: \"Configure\",\n        value: function Configure() {\n\n            var Smart = __webpack_require__(20).default;\n            var Config = __webpack_require__(7).default;\n            var Control3D = __webpack_require__(21).default;\n\n            var scope = this;\n            var input = this.sceneSetup.input;\n\n            if (this.params.ux.params.hud) {\n                var hudControl3D = Control3D.Request('hud');\n\n                Config.MakeShortcut('Configure', 'Show HUDControl3D', function () {\n                    hudControl3D.Toggle(scope.cargoListView.view);\n                });\n            }\n        }\n    }]);\n\n    return View;\n}();\n\nexports.default = View;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXBpL3ZpZXcvVmlldy5qcz8zNjMyIl0sIm5hbWVzIjpbImRlZmF1bHRQYXJhbXMiLCJ1eCIsInVuZGVmaW5lZCIsInRyYW5zaXRpb25EdXJhdGlvbiIsImNhcmdvTGlzdFZpZXciLCJwYWRkaW5nWiIsInBhZGRpbmdZIiwicGFyYW1zIiwicGFja1Jlc3VsdFZpZXciLCJhbmltYXRpb25EdXJhdGlvbiIsInRlbXBCb3gzIiwiVEhSRUUiLCJCb3gzIiwidGVtcFZlYyIsIlZlY3RvcjMiLCJWaWV3IiwicGFja2VyIiwic2NlbmVTZXR1cCIsImRvbVVJIiwicGFja2luZ1Jlc3VsdCIsInNjb3BlIiwib3J0aG92aWV3c05hdmlnYXRvciIsIk5hdmlnYXRlIiwiT3J0aG92aWV3c05hdmlnYXRvciIsIm9ydGhvdmlld3MiLCJob21lIiwiRGlzcGxheVBhY2tpbmdSZXN1bHQiLCJvblBhY2tVcGRhdGUiLCJVdGlscyIsIkFzc2lnblVuZGVmaW5lZCIsIkNyZWF0ZU9ydGhvVmlld3NJY29ucyIsIk9uIiwiRG9tVUkiLCJzaWduYWxzIiwib3J0aG9WaWV3U2VsZWN0ZWQiLCJPbk9ydGhvVmlld1NlbGVjdGVkIiwiYmluZCIsInVuaXRzIiwibGlnaHRzIiwiRGVmYXVsdExpZ2h0cyIsInNjZW5lQ29udHJvbGxlciIsImRsIiwiZmlsdGVyIiwibGlnaHQiLCJEaXJlY3Rpb25hbExpZ2h0IiwiZGxEYXRhIiwiQ29uZmlnIiwicmVxdWlyZSIsImRlZmF1bHQiLCJMb2FkIiwiaHVkIiwiZGxDb21wIiwiY2FzdFNoYWRvdyIsIm9ydGhvdmlld3NOYXZQYXJhbXMiLCJjYW1lcmFDb250cm9sbGVyIiwicGFja2luZ1NwYWNlVmlldyIsIlBhY2tpbmdTcGFjZVZpZXciLCJBZGREZWZhdWx0IiwidmlldyIsIm9uQ29udGFpbmVyQWRkZWQiLCJjb250YWluZXIiLCJib3gzIiwiY29tYmluZWRWb2x1bWUiLCJUcmFuc2l0aW9uVG9GcmFtZSIsIkFkZCIsInNldEZyb21PYmplY3QiLCJnZXRTaXplIiwiY29udGFpbmVyU2l6ZSIsIk1hdGgiLCJtYXgiLCJ4IiwieSIsInoiLCJwb3NpdGlvbiIsInBhY2tpbmdTcGFjZSIsIlBhY2tpbmdTcGFjZSIsImNvbnRhaW5lckFkZGVkIiwiQ2FyZ29MaXN0VmlldyIsImlucHV0IiwiQWRkUmF5Y2FzdEdyb3VwIiwicmF5Y2FzdEdyb3VwIiwib25DYXJnb0xpc3RWaWV3Q2hhbmdlZCIsImdldENlbnRlciIsImxpc3RWaWV3Q2VudGVyWCIsImdldFdvcmxkUG9zaXRpb24iLCJvZmZzZXRYIiwiY2VudGVyWCIsIm9uQ2FyZ29Hcm91cEFkZGVkIiwiZ3JvdXAiLCJjYXJnb0xpc3QiLCJDYXJnb0xpc3QiLCJncm91cEFkZGVkIiwib25DYXJnb0dyb3VwUmVtb3ZlZCIsIlJlbW92ZSIsImdyb3VwUmVtb3ZlZCIsIm9uQ2FyZ29Hcm91cE1vZGlmaWVkIiwiVXBkYXRlR3JvdXAiLCJncm91cE1vZGlmaWVkIiwiUGFja1Jlc3VsdFZpZXciLCJQYWNrZXIiLCJwYWNrVXBkYXRlIiwidXBkYXRlQ29tcG9uZW50IiwiVXBkYXRlQ29tcG9uZW50IiwiVXBkYXRlIiwidXBkYXRlQ29tcG9uZW50cyIsInB1c2giLCJib3VuZGluZ1ZpZXciLCJIVURTZXR1cCIsImNvbmZpZ3VyZSIsIkNvbmZpZ3VyZSIsIm5vdyIsIkNsZWFyIiwidmlld1R5cGUiLCJ0b3AiLCJmcm9udCIsInNpZGUiLCJTbWFydCIsIkNvbnRyb2wzRCIsImh1ZENvbnRyb2wzRCIsIlJlcXVlc3QiLCJNYWtlU2hvcnRjdXQiLCJUb2dnbGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7Ozs7Ozs7OztBQUVBOzs7Ozs7Ozs7Ozs7QUFZQztBQUNELElBQU1BLGdCQUFnQjtBQUNsQkMsUUFBSUMsU0FEYztBQUVsQkMsd0JBQW9CLEdBRkY7QUFHbEJDLG1CQUFlO0FBQ1hDLGtCQUFVLEdBREM7QUFFWEMsa0JBQVUsRUFGQztBQUdYQyxnQkFBUTtBQUhHLEtBSEc7QUFRbEJDLG9CQUFnQjtBQUNaRCxnQkFBUTtBQUNKRSwrQkFBbUI7QUFEZjtBQURJO0FBUkUsQ0FBdEI7O0FBZUEsSUFBSUMsV0FBVyxJQUFJQyxNQUFNQyxJQUFWLEVBQWY7QUFDQSxJQUFJQyxVQUFVLElBQUlGLE1BQU1HLE9BQVYsRUFBZDs7SUFFTUMsSTtBQUNGOzs7Ozs7O0FBT0Esa0JBQVlDLE1BQVosRUFBb0JDLFVBQXBCLEVBQWdDQyxLQUFoQyxFQUF1Q1gsTUFBdkMsRUFBOEM7O0FBa0cxQztBQWxHMEM7QUFBQSx5Q0FtRzFDLFdBQTRCWSxhQUE1QixFQUEwQztBQUN0Q0Msc0JBQU1DLG1CQUFOLENBQTBCQyxRQUExQixDQUFtQ0MsOEJBQW9CQyxVQUFwQixDQUErQkMsSUFBbEUsRUFBd0UsS0FBeEU7QUFDQSxzQkFBTUwsTUFBTVosY0FBTixDQUFxQmtCLG9CQUFyQixDQUEwQ1AsYUFBMUMsQ0FBTjtBQUNILGFBdEd5Qzs7QUFBQSw0QkFtRzNCUSxZQW5HMkI7QUFBQTtBQUFBO0FBQUE7O0FBQUE7O0FBRTFDLGFBQUtWLFVBQUwsR0FBa0JBLFVBQWxCO0FBQ0EsYUFBS1YsTUFBTCxHQUFjcUIsZ0JBQU1DLGVBQU4sQ0FBc0J0QixNQUF0QixFQUE4QlAsYUFBOUIsQ0FBZDs7QUFFQSxhQUFLa0IsS0FBTCxHQUFhQSxLQUFiO0FBQ0EsYUFBS0EsS0FBTCxDQUFXWSxxQkFBWDtBQUNBLGFBQUtaLEtBQUwsQ0FBV2EsRUFBWCxDQUFjQyxnQkFBTUMsT0FBTixDQUFjQyxpQkFBNUIsRUFBK0MsS0FBS0MsbUJBQUwsQ0FBeUJDLElBQXpCLENBQThCLElBQTlCLENBQS9DOztBQUVBLFlBQUloQixRQUFRLElBQVo7QUFDQSxZQUFJaUIsUUFBUSxLQUFLOUIsTUFBTCxDQUFZTixFQUFaLENBQWVNLE1BQWYsQ0FBc0I4QixLQUFsQzs7QUFFQTtBQUNBLFlBQUcsSUFBSCxFQUFRO0FBQ0osZ0JBQUlDLFNBQVMsS0FBS3JCLFVBQUwsQ0FBZ0JzQixhQUFoQixDQUE4QixLQUFLdEIsVUFBTCxDQUFnQnVCLGVBQTlDLEVBQStELElBQS9ELEVBQXFFLElBQXJFLENBQWI7O0FBRUEsZ0JBQUlDLEtBQUtILE9BQU9JLE1BQVAsQ0FBYztBQUFBLHVCQUFTQyxpQkFBaUJoQyxNQUFNaUMsZ0JBQWhDO0FBQUEsYUFBZCxFQUFnRSxDQUFoRSxDQUFUO0FBQ0EsZ0JBQUlDLFNBQVMsRUFBQyxTQUFRLFVBQVQsRUFBb0IsYUFBWSxDQUFoQyxFQUFrQyxjQUFhLElBQS9DLEVBQW9ELGVBQWMsT0FBbEUsRUFBMEUsaUJBQWdCLENBQTFGLEVBQTRGLG9CQUFtQixJQUEvRyxFQUFvSCxvQkFBbUIsSUFBdkksRUFBNEksc0JBQXFCLENBQUMsR0FBbEssRUFBc0sscUJBQW9CLEdBQTFMLEVBQThMLHVCQUFzQixHQUFwTixFQUF3Tix3QkFBdUIsQ0FBQyxHQUFoUCxFQUFvUCxzQkFBcUIsRUFBelEsRUFBNFEscUJBQW9CLEdBQWhTLEVBQWI7QUFDQSxnQkFBSUMsU0FBUyxtQkFBQUMsQ0FBUSxDQUFSLEVBQXNDQyxPQUFuRDtBQUNBRixtQkFBT0csSUFBUCxDQUFZUixFQUFaLEVBQWdCSSxNQUFoQjs7QUFFQSxnQkFBRyxLQUFLNUIsVUFBTCxDQUFnQmhCLEVBQWhCLENBQW1CTSxNQUFuQixDQUEwQjJDLEdBQTdCLEVBQWlDO0FBQzdCLHFCQUFLakMsVUFBTCxDQUFnQnNCLGFBQWhCLENBQThCLEtBQUt0QixVQUFMLENBQWdCaUMsR0FBOUM7QUFDSDs7QUFFRCxnQkFBSUMsU0FBU2IsT0FBT0ksTUFBUCxDQUFjO0FBQUEsdUJBQVNDLGlCQUFpQmhDLE1BQU1pQyxnQkFBaEM7QUFBQSxhQUFkLEVBQWdFLENBQWhFLENBQWI7QUFDQU8sbUJBQU9DLFVBQVAsR0FBb0IsSUFBcEI7QUFDSDs7QUFFRCxZQUFJQyxzQkFBc0IsRUFBQ3BELElBQUksS0FBS00sTUFBTCxDQUFZTixFQUFqQixFQUExQjtBQUNBLGFBQUtvQixtQkFBTCxHQUEyQixJQUFJRSw2QkFBSixDQUF3QixLQUFLTixVQUFMLENBQWdCcUMsZ0JBQXhDLEVBQTBERCxtQkFBMUQsQ0FBM0I7O0FBRUE7QUFDQSxhQUFLRSxnQkFBTCxHQUF3QixJQUFJQywwQkFBSixFQUF4QjtBQUNBLGFBQUt2QyxVQUFMLENBQWdCdUIsZUFBaEIsQ0FBZ0NpQixVQUFoQyxDQUEyQyxLQUFLRixnQkFBTCxDQUFzQkcsSUFBakU7QUFDQTtBQUNBLGlCQUFTQyxnQkFBVCxDQUEwQkMsU0FBMUIsRUFBb0M7QUFDaEM7QUFDQSxnQkFBSUMsT0FBT0QsVUFBVUUsY0FBVixDQUF5QkQsSUFBcEM7QUFDQXpDLGtCQUFNSCxVQUFOLENBQWlCcUMsZ0JBQWpCLENBQWtDUyxpQkFBbEMsQ0FBb0QsQ0FBcEQsRUFBdURGLElBQXZELEVBQTZEekMsTUFBTWIsTUFBTixDQUFhSixrQkFBMUU7O0FBRUFpQixrQkFBTW1DLGdCQUFOLENBQXVCUyxHQUF2QixDQUEyQkosU0FBM0I7O0FBRUFsRCxxQkFBU3VELGFBQVQsQ0FBdUI3QyxNQUFNbUMsZ0JBQU4sQ0FBdUJHLElBQTlDO0FBQ0FoRCxxQkFBU3dELE9BQVQsQ0FBaUJyRCxPQUFqQjs7QUFFQSxnQkFBSXNELGdCQUFnQkMsS0FBS0MsR0FBTCxDQUFTeEQsUUFBUXlELENBQWpCLEVBQW9CekQsUUFBUTBELENBQTVCLEVBQStCMUQsUUFBUTJELENBQXZDLENBQXBCO0FBQ0FwRCxrQkFBTWhCLGFBQU4sQ0FBb0JzRCxJQUFwQixDQUF5QmUsUUFBekIsQ0FBa0NELENBQWxDLEdBQXNDTCxnQkFBZ0IsQ0FBaEIsR0FBb0IvQyxNQUFNYixNQUFOLENBQWFILGFBQWIsQ0FBMkJDLFFBQTNCLEdBQXNDZ0MsS0FBaEc7QUFDQWpCLGtCQUFNaEIsYUFBTixDQUFvQnNELElBQXBCLENBQXlCZSxRQUF6QixDQUFrQ0YsQ0FBbEMsR0FBc0NuRCxNQUFNYixNQUFOLENBQWFILGFBQWIsQ0FBMkJFLFFBQTNCLEdBQXNDK0IsS0FBNUU7QUFDSDtBQUNEckIsZUFBTzBELFlBQVAsQ0FBb0IzQyxFQUFwQixDQUF1QjRDLHVCQUFhMUMsT0FBYixDQUFxQjJDLGNBQTVDLEVBQTREakIsZ0JBQTVEOztBQUVBO0FBQ0EsYUFBS3BELE1BQUwsQ0FBWUgsYUFBWixDQUEwQkcsTUFBMUIsQ0FBaUNOLEVBQWpDLEdBQXNDLEtBQUtNLE1BQUwsQ0FBWU4sRUFBbEQ7QUFDQSxhQUFLRyxhQUFMLEdBQXFCLElBQUl5RSx1QkFBSixDQUFrQixLQUFLdEUsTUFBTCxDQUFZSCxhQUFaLENBQTBCRyxNQUE1QyxDQUFyQjs7QUFFQSxhQUFLVSxVQUFMLENBQWdCNkQsS0FBaEIsQ0FBc0JDLGVBQXRCLENBQXNDLFNBQXRDLEVBQWlELGVBQWpELEVBQWtFLEtBQUszRSxhQUFMLENBQW1CNEUsWUFBckY7O0FBRUEsYUFBSy9ELFVBQUwsQ0FBZ0J1QixlQUFoQixDQUFnQ2lCLFVBQWhDLENBQTJDLEtBQUtyRCxhQUFMLENBQW1Cc0QsSUFBOUQ7O0FBRUEsaUJBQVN1QixzQkFBVCxHQUFpQztBQUM3QnZFLHFCQUFTdUQsYUFBVCxDQUF1QjdDLE1BQU1oQixhQUFOLENBQW9Cc0QsSUFBM0M7QUFDQWhELHFCQUFTd0UsU0FBVCxDQUFtQnJFLE9BQW5CO0FBQ0EsZ0JBQUlzRSxrQkFBa0J0RSxRQUFReUQsQ0FBOUI7QUFDQWxELGtCQUFNaEIsYUFBTixDQUFvQnNELElBQXBCLENBQXlCMEIsZ0JBQXpCLENBQTBDdkUsT0FBMUM7QUFDQSxnQkFBSXdFLFVBQVVGLGtCQUFrQnRFLFFBQVF5RCxDQUF4Qzs7QUFFQTtBQUNBLGdCQUFJVCxPQUFPbkQsUUFBWDtBQUNBVSxrQkFBTUgsVUFBTixDQUFpQnFDLGdCQUFqQixDQUFrQ1MsaUJBQWxDLENBQW9ELENBQXBELEVBQXVERixJQUF2RCxFQUE2RHpDLE1BQU1iLE1BQU4sQ0FBYUosa0JBQTFFOztBQUVBTyxxQkFBU3VELGFBQVQsQ0FBdUI3QyxNQUFNbUMsZ0JBQU4sQ0FBdUJHLElBQTlDO0FBQ0FoRCxxQkFBU3dFLFNBQVQsQ0FBbUJyRSxPQUFuQjtBQUNBLGdCQUFJeUUsVUFBVXpFLFFBQVF5RCxDQUF0Qjs7QUFFQWxELGtCQUFNaEIsYUFBTixDQUFvQnNELElBQXBCLENBQXlCZSxRQUF6QixDQUFrQ0gsQ0FBbEMsR0FBc0NnQixVQUFVRCxPQUFoRDtBQUNIO0FBQ0QsaUJBQVNFLGlCQUFULENBQTJCQyxLQUEzQixFQUFpQztBQUM3QnBFLGtCQUFNaEIsYUFBTixDQUFvQjRELEdBQXBCLENBQXdCd0IsS0FBeEI7QUFDQVA7QUFDSDtBQUNEakUsZUFBT3lFLFNBQVAsQ0FBaUIxRCxFQUFqQixDQUFvQjJELG9CQUFVekQsT0FBVixDQUFrQjBELFVBQXRDLEVBQWtESixpQkFBbEQ7QUFDQSxpQkFBU0ssbUJBQVQsQ0FBNkJKLEtBQTdCLEVBQW1DO0FBQy9CcEUsa0JBQU1oQixhQUFOLENBQW9CeUYsTUFBcEIsQ0FBMkJMLEtBQTNCO0FBQ0FQO0FBQ0g7QUFDRGpFLGVBQU95RSxTQUFQLENBQWlCMUQsRUFBakIsQ0FBb0IyRCxvQkFBVXpELE9BQVYsQ0FBa0I2RCxZQUF0QyxFQUFvREYsbUJBQXBEO0FBQ0EsaUJBQVNHLG9CQUFULENBQThCUCxLQUE5QixFQUFvQztBQUNoQ3BFLGtCQUFNaEIsYUFBTixDQUFvQjRGLFdBQXBCLENBQWdDUixLQUFoQztBQUNBUDtBQUNIO0FBQ0RqRSxlQUFPeUUsU0FBUCxDQUFpQjFELEVBQWpCLENBQW9CMkQsb0JBQVV6RCxPQUFWLENBQWtCZ0UsYUFBdEMsRUFBcURGLG9CQUFyRDs7QUFFQTtBQUNBLGFBQUt4RixNQUFMLENBQVlDLGNBQVosQ0FBMkJELE1BQTNCLENBQWtDTixFQUFsQyxHQUF1QyxLQUFLTSxNQUFMLENBQVlOLEVBQW5EO0FBQ0EsYUFBS08sY0FBTCxHQUFzQixJQUFJMEYsd0JBQUosQ0FBbUIsS0FBSzlGLGFBQXhCLEVBQXVDLEtBQUttRCxnQkFBNUMsRUFBOEQsS0FBS2hELE1BQUwsQ0FBWUMsY0FBWixDQUEyQkQsTUFBekYsQ0FBdEI7QUFDQSxhQUFLVSxVQUFMLENBQWdCdUIsZUFBaEIsQ0FBZ0NpQixVQUFoQyxDQUEyQyxLQUFLakQsY0FBTCxDQUFvQmtELElBQS9EO0FBT0ExQyxlQUFPZSxFQUFQLENBQVVvRSxpQkFBT2xFLE9BQVAsQ0FBZW1FLFVBQXpCLEVBQXFDekUsWUFBckM7O0FBRUEsWUFBSTBFLGtCQUFrQixJQUFJQyx5QkFBSixDQUFvQixJQUFwQixFQUEwQixJQUFFLEVBQTVCLEVBQWdDLEtBQUtDLE1BQUwsQ0FBWW5FLElBQVosQ0FBaUIsSUFBakIsQ0FBaEMsQ0FBdEI7QUFDQSxhQUFLbkIsVUFBTCxDQUFnQjZELEtBQWhCLENBQXNCMEIsZ0JBQXRCLENBQXVDQyxJQUF2QyxDQUE0Q0osZUFBNUM7O0FBRUEsYUFBS2hGLG1CQUFMLENBQXlCcUYsWUFBekIsR0FBd0MsS0FBS25ELGdCQUFMLENBQXNCRyxJQUE5RDtBQUNBLGFBQUtyQyxtQkFBTCxDQUF5QmpCLGFBQXpCLEdBQXlDLEtBQUtBLGFBQTlDOztBQUVBLFlBQUcsS0FBS0csTUFBTCxDQUFZTixFQUFaLENBQWVNLE1BQWYsQ0FBc0IyQyxHQUF6QixFQUE2QjtBQUN6QixpQkFBS3lELFFBQUw7QUFDSDs7QUFFRCxZQUFHLEtBQUtwRyxNQUFMLENBQVlOLEVBQVosQ0FBZU0sTUFBZixDQUFzQnFHLFNBQXpCLEVBQW1DO0FBQy9CLGlCQUFLQyxTQUFMO0FBQ0g7QUFDSjs7QUFFRDs7Ozs7K0JBQ09DLEcsRUFBSTtBQUNQLGlCQUFLdEcsY0FBTCxDQUFvQitGLE1BQXBCO0FBQ0EsaUJBQUtuRyxhQUFMLENBQW1CbUcsTUFBbkI7QUFDSDs7O21DQUVTO0FBQ04sZ0JBQUlsRSxRQUFRLEtBQUs5QixNQUFMLENBQVlOLEVBQVosQ0FBZU0sTUFBZixDQUFzQjhCLEtBQWxDO0FBQ0EsZ0JBQUl5QyxRQUFRLEtBQUs3RCxVQUFMLENBQWdCNkQsS0FBNUI7QUFDQSxnQkFBSTVCLE1BQU0sS0FBS2pDLFVBQUwsQ0FBZ0JpQyxHQUExQjtBQUNBLGdCQUFJOUIsUUFBUSxJQUFaO0FBR0g7Ozs4Q0FFb0I7QUFDakIsaUJBQUtaLGNBQUwsQ0FBb0J1RyxLQUFwQjtBQUNIOztBQUVEOzs7OzRDQUNvQkMsUSxFQUFTO0FBQ3pCLG9CQUFPQSxRQUFQO0FBQ0kscUJBQUtoRixnQkFBTVIsVUFBTixDQUFpQkMsSUFBdEI7QUFBZ0MseUJBQUtKLG1CQUFMLENBQXlCQyxRQUF6QixDQUFrQ0MsOEJBQW9CQyxVQUFwQixDQUErQkMsSUFBakUsRUFBNEU7QUFDNUcscUJBQUtPLGdCQUFNUixVQUFOLENBQWlCeUYsR0FBdEI7QUFBZ0MseUJBQUs1RixtQkFBTCxDQUF5QkMsUUFBekIsQ0FBa0NDLDhCQUFvQkMsVUFBcEIsQ0FBK0J5RixHQUFqRSxFQUE0RTtBQUM1RyxxQkFBS2pGLGdCQUFNUixVQUFOLENBQWlCMEYsS0FBdEI7QUFBZ0MseUJBQUs3RixtQkFBTCxDQUF5QkMsUUFBekIsQ0FBa0NDLDhCQUFvQkMsVUFBcEIsQ0FBK0IwRixLQUFqRSxFQUE0RTtBQUM1RyxxQkFBS2xGLGdCQUFNUixVQUFOLENBQWlCMkYsSUFBdEI7QUFBZ0MseUJBQUs5RixtQkFBTCxDQUF5QkMsUUFBekIsQ0FBa0NDLDhCQUFvQkMsVUFBcEIsQ0FBK0IyRixJQUFqRSxFQUE0RTtBQUpoSDtBQU1IOzs7b0NBRVU7O0FBRVAsZ0JBQUlDLFFBQVEsbUJBQUFyRSxDQUFRLEVBQVIsRUFBcUNDLE9BQWpEO0FBQ0EsZ0JBQUlGLFNBQVMsbUJBQUFDLENBQVEsQ0FBUixFQUFzQ0MsT0FBbkQ7QUFDQSxnQkFBSXFFLFlBQVksbUJBQUF0RSxDQUFRLEVBQVIsRUFBeUNDLE9BQXpEOztBQUVBLGdCQUFJNUIsUUFBUSxJQUFaO0FBQ0EsZ0JBQUkwRCxRQUFRLEtBQUs3RCxVQUFMLENBQWdCNkQsS0FBNUI7O0FBRUEsZ0JBQUcsS0FBS3ZFLE1BQUwsQ0FBWU4sRUFBWixDQUFlTSxNQUFmLENBQXNCMkMsR0FBekIsRUFBNkI7QUFDekIsb0JBQUlvRSxlQUFlRCxVQUFVRSxPQUFWLENBQWtCLEtBQWxCLENBQW5COztBQUVBekUsdUJBQU8wRSxZQUFQLENBQW9CLFdBQXBCLEVBQWlDLG1CQUFqQyxFQUFzRCxZQUFVO0FBQzVERixpQ0FBYUcsTUFBYixDQUFvQnJHLE1BQU1oQixhQUFOLENBQW9Cc0QsSUFBeEM7QUFDSCxpQkFGRDtBQUdIO0FBQ0o7Ozs7OztrQkFHVTNDLEkiLCJmaWxlIjoiNjkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ2FyZ29MaXN0VmlldyBmcm9tIFwiLi9DYXJnb0xpc3RWaWV3XCI7XHJcbmltcG9ydCBQYWNrZXIgZnJvbSBcIi4uL3BhY2tlci9QYWNrZXJcIjtcclxuaW1wb3J0IENhcmdvTGlzdCBmcm9tIFwiLi4vcGFja2VyL0NhcmdvTGlzdFwiO1xyXG5pbXBvcnQgUGFja2luZ1NwYWNlVmlldyBmcm9tIFwiLi9QYWNraW5nU3BhY2VWaWV3XCI7XHJcbmltcG9ydCBQYWNraW5nU3BhY2UgZnJvbSBcIi4uL3BhY2tlci9QYWNraW5nU3BhY2VcIjtcclxuaW1wb3J0IFNjZW5lU2V0dXAgZnJvbSBcIi4uL3ZpZXcvU2NlbmVTZXR1cFwiO1xyXG5pbXBvcnQgVXRpbHMgZnJvbSBcIi4uL3V0aWxzL2Npay9VdGlsc1wiO1xyXG5pbXBvcnQgUGFja1Jlc3VsdFZpZXcgZnJvbSBcIi4vUGFja1Jlc3VsdFZpZXdcIjtcclxuaW1wb3J0IFVwZGF0ZUNvbXBvbmVudCBmcm9tIFwiLi4vdXRpbHMvY2lrL2lucHV0L1VwZGF0ZUNvbXBvbmVudFwiO1xyXG5pbXBvcnQgQ29udGFpbmVyIGZyb20gXCIuLi9wYWNrZXIvY29udGFpbmVyL0NvbnRhaW5lclwiO1xyXG5pbXBvcnQgQm94RW50cnkgZnJvbSBcIi4uL2NvbXBvbmVudHMvYm94L0JveEVudHJ5XCI7XHJcbmltcG9ydCBEb21VSSBmcm9tIFwiLi9kb20vRG9tVUlcIjtcclxuaW1wb3J0IE9ydGhvdmlld3NOYXZpZ2F0b3IgZnJvbSBcIi4vT3J0aG92aWV3c05hdmlnYXRvclwiO1xyXG5pbXBvcnQgQ2FtZXJhIGZyb20gXCIuLi9zY2VuZS9DYW1lcmFcIjtcclxuXHJcbi8qKlxyXG4gKiBAdHlwZWRlZiB7T2JqZWN0fSBWaWV3UGFyYW1zXHJcbiAqIEBwcm9wZXJ0eSB7aW1wb3J0KCcuLi9VWCcpLmRlZmF1bHR9IHV4XHJcbiAqIEBwcm9wZXJ0eSB7TnVtYmVyfSB0cmFuc2l0aW9uRHVyYXRpb25cclxuICogQHByb3BlcnR5IHtPYmplY3R9IGNhcmdvTGlzdFZpZXdcclxuICogQHByb3BlcnR5IHtOdW1iZXJ9IGNhcmdvTGlzdFZpZXcucGFkZGluZ1pcclxuICogQHByb3BlcnR5IHtOdW1iZXJ9IGNhcmdvTGlzdFZpZXcucGFkZGluZ1lcclxuICogQHByb3BlcnR5IHtpbXBvcnQoJy4vQ2FyZ29MaXN0VmlldycpLkNhcmdvTGlzdFZpZXdQYXJhbXN9IGNhcmdvTGlzdFZpZXcucGFyYW1zXHJcbiAqIEBwcm9wZXJ0eSB7T2JqZWN0fSBwYWNrUmVzdWx0Vmlld1xyXG4gKiBAcHJvcGVydHkge2ltcG9ydCgnLi9QYWNrUmVzdWx0VmlldycpLlBhY2tSZXN1bHRWaWV3UGFyYW1zfSBwYWNrUmVzdWx0Vmlldy5wYXJhbXNcclxuICovXHJcblxyXG4gLyoqIEB0eXBlIHtWaWV3UGFyYW1zfSAqL1xyXG5jb25zdCBkZWZhdWx0UGFyYW1zID0ge1xyXG4gICAgdXg6IHVuZGVmaW5lZCxcclxuICAgIHRyYW5zaXRpb25EdXJhdGlvbjogMS41LFxyXG4gICAgY2FyZ29MaXN0Vmlldzoge1xyXG4gICAgICAgIHBhZGRpbmdaOiAxMjAsXHJcbiAgICAgICAgcGFkZGluZ1k6IDQwLFxyXG4gICAgICAgIHBhcmFtczoge31cclxuICAgIH0sXHJcbiAgICBwYWNrUmVzdWx0Vmlldzoge1xyXG4gICAgICAgIHBhcmFtczoge1xyXG4gICAgICAgICAgICBhbmltYXRpb25EdXJhdGlvbjogMVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufTtcclxuXHJcbnZhciB0ZW1wQm94MyA9IG5ldyBUSFJFRS5Cb3gzKCk7XHJcbnZhciB0ZW1wVmVjID0gbmV3IFRIUkVFLlZlY3RvcjMoKTtcclxuXHJcbmNsYXNzIFZpZXcge1xyXG4gICAgLyoqXHJcbiAgICAgKiBDb25zdHJ1Y3RvclxyXG4gICAgICogQHBhcmFtIHtQYWNrZXJ9IHBhY2tlciBcclxuICAgICAqIEBwYXJhbSB7RG9tVUl9IGRvbVVJOyBcclxuICAgICAqIEBwYXJhbSB7U2NlbmVTZXR1cH0gc2NlbmVTZXR1cCBcclxuICAgICAqIEBwYXJhbSB7Vmlld1BhcmFtc30gcGFyYW1zIFxyXG4gICAgICovXHJcbiAgICBjb25zdHJ1Y3RvcihwYWNrZXIsIHNjZW5lU2V0dXAsIGRvbVVJLCBwYXJhbXMpe1xyXG5cclxuICAgICAgICB0aGlzLnNjZW5lU2V0dXAgPSBzY2VuZVNldHVwO1xyXG4gICAgICAgIHRoaXMucGFyYW1zID0gVXRpbHMuQXNzaWduVW5kZWZpbmVkKHBhcmFtcywgZGVmYXVsdFBhcmFtcyk7XHJcblxyXG4gICAgICAgIHRoaXMuZG9tVUkgPSBkb21VSTtcclxuICAgICAgICB0aGlzLmRvbVVJLkNyZWF0ZU9ydGhvVmlld3NJY29ucygpO1xyXG4gICAgICAgIHRoaXMuZG9tVUkuT24oRG9tVUkuc2lnbmFscy5vcnRob1ZpZXdTZWxlY3RlZCwgdGhpcy5Pbk9ydGhvVmlld1NlbGVjdGVkLmJpbmQodGhpcykpO1xyXG5cclxuICAgICAgICB2YXIgc2NvcGUgPSB0aGlzO1xyXG4gICAgICAgIHZhciB1bml0cyA9IHRoaXMucGFyYW1zLnV4LnBhcmFtcy51bml0cztcclxuXHJcbiAgICAgICAgLy8gRmlsbCBsaWdodHNcclxuICAgICAgICBpZih0cnVlKXtcclxuICAgICAgICAgICAgbGV0IGxpZ2h0cyA9IHRoaXMuc2NlbmVTZXR1cC5EZWZhdWx0TGlnaHRzKHRoaXMuc2NlbmVTZXR1cC5zY2VuZUNvbnRyb2xsZXIsIHRydWUsIHRydWUpO1xyXG5cclxuICAgICAgICAgICAgbGV0IGRsID0gbGlnaHRzLmZpbHRlcihsaWdodCA9PiBsaWdodCBpbnN0YW5jZW9mIFRIUkVFLkRpcmVjdGlvbmFsTGlnaHQpWzBdO1xyXG4gICAgICAgICAgICBsZXQgZGxEYXRhID0ge1wiY29sb3JcIjpcIjB4ZmNlZWVlXCIsXCJpbnRlbnNpdHlcIjoxLFwiY2FzdFNoYWRvd1wiOnRydWUsXCJzaGFkb3cuYmlhc1wiOjAuMDAwMDEsXCJzaGFkb3cucmFkaXVzXCI6NCxcInNoYWRvdy5tYXBTaXplLnhcIjo0MDk2LFwic2hhZG93Lm1hcFNpemUueVwiOjQwOTYsXCJzaGFkb3cuY2FtZXJhLmxlZnRcIjotNDAwLFwic2hhZG93LmNhbWVyYS50b3BcIjozMDAsXCJzaGFkb3cuY2FtZXJhLnJpZ2h0XCI6NDAwLFwic2hhZG93LmNhbWVyYS5ib3R0b21cIjotMzAwLFwic2hhZG93LmNhbWVyYS5uZWFyXCI6MjAsXCJzaGFkb3cuY2FtZXJhLmZhclwiOjgwMH07XHJcbiAgICAgICAgICAgIGxldCBDb25maWcgPSByZXF1aXJlKCcuLi91dGlscy9jaWsvY29uZmlnL0NvbmZpZycpLmRlZmF1bHQ7XHJcbiAgICAgICAgICAgIENvbmZpZy5Mb2FkKGRsLCBkbERhdGEpO1xyXG5cclxuICAgICAgICAgICAgaWYodGhpcy5zY2VuZVNldHVwLnV4LnBhcmFtcy5odWQpe1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zY2VuZVNldHVwLkRlZmF1bHRMaWdodHModGhpcy5zY2VuZVNldHVwLmh1ZCk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGxldCBkbENvbXAgPSBsaWdodHMuZmlsdGVyKGxpZ2h0ID0+IGxpZ2h0IGluc3RhbmNlb2YgVEhSRUUuRGlyZWN0aW9uYWxMaWdodClbMV07XHJcbiAgICAgICAgICAgIGRsQ29tcC5jYXN0U2hhZG93ID0gdHJ1ZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGxldCBvcnRob3ZpZXdzTmF2UGFyYW1zID0ge3V4OiB0aGlzLnBhcmFtcy51eH07XHJcbiAgICAgICAgdGhpcy5vcnRob3ZpZXdzTmF2aWdhdG9yID0gbmV3IE9ydGhvdmlld3NOYXZpZ2F0b3IodGhpcy5zY2VuZVNldHVwLmNhbWVyYUNvbnRyb2xsZXIsIG9ydGhvdmlld3NOYXZQYXJhbXMpO1xyXG5cclxuICAgICAgICAvLyBQYWNraW5nIHNwYWNlXHJcbiAgICAgICAgdGhpcy5wYWNraW5nU3BhY2VWaWV3ID0gbmV3IFBhY2tpbmdTcGFjZVZpZXcoKTtcclxuICAgICAgICB0aGlzLnNjZW5lU2V0dXAuc2NlbmVDb250cm9sbGVyLkFkZERlZmF1bHQodGhpcy5wYWNraW5nU3BhY2VWaWV3LnZpZXcpO1xyXG4gICAgICAgIC8qKiBAcGFyYW0ge0NvbnRhaW5lcn0gY29udGFpbmVyICovXHJcbiAgICAgICAgZnVuY3Rpb24gb25Db250YWluZXJBZGRlZChjb250YWluZXIpe1xyXG4gICAgICAgICAgICAvKiogQHR5cGUge1RIUkVFLkJveDN9ICovXHJcbiAgICAgICAgICAgIGxldCBib3gzID0gY29udGFpbmVyLmNvbWJpbmVkVm9sdW1lLmJveDM7XHJcbiAgICAgICAgICAgIHNjb3BlLnNjZW5lU2V0dXAuY2FtZXJhQ29udHJvbGxlci5UcmFuc2l0aW9uVG9GcmFtZSgxLCBib3gzLCBzY29wZS5wYXJhbXMudHJhbnNpdGlvbkR1cmF0aW9uKTtcclxuXHJcbiAgICAgICAgICAgIHNjb3BlLnBhY2tpbmdTcGFjZVZpZXcuQWRkKGNvbnRhaW5lcik7XHJcblxyXG4gICAgICAgICAgICB0ZW1wQm94My5zZXRGcm9tT2JqZWN0KHNjb3BlLnBhY2tpbmdTcGFjZVZpZXcudmlldyk7XHJcbiAgICAgICAgICAgIHRlbXBCb3gzLmdldFNpemUodGVtcFZlYyk7XHJcblxyXG4gICAgICAgICAgICBsZXQgY29udGFpbmVyU2l6ZSA9IE1hdGgubWF4KHRlbXBWZWMueCwgdGVtcFZlYy55LCB0ZW1wVmVjLnopO1xyXG4gICAgICAgICAgICBzY29wZS5jYXJnb0xpc3RWaWV3LnZpZXcucG9zaXRpb24ueiA9IGNvbnRhaW5lclNpemUgLyAyICsgc2NvcGUucGFyYW1zLmNhcmdvTGlzdFZpZXcucGFkZGluZ1ogKiB1bml0cztcclxuICAgICAgICAgICAgc2NvcGUuY2FyZ29MaXN0Vmlldy52aWV3LnBvc2l0aW9uLnkgPSBzY29wZS5wYXJhbXMuY2FyZ29MaXN0Vmlldy5wYWRkaW5nWSAqIHVuaXRzO1xyXG4gICAgICAgIH1cclxuICAgICAgICBwYWNrZXIucGFja2luZ1NwYWNlLk9uKFBhY2tpbmdTcGFjZS5zaWduYWxzLmNvbnRhaW5lckFkZGVkLCBvbkNvbnRhaW5lckFkZGVkKTtcclxuXHJcbiAgICAgICAgLy8gQ2FyZ28gbGlzdFxyXG4gICAgICAgIHRoaXMucGFyYW1zLmNhcmdvTGlzdFZpZXcucGFyYW1zLnV4ID0gdGhpcy5wYXJhbXMudXg7XHJcbiAgICAgICAgdGhpcy5jYXJnb0xpc3RWaWV3ID0gbmV3IENhcmdvTGlzdFZpZXcodGhpcy5wYXJhbXMuY2FyZ29MaXN0Vmlldy5wYXJhbXMpO1xyXG5cclxuICAgICAgICB0aGlzLnNjZW5lU2V0dXAuaW5wdXQuQWRkUmF5Y2FzdEdyb3VwKCdPbkNsaWNrJywgJ2NhcmdvTGlzdFZpZXcnLCB0aGlzLmNhcmdvTGlzdFZpZXcucmF5Y2FzdEdyb3VwKTtcclxuXHJcbiAgICAgICAgdGhpcy5zY2VuZVNldHVwLnNjZW5lQ29udHJvbGxlci5BZGREZWZhdWx0KHRoaXMuY2FyZ29MaXN0Vmlldy52aWV3KTtcclxuXHJcbiAgICAgICAgZnVuY3Rpb24gb25DYXJnb0xpc3RWaWV3Q2hhbmdlZCgpe1xyXG4gICAgICAgICAgICB0ZW1wQm94My5zZXRGcm9tT2JqZWN0KHNjb3BlLmNhcmdvTGlzdFZpZXcudmlldyk7XHJcbiAgICAgICAgICAgIHRlbXBCb3gzLmdldENlbnRlcih0ZW1wVmVjKTtcclxuICAgICAgICAgICAgbGV0IGxpc3RWaWV3Q2VudGVyWCA9IHRlbXBWZWMueDtcclxuICAgICAgICAgICAgc2NvcGUuY2FyZ29MaXN0Vmlldy52aWV3LmdldFdvcmxkUG9zaXRpb24odGVtcFZlYyk7XHJcbiAgICAgICAgICAgIGxldCBvZmZzZXRYID0gbGlzdFZpZXdDZW50ZXJYIC0gdGVtcFZlYy54O1xyXG5cclxuICAgICAgICAgICAgLyoqIEB0eXBlIHtUSFJFRS5Cb3gzfSAqL1xyXG4gICAgICAgICAgICBsZXQgYm94MyA9IHRlbXBCb3gzO1xyXG4gICAgICAgICAgICBzY29wZS5zY2VuZVNldHVwLmNhbWVyYUNvbnRyb2xsZXIuVHJhbnNpdGlvblRvRnJhbWUoMSwgYm94Mywgc2NvcGUucGFyYW1zLnRyYW5zaXRpb25EdXJhdGlvbik7XHJcblxyXG4gICAgICAgICAgICB0ZW1wQm94My5zZXRGcm9tT2JqZWN0KHNjb3BlLnBhY2tpbmdTcGFjZVZpZXcudmlldyk7XHJcbiAgICAgICAgICAgIHRlbXBCb3gzLmdldENlbnRlcih0ZW1wVmVjKTtcclxuICAgICAgICAgICAgbGV0IGNlbnRlclggPSB0ZW1wVmVjLng7XHJcblxyXG4gICAgICAgICAgICBzY29wZS5jYXJnb0xpc3RWaWV3LnZpZXcucG9zaXRpb24ueCA9IGNlbnRlclggLSBvZmZzZXRYO1xyXG4gICAgICAgIH1cclxuICAgICAgICBmdW5jdGlvbiBvbkNhcmdvR3JvdXBBZGRlZChncm91cCl7XHJcbiAgICAgICAgICAgIHNjb3BlLmNhcmdvTGlzdFZpZXcuQWRkKGdyb3VwKTtcclxuICAgICAgICAgICAgb25DYXJnb0xpc3RWaWV3Q2hhbmdlZCgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBwYWNrZXIuY2FyZ29MaXN0Lk9uKENhcmdvTGlzdC5zaWduYWxzLmdyb3VwQWRkZWQsIG9uQ2FyZ29Hcm91cEFkZGVkKTtcclxuICAgICAgICBmdW5jdGlvbiBvbkNhcmdvR3JvdXBSZW1vdmVkKGdyb3VwKXtcclxuICAgICAgICAgICAgc2NvcGUuY2FyZ29MaXN0Vmlldy5SZW1vdmUoZ3JvdXApO1xyXG4gICAgICAgICAgICBvbkNhcmdvTGlzdFZpZXdDaGFuZ2VkKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHBhY2tlci5jYXJnb0xpc3QuT24oQ2FyZ29MaXN0LnNpZ25hbHMuZ3JvdXBSZW1vdmVkLCBvbkNhcmdvR3JvdXBSZW1vdmVkKTtcclxuICAgICAgICBmdW5jdGlvbiBvbkNhcmdvR3JvdXBNb2RpZmllZChncm91cCl7XHJcbiAgICAgICAgICAgIHNjb3BlLmNhcmdvTGlzdFZpZXcuVXBkYXRlR3JvdXAoZ3JvdXApO1xyXG4gICAgICAgICAgICBvbkNhcmdvTGlzdFZpZXdDaGFuZ2VkKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHBhY2tlci5jYXJnb0xpc3QuT24oQ2FyZ29MaXN0LnNpZ25hbHMuZ3JvdXBNb2RpZmllZCwgb25DYXJnb0dyb3VwTW9kaWZpZWQpO1xyXG5cclxuICAgICAgICAvLyBQYWNraW5nIHJlc3VsdFxyXG4gICAgICAgIHRoaXMucGFyYW1zLnBhY2tSZXN1bHRWaWV3LnBhcmFtcy51eCA9IHRoaXMucGFyYW1zLnV4O1xyXG4gICAgICAgIHRoaXMucGFja1Jlc3VsdFZpZXcgPSBuZXcgUGFja1Jlc3VsdFZpZXcodGhpcy5jYXJnb0xpc3RWaWV3LCB0aGlzLnBhY2tpbmdTcGFjZVZpZXcsIHRoaXMucGFyYW1zLnBhY2tSZXN1bHRWaWV3LnBhcmFtcyk7XHJcbiAgICAgICAgdGhpcy5zY2VuZVNldHVwLnNjZW5lQ29udHJvbGxlci5BZGREZWZhdWx0KHRoaXMucGFja1Jlc3VsdFZpZXcudmlldyk7XHJcblxyXG4gICAgICAgIC8qKiBAcGFyYW0ge1BhY2tlci5QYWNraW5nUmVzdWx0fSBwYWNraW5nUmVzdWx0ICovXHJcbiAgICAgICAgYXN5bmMgZnVuY3Rpb24gb25QYWNrVXBkYXRlKHBhY2tpbmdSZXN1bHQpe1xyXG4gICAgICAgICAgICBzY29wZS5vcnRob3ZpZXdzTmF2aWdhdG9yLk5hdmlnYXRlKE9ydGhvdmlld3NOYXZpZ2F0b3Iub3J0aG92aWV3cy5ob21lLCBmYWxzZSk7XHJcbiAgICAgICAgICAgIGF3YWl0IHNjb3BlLnBhY2tSZXN1bHRWaWV3LkRpc3BsYXlQYWNraW5nUmVzdWx0KHBhY2tpbmdSZXN1bHQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBwYWNrZXIuT24oUGFja2VyLnNpZ25hbHMucGFja1VwZGF0ZSwgb25QYWNrVXBkYXRlKTtcclxuXHJcbiAgICAgICAgdmFyIHVwZGF0ZUNvbXBvbmVudCA9IG5ldyBVcGRhdGVDb21wb25lbnQodHJ1ZSwgMS8zMCwgdGhpcy5VcGRhdGUuYmluZCh0aGlzKSk7XHJcbiAgICAgICAgdGhpcy5zY2VuZVNldHVwLmlucHV0LnVwZGF0ZUNvbXBvbmVudHMucHVzaCh1cGRhdGVDb21wb25lbnQpO1xyXG5cclxuICAgICAgICB0aGlzLm9ydGhvdmlld3NOYXZpZ2F0b3IuYm91bmRpbmdWaWV3ID0gdGhpcy5wYWNraW5nU3BhY2VWaWV3LnZpZXc7XHJcbiAgICAgICAgdGhpcy5vcnRob3ZpZXdzTmF2aWdhdG9yLmNhcmdvTGlzdFZpZXcgPSB0aGlzLmNhcmdvTGlzdFZpZXc7XHJcblxyXG4gICAgICAgIGlmKHRoaXMucGFyYW1zLnV4LnBhcmFtcy5odWQpe1xyXG4gICAgICAgICAgICB0aGlzLkhVRFNldHVwKCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZih0aGlzLnBhcmFtcy51eC5wYXJhbXMuY29uZmlndXJlKXtcclxuICAgICAgICAgICAgdGhpcy5Db25maWd1cmUoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIEBwYXJhbSB7TnVtYmVyfSBub3cgKi9cclxuICAgIFVwZGF0ZShub3cpe1xyXG4gICAgICAgIHRoaXMucGFja1Jlc3VsdFZpZXcuVXBkYXRlKCk7XHJcbiAgICAgICAgdGhpcy5jYXJnb0xpc3RWaWV3LlVwZGF0ZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIEhVRFNldHVwKCl7XHJcbiAgICAgICAgdmFyIHVuaXRzID0gdGhpcy5wYXJhbXMudXgucGFyYW1zLnVuaXRzO1xyXG4gICAgICAgIHZhciBpbnB1dCA9IHRoaXMuc2NlbmVTZXR1cC5pbnB1dDtcclxuICAgICAgICB2YXIgaHVkID0gdGhpcy5zY2VuZVNldHVwLmh1ZDtcclxuICAgICAgICB2YXIgc2NvcGUgPSB0aGlzO1xyXG5cclxuXHJcbiAgICB9XHJcblxyXG4gICAgQ2xlYXJQYWNraW5nUmVzdWx0cygpe1xyXG4gICAgICAgIHRoaXMucGFja1Jlc3VsdFZpZXcuQ2xlYXIoKTtcclxuICAgIH1cclxuXHJcbiAgICAvKiogQHBhcmFtIHtEb21VSS5vcnRob3ZpZXdzfSB2aWV3VHlwZSAqL1xyXG4gICAgT25PcnRob1ZpZXdTZWxlY3RlZCh2aWV3VHlwZSl7XHJcbiAgICAgICAgc3dpdGNoKHZpZXdUeXBlKXtcclxuICAgICAgICAgICAgY2FzZSBEb21VSS5vcnRob3ZpZXdzLmhvbWU6ICAgICB0aGlzLm9ydGhvdmlld3NOYXZpZ2F0b3IuTmF2aWdhdGUoT3J0aG92aWV3c05hdmlnYXRvci5vcnRob3ZpZXdzLmhvbWUpOyAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgRG9tVUkub3J0aG92aWV3cy50b3A6ICAgICAgdGhpcy5vcnRob3ZpZXdzTmF2aWdhdG9yLk5hdmlnYXRlKE9ydGhvdmlld3NOYXZpZ2F0b3Iub3J0aG92aWV3cy50b3ApOyAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIERvbVVJLm9ydGhvdmlld3MuZnJvbnQ6ICAgIHRoaXMub3J0aG92aWV3c05hdmlnYXRvci5OYXZpZ2F0ZShPcnRob3ZpZXdzTmF2aWdhdG9yLm9ydGhvdmlld3MuZnJvbnQpOyAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBEb21VSS5vcnRob3ZpZXdzLnNpZGU6ICAgICB0aGlzLm9ydGhvdmlld3NOYXZpZ2F0b3IuTmF2aWdhdGUoT3J0aG92aWV3c05hdmlnYXRvci5vcnRob3ZpZXdzLnNpZGUpOyAgICAgYnJlYWs7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIENvbmZpZ3VyZSgpe1xyXG5cclxuICAgICAgICB2YXIgU21hcnQgPSByZXF1aXJlKCcuLi91dGlscy9jaWsvY29uZmlnL1NtYXJ0JykuZGVmYXVsdDtcclxuICAgICAgICB2YXIgQ29uZmlnID0gcmVxdWlyZSgnLi4vdXRpbHMvY2lrL2NvbmZpZy9Db25maWcnKS5kZWZhdWx0O1xyXG4gICAgICAgIHZhciBDb250cm9sM0QgPSByZXF1aXJlKCcuLi91dGlscy9jaWsvY29uZmlnL0NvbnRyb2wzRCcpLmRlZmF1bHQ7XHJcblxyXG4gICAgICAgIHZhciBzY29wZSA9IHRoaXM7XHJcbiAgICAgICAgdmFyIGlucHV0ID0gdGhpcy5zY2VuZVNldHVwLmlucHV0O1xyXG5cclxuICAgICAgICBpZih0aGlzLnBhcmFtcy51eC5wYXJhbXMuaHVkKXtcclxuICAgICAgICAgICAgdmFyIGh1ZENvbnRyb2wzRCA9IENvbnRyb2wzRC5SZXF1ZXN0KCdodWQnKTtcclxuXHJcbiAgICAgICAgICAgIENvbmZpZy5NYWtlU2hvcnRjdXQoJ0NvbmZpZ3VyZScsICdTaG93IEhVRENvbnRyb2wzRCcsIGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICAgICAgICBodWRDb250cm9sM0QuVG9nZ2xlKHNjb3BlLmNhcmdvTGlzdFZpZXcudmlldyk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgVmlldztcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvYXBpL3ZpZXcvVmlldy5qcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///69\n");

/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Utils = __webpack_require__(0);\n\nvar _Utils2 = _interopRequireDefault(_Utils);\n\nvar _CargoListView = __webpack_require__(19);\n\nvar _CargoListView2 = _interopRequireDefault(_CargoListView);\n\nvar _CargoView = __webpack_require__(17);\n\nvar _CargoView2 = _interopRequireDefault(_CargoView);\n\nvar _Pool = __webpack_require__(23);\n\nvar _Pool2 = _interopRequireDefault(_Pool);\n\nvar _PackedCargoBoxView = __webpack_require__(71);\n\nvar _PackedCargoBoxView2 = _interopRequireDefault(_PackedCargoBoxView);\n\nvar _PackingSpaceView = __webpack_require__(40);\n\nvar _PackingSpaceView2 = _interopRequireDefault(_PackingSpaceView);\n\nvar _Tween = __webpack_require__(15);\n\nvar _Tween2 = _interopRequireDefault(_Tween);\n\nvar _Packer = __webpack_require__(22);\n\nvar _Packer2 = _interopRequireDefault(_Packer);\n\nvar _BoxEntry = __webpack_require__(5);\n\nvar _BoxEntry2 = _interopRequireDefault(_BoxEntry);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction sleep(ms) {\n    return new Promise(function (resolve) {\n        return setTimeout(resolve, ms);\n    });\n}\n\n/**\r\n * @typedef {Object} PackResultViewParams\r\n * @property {import('../UX').default} ux\r\n * @property {Number} animationDuration\r\n */\n\n/** @type {PackResultViewParams} */\nvar defaultParams = {};\n\n/**\r\n * @param {CargoView} cargoView\r\n * @returns {PackedCargoBoxView}\r\n */\nfunction poolNewFN(cargoView) {\n    //console.log('pool new', cargoView);\n    var packedCargoView = new _PackedCargoBoxView2.default(cargoView.entry);\n    packedCargoView.Extend(cargoView);\n    return packedCargoView;\n}\n\n/**\r\n * @param {PackedCargoBoxView} object \r\n * @param {CargoView} cargoView\r\n * @returns {PackedCargoBoxView}\r\n */\nfunction poolResetFN(object, cargoView) {\n    //console.log('pool reset', cargoView);\n    object.Extend(cargoView);\n    return object;\n}\n\nfunction getOrientationAngles(orientation) {\n    switch (orientation) {\n        case 'xyz':\n            return [0, 0, 0];\n        case 'xzy':\n            return [90, 0, 0];\n        case 'yxz':\n            return [0, 0, 90];\n        case 'yzx':\n            return [90, 0, 90];\n        case 'zxy':\n            return [90, -90, 0];\n        case 'zyx':\n            return [0, -90, 0];\n    }\n}\n\n/**\r\n * @param {string} orientation \r\n */\nfunction getOrientationEuler(orientation) {\n    var rad = Math.PI / 180.0;\n    var a = getOrientationAngles(orientation);\n    return new THREE.Euler(a[0] * rad, a[1] * rad, a[2] * rad);\n}\n\nvar tempBox = new THREE.Box3();\nvar tempVec = new THREE.Vector3();\n\nvar PackResultView = function () {\n    /**\r\n     * @param {CargoListView} cargoListView\r\n     * @param {PackingSpaceView} packingSpaceView\r\n     * @param {PackResultViewParams} params \r\n     */\n    function PackResultView(cargoListView, packingSpaceView, params) {\n        _classCallCheck(this, PackResultView);\n\n        this.cargoListView = cargoListView;\n        this.packingSpaceView = packingSpaceView;\n        this.params = _Utils2.default.AssignUndefined(params, defaultParams);\n\n        /** @type {Array<CargoView} */\n        this.cargoViews = [];\n        this.view = new THREE.Object3D();\n\n        this.pool = new _Pool2.default(poolNewFN, poolResetFN);\n\n        /** @type {Array<Tween>} */\n        this.animatingViews = [];\n    }\n\n    /** \r\n     * @param {Packer.PackingResult} packingResult\r\n     */\n\n\n    _createClass(PackResultView, [{\n        key: 'DisplayPackingResult',\n        value: function () {\n            var _ref = _asyncToGenerator(function* (packingResult) {\n\n                var units = this.params.ux.params.units;\n\n                var containingVolume = packingResult.packed[0].containingVolume;\n                var matrix = this.packingSpaceView.GetMatrix(containingVolume);\n                var offset = new THREE.Vector3();\n                var orientation = new THREE.Quaternion();\n                var scale = new THREE.Vector3();\n                matrix.decompose(offset, orientation, scale);\n\n                /** @type {Map<CargoView, Number>} */\n                var packedQuantities = new Map();\n\n                var animatingViews = this.animatingViews;\n                var view = this.view;\n                var onTweenComplete = this.OnCargoFirstTweenComplete.bind(this);\n                var zEntry = containingVolume.dimensions.length;\n                var numPackedItems = packingResult.packed.length;\n                var delayPerItem = this.params.animationDuration * 1000 / numPackedItems;\n                for (var i = 0; i < numPackedItems; i++) {\n                    var item = packingResult.packed[i];\n                    var cargoViewTemplate = this.cargoListView.GetTemplate(item.entry);\n\n                    var packedQuantity = packedQuantities.get(cargoViewTemplate);\n                    var totalQuantity = cargoViewTemplate.entry.quantity;\n                    if (packedQuantity === undefined) packedQuantities.set(cargoViewTemplate, packedQuantity = 0);\n                    packedQuantities.set(cargoViewTemplate, ++packedQuantity);\n                    var textColor = packedQuantity === totalQuantity ? 'rgb(255, 255, 255)' : 'rgb(255, 0, 0)';\n                    this.cargoListView.UpdateLabel(cargoViewTemplate, packedQuantity + '/' + totalQuantity, textColor);\n\n                    var packedCargoView = this.pool.Request(cargoViewTemplate);\n\n                    this.cargoViews.push(packedCargoView);\n\n                    var rotation = getOrientationEuler(item.orientation);\n                    packedCargoView.SetRotationAngles(rotation.x, rotation.y, rotation.z);\n\n                    var x = item.position.x + offset.x,\n                        y = item.position.y + offset.y,\n                        z = item.position.z + offset.z;\n\n                    var posTweenCombo = _Tween2.default.Combo.RequestN(_Tween2.default.functions.ease.easeOutQuad, .5, x, 0, y, 0, zEntry, z - zEntry);\n\n                    posTweenCombo.extraData = packedCargoView;\n                    posTweenCombo.Hook(packedCargoView.position, 'x', 'y', 'z');\n                    posTweenCombo.onComplete = onTweenComplete;\n                    posTweenCombo.Update(0);\n                    animatingViews.push(posTweenCombo);\n\n                    view.add(packedCargoView.view);\n                    yield sleep(delayPerItem);\n                }\n\n                yield sleep(500);\n\n                var unpackedOffset = 6 * units;\n                for (var _i = 0, numUnpackedItems = packingResult.unpacked.length; _i < numUnpackedItems; _i++) {\n                    var _item = packingResult.unpacked[_i];\n                    var _cargoViewTemplate = this.cargoListView.GetTemplate(_item.entry);\n\n                    var _totalQuantity = _cargoViewTemplate.entry.quantity;\n                    if (packedQuantities.has(_cargoViewTemplate) === false) {\n                        var _textColor = false ? 'rgb(255, 255, 255)' : 'rgb(255, 0, 0)';\n                        this.cargoListView.UpdateLabel(_cargoViewTemplate, '0/' + _totalQuantity, _textColor);\n                    }\n\n                    if (_i === 0) unpackedOffset += _item.entry.dimensions.width / 2;\n\n                    for (var j = 0; j < _item.unpackedQuantity; j++) {\n                        var _packedCargoView = this.pool.Request(_cargoViewTemplate);\n\n                        this.cargoViews.push(_packedCargoView);\n\n                        var _x2 = containingVolume.dimensions.width * 1.5 + unpackedOffset + offset.x,\n                            _y = _item.entry.dimensions.height / 2 + offset.y,\n                            _z = _item.entry.dimensions.length * j + offset.z;\n\n                        var _posTweenCombo = _Tween2.default.Combo.RequestN(_Tween2.default.functions.ease.easeOutQuad, .5, _x2, 0, _y, 0, zEntry, _z - zEntry);\n\n                        _posTweenCombo.extraData = _packedCargoView;\n                        _posTweenCombo.Hook(_packedCargoView.position, 'x', 'y', 'z');\n                        _posTweenCombo.onComplete = onTweenComplete;\n                        _posTweenCombo.Update(0);\n                        animatingViews.push(_posTweenCombo);\n\n                        view.add(_packedCargoView.view);\n                        yield sleep(delayPerItem * .5);\n                    }\n\n                    unpackedOffset += _item.entry.dimensions.width + 6 * units;\n                }\n            });\n\n            function DisplayPackingResult(_x) {\n                return _ref.apply(this, arguments);\n            }\n\n            return DisplayPackingResult;\n        }()\n\n        /** @param {Tween|Tween.Combo} tween */\n\n    }, {\n        key: 'OnCargoFirstTweenComplete',\n        value: function OnCargoFirstTweenComplete(tween) {\n            var packedCargoView = tween.extraData;\n            this.OnTweenComplete(tween);\n            var scaleTweenCombo = _Tween2.default.Combo.RequestN(_Tween2.default.functions.special.pingPong, .1, 1, .1, 1, .1, 1, .1);\n\n            scaleTweenCombo.extraData = packedCargoView;\n            scaleTweenCombo.Hook(packedCargoView.view.scale, 'x', 'y', 'z');\n            scaleTweenCombo.onComplete = this.OnTweenComplete.bind(this);;\n            scaleTweenCombo.Update(0);\n            this.animatingViews.push(scaleTweenCombo);\n        }\n\n        /** @param {Tween|Tween.Combo} tween */\n\n    }, {\n        key: 'OnTweenComplete',\n        value: function OnTweenComplete(tween) {\n            var packedCargoView = tween.extraData;\n            packedCargoView.view.scale.set(1, 1, 1);\n            var index = this.animatingViews.indexOf(tween);\n            if (index != -1) {\n                this.animatingViews.splice(index, 1);\n            }\n            tween.Unhook();\n            tween.Return();\n        }\n\n        /** @param {string} entryUID */\n\n    }, {\n        key: 'SelectEntry',\n        value: function SelectEntry(entryUID) {\n            if (!entryUID) {\n                this.DisableHighlights();\n            } else {\n                this.Highlight(entryUID);\n            }\n        }\n    }, {\n        key: 'DisableHighlights',\n        value: function DisableHighlights() {\n            for (var i = 0, numCargoViews = this.cargoViews.length; i < numCargoViews; i++) {\n                this.cargoViews[i].focus = 1;\n            }\n        }\n\n        /** @param {string} entryUID */\n\n    }, {\n        key: 'Highlight',\n        value: function Highlight(entryUID) {\n            for (var i = 0, numCargoViews = this.cargoViews.length; i < numCargoViews; i++) {\n                var cargoView = this.cargoViews[i];\n\n                var cvEntry = cargoView.entry;\n                if (cvEntry.uid === entryUID) {\n                    cargoView.focus = 1.75;\n                } else {\n                    cargoView.focus = .25;\n                }\n            }\n        }\n\n        /** @param {Number} value */\n\n    }, {\n        key: 'Slice',\n        value: function Slice(value) {\n            if (value >= 1) {\n                this.view.children.forEach(function (child) {\n                    child.visible = true;\n                });\n                return;\n            }\n\n            var minY = Number.MAX_SAFE_INTEGER,\n                maxY = Number.MIN_SAFE_INTEGER;\n            this.view.children.forEach(function (child) {\n                tempBox.setFromObject(child);\n                tempBox.getSize(tempVec);\n                var halfHeight = tempVec.y / 2;\n                tempBox.getCenter(tempVec);\n                var low = tempVec.y - halfHeight;\n                var high = tempVec.y + halfHeight;\n                if (low < minY) minY = low;\n                if (high > maxY) maxY = high;\n            });\n\n            var y = minY + value * (maxY - minY);\n\n            //console.log('slice ' + y.toFixed(2) + ' between ' + minY.toFixed(2) + ' and ' + maxY.toFixed(2));\n\n            this.view.children.forEach(function (child) {\n                tempBox.setFromObject(child);\n                tempBox.getSize(tempVec);\n                var halfHeight = tempVec.y / 2;\n                tempBox.getCenter(tempVec);\n                var low = tempVec.y - halfHeight;\n\n                if (low < y) child.visible = true;else child.visible = false;\n            });\n        }\n    }, {\n        key: 'Clear',\n        value: function Clear() {\n            this.animatingViews.length = 0;\n            this.cargoViews.length = 0;\n            while (this.view.children.length > 0) {\n                this.view.remove(this.view.children[this.view.children.length - 1]);\n            }\n        }\n    }, {\n        key: 'Update',\n        value: function Update() {\n            this.animatingViews.forEach(function (animatingView) {\n                animatingView.Update();\n            });\n        }\n    }]);\n\n    return PackResultView;\n}();\n\nexports.default = PackResultView;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///70\n");

/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _set = function set(object, property, value, receiver) { var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent !== null) { set(parent, property, value, receiver); } } else if (\"value\" in desc && desc.writable) { desc.value = value; } else { var setter = desc.set; if (setter !== undefined) { setter.call(receiver, value); } } return value; };\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _CargoBoxView2 = __webpack_require__(16);\n\nvar _CargoBoxView3 = _interopRequireDefault(_CargoBoxView2);\n\nvar _BoxEntry = __webpack_require__(5);\n\nvar _BoxEntry2 = _interopRequireDefault(_BoxEntry);\n\nvar _Asset = __webpack_require__(4);\n\nvar _Asset2 = _interopRequireDefault(_Asset);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar unitCubeEdgeGeometry = new THREE.EdgesGeometry(new THREE.BoxBufferGeometry(1, 1, 1, 1, 1, 1));\nvar wireframeMaterialTemplate = new THREE.LineBasicMaterial({ color: 0xffffff, flatShading: true });\n\nvar _wireMaterialSettings = Symbol('wireMatSet');\n\nvar PackedCargoBoxView = function (_CargoBoxView) {\n    _inherits(PackedCargoBoxView, _CargoBoxView);\n\n    /**\r\n     * @param {BoxEntry} boxEntry \r\n     */\n    function PackedCargoBoxView(boxEntry) {\n        _classCallCheck(this, PackedCargoBoxView);\n\n        var _this = _possibleConstructorReturn(this, (PackedCargoBoxView.__proto__ || Object.getPrototypeOf(PackedCargoBoxView)).call(this, boxEntry));\n\n        var meshMaterial = _this.mesh.material;\n        meshMaterial.polygonOffset = true;\n        meshMaterial.polygonOffsetFactor = 1;\n        meshMaterial.polygonOffsetUnits = 1;\n        meshMaterial.transparent = true;\n        meshMaterial.opacity = .5;\n        meshMaterial.blending = THREE.NormalBlending;\n        meshMaterial.depthTest = true;\n        meshMaterial.depthWrite = false;\n\n        _this.mesh.castShadow = _this.mesh.receiveShadow = true;\n\n        var material = wireframeMaterialTemplate.clone();\n        _this.wireMesh = new THREE.LineSegments(unitCubeEdgeGeometry, material);\n        _this.wireMesh.renderOrder = Number.MAX_SAFE_INTEGER - 1;\n        _this.wireMesh.scale.copy(boxEntry.dimensions.vec3);\n\n        _this.view.add(_this.wireMesh);\n        return _this;\n    }\n\n    /** @returns {BoxEntry} */\n\n\n    _createClass(PackedCargoBoxView, [{\n        key: \"SetScale\",\n\n\n        /**\r\n         * @param {Number} x \r\n         * @param {Number} y \r\n         * @param {Number} z \r\n         */\n        value: function SetScale(x, y, z) {\n            this.mesh.scale.set(x, y, z);\n            this.wireMesh.scale.set(x, y, z);\n        }\n\n        /**\r\n         * @param {Number} x in radians\r\n         * @param {Number} y in radians\r\n         * @param {Number} z in radians\r\n         */\n\n    }, {\n        key: \"SetRotationAngles\",\n        value: function SetRotationAngles(x, y, z) {\n            this.mesh.rotation.set(x, y, z);\n            this.wireMesh.rotation.set(x, y, z);\n        }\n\n        /**\r\n         * @param {CargoBoxView} cargoView \r\n         */\n\n    }, {\n        key: \"Extend\",\n        value: function Extend(cargoView) {\n            this.entry = cargoView.entry;\n            this.mesh.material.color = cargoView.mesh.material.color;\n        }\n    }, {\n        key: \"entry\",\n        get: function get() {\n            return _get(PackedCargoBoxView.prototype.__proto__ || Object.getPrototypeOf(PackedCargoBoxView.prototype), \"entry\", this);\n        },\n        set: function set(value) {\n            _set(PackedCargoBoxView.prototype.__proto__ || Object.getPrototypeOf(PackedCargoBoxView.prototype), \"entry\", value, this);\n            this.scale = value.dimensions.vec3;\n        }\n\n        /** @param {Number} value */\n\n    }, {\n        key: \"focus\",\n        set: function set(value) {\n            _set(PackedCargoBoxView.prototype.__proto__ || Object.getPrototypeOf(PackedCargoBoxView.prototype), \"focus\", value, this);\n\n            if (this[_wireMaterialSettings]) _Asset2.default.RestoreMaterial(this.wireMesh.material, this[_wireMaterialSettings]);\n\n            if (Math.abs(1 - value) > .0001) {\n                if (this[_wireMaterialSettings] === undefined) {\n                    this.wireMesh.material = this.wireMesh.material.clone();\n                    this[_wireMaterialSettings] = {};\n                    _Asset2.default.SetMaterialFocus(this.wireMesh.material, value, this[_wireMaterialSettings]);\n                } else {\n                    _Asset2.default.SetMaterialFocus(this.wireMesh.material, value);\n                }\n            }\n        },\n        get: function get() {\n            return _get(PackedCargoBoxView.prototype.__proto__ || Object.getPrototypeOf(PackedCargoBoxView.prototype), \"focus\", this);\n        }\n    }]);\n\n    return PackedCargoBoxView;\n}(_CargoBoxView3.default);\n\nexports.default = PackedCargoBoxView;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///71\n");

/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _UX = __webpack_require__(18);\n\nvar _UX2 = _interopRequireDefault(_UX);\n\nvar _Camera = __webpack_require__(14);\n\nvar _Camera2 = _interopRequireDefault(_Camera);\n\nvar _Utils = __webpack_require__(0);\n\nvar _Utils2 = _interopRequireDefault(_Utils);\n\nvar _CargoListView = __webpack_require__(19);\n\nvar _CargoListView2 = _interopRequireDefault(_CargoListView);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/** @typedef OrthoviewsNavigatorParams @property {UX} ux @property {Number} transitionDuration */\n/** @type {OrthoviewsNavigatorParams} */\nvar defaultParams = {\n    transitionDuration: 1\n};\n\nvar orthoviews = {\n    home: 'home',\n    top: 'top',\n    front: 'front',\n    side: 'side'\n};\n\nvar tempBox3 = new THREE.Box3(),\n    tempVec3 = new THREE.Vector3(),\n    tempCamOffset = new THREE.Vector3();\n\n/** @type {import('../scene/Camera').FrameCoords} */\nvar tempCoords = { position: new THREE.Vector3(), center: new THREE.Vector3() };\n\nvar _cargoListView = Symbol('cargoListView'),\n    _boundingView = Symbol('boundingView');\n\nvar OrthoviewsNavigator = function () {\n    /** @param {Camera} cameraController @param {OrthoviewsNavigatorParams} params */\n    function OrthoviewsNavigator(cameraController, params) {\n        _classCallCheck(this, OrthoviewsNavigator);\n\n        this.params = _Utils2.default.AssignUndefined(params, defaultParams);\n        this.cameraController = cameraController;\n\n        var Smart = __webpack_require__(20).default;\n        var Config = __webpack_require__(7).default;\n        var Control3D = __webpack_require__(21).default;\n\n        var scope = this;\n        var smart = new Smart(this.cameraController.camera, 'FOV');\n        smart.MakeShortcut('Configure');\n        function onChange() {\n            scope.cameraController.camera.updateProjectionMatrix();\n        }\n        smart.Config(null, this.cameraController.camera, onChange, Smart.serializeModes.none, 'fov');\n    }\n\n    /** @param {THREE.Object3D} boundingView */\n\n\n    _createClass(OrthoviewsNavigator, [{\n        key: \"Navigate\",\n\n\n        /** @param {orthoviews} viewType @param {Boolean} changeFOV */\n        value: function Navigate(viewType, changeFOV) {\n\n            var duration = 1;\n\n            var distanceMultiplier = .3;\n            var fov = changeFOV === undefined || changeFOV === true ? 8 : this.params.ux.params.fov;\n            var slideDown = true;\n\n            tempBox3.setFromObject(this.boundingView);\n\n            var orientation = tempCamOffset;\n            switch (viewType) {\n                case orthoviews.home:\n                    orientation.set(1, -1, 1);\n                    fov = this.params.ux.params.fov;\n                    distanceMultiplier = .5;\n                    break;\n\n                case orthoviews.top:\n                    orientation.set(0.01, -1, 0);\n                    distanceMultiplier = .3;\n                    break;\n\n                case orthoviews.front:\n                    this.cargoListView.SlideUp(tempBox3.max.y + 40 * this.params.ux.params.units, duration);\n                    distanceMultiplier = .2;\n                    slideDown = false;\n                    orientation.set(0, 0, 1);\n                    break;\n\n                case orthoviews.side:\n                    distanceMultiplier = .3;\n                    orientation.set(1, 0, 0);\n                    break;\n            }\n\n            if (slideDown) this.cargoListView.SlideDown(duration);\n\n            this.cameraController.TransitionToFOV(duration * 1.5, fov);\n\n            var endCoords = this.cameraController.CalcFrameCoords(tempBox3, distanceMultiplier, orientation, fov);\n            this.cameraController.TransitionFromToCoords(this.params.transitionDuration, undefined, endCoords);\n        }\n    }, {\n        key: \"boundingView\",\n        set: function set(value) {\n            this[_boundingView] = value;\n        },\n        get: function get() {\n            return this[_boundingView];\n        }\n\n        /** @param {CargoListView} value */\n\n    }, {\n        key: \"cargoListView\",\n        set: function set(value) {\n            this[_cargoListView] = value;\n        },\n        get: function get() {\n            return this[_cargoListView];\n        }\n    }], [{\n        key: \"orthoviews\",\n        get: function get() {\n            return orthoviews;\n        }\n    }]);\n\n    return OrthoviewsNavigator;\n}();\n\nexports.default = OrthoviewsNavigator;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///72\n");

/***/ })
/******/ ]);